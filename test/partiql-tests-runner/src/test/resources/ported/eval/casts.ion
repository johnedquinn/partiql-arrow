
{
  name:"CAST(DATE '2007-10-10' AS date)",
  statement:"CAST(DATE '2007-10-10' AS date)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$date::2007-10-10
  }
}
{
  name:"CAST(DATE '2007-10-10' AS symbol)",
  statement:"CAST(DATE '2007-10-10' AS symbol)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:'2007-10-10'
  }
}
{
  name:"CAST(DATE '2007-10-10' AS string)",
  statement:"CAST(DATE '2007-10-10' AS string)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"2007-10-10"
  }
}
{
  name:"CAST(DATE '2007-10-10' AS varchar(20))",
  statement:"CAST(DATE '2007-10-10' AS varchar(20))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"2007-10-10"
  }
}
{
  name:"CAST(TIME '23:12:12.1267' AS TIME)",
  statement:"CAST(TIME '23:12:12.1267' AS TIME)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$time::{
      hour:23,
      minute:12,
      second:12.1267,
      timezone_hour:null.int,
      timezone_minute:null.int
    }
  }
}
{
  name:"CAST(TIME '23:12:12.1267-05:30' AS TIME WITH TIME ZONE)",
  statement:"CAST(TIME '23:12:12.1267-05:30' AS TIME WITH TIME ZONE)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$time::{
      hour:23,
      minute:12,
      second:12.1267,
      timezone_hour:0,
      timezone_minute:0
    }
  }
}
{
  name:"CAST(TIME '23:12:12.1267+05:30' AS TIME (3))",
  statement:"CAST(TIME '23:12:12.1267+05:30' AS TIME (3))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$time::{
      hour:23,
      minute:12,
      second:12.127,
      timezone_hour:null.int,
      timezone_minute:null.int
    }
  }
}
{
  name:"CAST(TIME '23:12:12.1267-05:30' AS TIME (3) WITH TIME ZONE)",
  statement:"CAST(TIME '23:12:12.1267-05:30' AS TIME (3) WITH TIME ZONE)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$time::{
      hour:23,
      minute:12,
      second:12.127,
      timezone_hour:0,
      timezone_minute:0
    }
  }
}
{
  name:"CAST(TIME (3) '23:12:12.1267' AS TIME)",
  statement:"CAST(TIME (3) '23:12:12.1267' AS TIME)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$time::{
      hour:23,
      minute:12,
      second:12.127,
      timezone_hour:null.int,
      timezone_minute:null.int
    }
  }
}
{
  name:"CAST(TIME (3) '23:12:12.1267-05:30' AS TIME)",
  statement:"CAST(TIME (3) '23:12:12.1267-05:30' AS TIME)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$time::{
      hour:23,
      minute:12,
      second:12.127,
      timezone_hour:null.int,
      timezone_minute:null.int
    }
  }
}
{
  name:"CAST(TIME (3) '23:12:12.1267+05:30' AS TIME WITH TIME ZONE)",
  statement:"CAST(TIME (3) '23:12:12.1267+05:30' AS TIME WITH TIME ZONE)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$time::{
      hour:23,
      minute:12,
      second:12.127,
      timezone_hour:0,
      timezone_minute:0
    }
  }
}
{
  name:"CAST(TIME (3) '23:12:12.1267-05:30' AS TIME (9))",
  statement:"CAST(TIME (3) '23:12:12.1267-05:30' AS TIME (9))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$time::{
      hour:23,
      minute:12,
      second:12.127000000,
      timezone_hour:null.int,
      timezone_minute:null.int
    }
  }
}
{
  name:"CAST(TIME WITH TIME ZONE '23:12:12.1267' AS TIME)",
  statement:"CAST(TIME WITH TIME ZONE '23:12:12.1267' AS TIME)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$time::{
      hour:23,
      minute:12,
      second:12.1267,
      timezone_hour:null.int,
      timezone_minute:null.int
    }
  }
}
{
  name:"CAST(TIME WITH TIME ZONE '23:12:12.1267-05:30' AS TIME WITH TIME ZONE)",
  statement:"CAST(TIME WITH TIME ZONE '23:12:12.1267-05:30' AS TIME WITH TIME ZONE)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$time::{
      hour:23,
      minute:12,
      second:12.1267,
      timezone_hour:-5,
      timezone_minute:-30
    }
  }
}
{
  name:"CAST(TIME WITH TIME ZONE '23:12:12.1267+05:30' AS TIME (3) WITH TIME ZONE)",
  statement:"CAST(TIME WITH TIME ZONE '23:12:12.1267+05:30' AS TIME (3) WITH TIME ZONE)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$time::{
      hour:23,
      minute:12,
      second:12.127,
      timezone_hour:5,
      timezone_minute:30
    }
  }
}
{
  name:"CAST(TIME WITH TIME ZONE '23:12:12.1267-05:30' AS TIME)",
  statement:"CAST(TIME WITH TIME ZONE '23:12:12.1267-05:30' AS TIME)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$time::{
      hour:23,
      minute:12,
      second:12.1267,
      timezone_hour:null.int,
      timezone_minute:null.int
    }
  }
}
{
  name:"CAST(TIME (3) WITH TIME ZONE '23:12:12.1267' AS TIME)",
  statement:"CAST(TIME (3) WITH TIME ZONE '23:12:12.1267' AS TIME)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$time::{
      hour:23,
      minute:12,
      second:12.127,
      timezone_hour:null.int,
      timezone_minute:null.int
    }
  }
}
{
  name:"CAST(TIME (3) WITH TIME ZONE '23:12:12.1267-05:30' AS TIME WITH TIME ZONE)",
  statement:"CAST(TIME (3) WITH TIME ZONE '23:12:12.1267-05:30' AS TIME WITH TIME ZONE)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$time::{
      hour:23,
      minute:12,
      second:12.127,
      timezone_hour:-5,
      timezone_minute:-30
    }
  }
}
{
  name:"CAST(TIME (3) WITH TIME ZONE '23:12:12.1267+05:30' AS TIME (5))",
  statement:"CAST(TIME (3) WITH TIME ZONE '23:12:12.1267+05:30' AS TIME (5))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$time::{
      hour:23,
      minute:12,
      second:12.12700,
      timezone_hour:null.int,
      timezone_minute:null.int
    }
  }
}
{
  name:"CAST(TIME (3) WITH TIME ZONE '23:12:12.1267-05:30' AS TIME (5) WITH TIME ZONE)",
  statement:"CAST(TIME (3) WITH TIME ZONE '23:12:12.1267-05:30' AS TIME (5) WITH TIME ZONE)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$time::{
      hour:23,
      minute:12,
      second:12.12700,
      timezone_hour:-5,
      timezone_minute:-30
    }
  }
}
{
  name:"CAST(`2007-02-23T12:14:33.079Z` AS TIME)",
  statement:"CAST(`2007-02-23T12:14:33.079Z` AS TIME)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$time::{
      hour:12,
      minute:14,
      second:33.079,
      timezone_hour:null.int,
      timezone_minute:null.int
    }
  }
}
{
  name:"CAST(`2007-02-23T12:14:33.079-08:00` AS TIME)",
  statement:"CAST(`2007-02-23T12:14:33.079-08:00` AS TIME)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$time::{
      hour:12,
      minute:14,
      second:33.079,
      timezone_hour:null.int,
      timezone_minute:null.int
    }
  }
}
{
  name:"CAST(`2007-02-23T12:14:33.079Z` AS TIME WITH TIME ZONE)",
  statement:"CAST(`2007-02-23T12:14:33.079Z` AS TIME WITH TIME ZONE)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$time::{
      hour:12,
      minute:14,
      second:33.079,
      timezone_hour:0,
      timezone_minute:0
    }
  }
}
{
  name:"CAST(`2007-02-23T12:14:33.079-08:00` AS TIME (1))",
  statement:"CAST(`2007-02-23T12:14:33.079-08:00` AS TIME (1))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$time::{
      hour:12,
      minute:14,
      second:33.1,
      timezone_hour:null.int,
      timezone_minute:null.int
    }
  }
}
{
  name:"CAST(`2007-02-23T12:14:33.079-08:00` AS TIME (2) WITH TIME ZONE)",
  statement:"CAST(`2007-02-23T12:14:33.079-08:00` AS TIME (2) WITH TIME ZONE)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$time::{
      hour:12,
      minute:14,
      second:33.08,
      timezone_hour:-8,
      timezone_minute:0
    }
  }
}
{
  name:"CAST('23:12:12.1267' AS TIME)",
  statement:"CAST('23:12:12.1267' AS TIME)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$time::{
      hour:23,
      minute:12,
      second:12.1267,
      timezone_hour:null.int,
      timezone_minute:null.int
    }
  }
}
{
  name:"CAST('23:12:12.1267' AS TIME (2))",
  statement:"CAST('23:12:12.1267' AS TIME (2))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$time::{
      hour:23,
      minute:12,
      second:12.13,
      timezone_hour:null.int,
      timezone_minute:null.int
    }
  }
}
{
  name:"CAST('23:12:12.1267' AS TIME WITH TIME ZONE)",
  statement:"CAST('23:12:12.1267' AS TIME WITH TIME ZONE)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$time::{
      hour:23,
      minute:12,
      second:12.1267,
      timezone_hour:0,
      timezone_minute:0
    }
  }
}
{
  name:"CAST('23:12:12.1267' AS TIME (2) WITH TIME ZONE)",
  statement:"CAST('23:12:12.1267' AS TIME (2) WITH TIME ZONE)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$time::{
      hour:23,
      minute:12,
      second:12.13,
      timezone_hour:0,
      timezone_minute:0
    }
  }
}
{
  name:"CAST(`\"23:12:12.1267\"` AS TIME)",
  statement:"CAST(`\"23:12:12.1267\"` AS TIME)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$time::{
      hour:23,
      minute:12,
      second:12.1267,
      timezone_hour:null.int,
      timezone_minute:null.int
    }
  }
}
{
  name:"CAST(`\"23:12:12.1267\"` AS TIME (2))",
  statement:"CAST(`\"23:12:12.1267\"` AS TIME (2))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$time::{
      hour:23,
      minute:12,
      second:12.13,
      timezone_hour:null.int,
      timezone_minute:null.int
    }
  }
}
{
  name:"CAST(`\"23:12:12.1267\"` AS TIME WITH TIME ZONE)",
  statement:"CAST(`\"23:12:12.1267\"` AS TIME WITH TIME ZONE)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$time::{
      hour:23,
      minute:12,
      second:12.1267,
      timezone_hour:0,
      timezone_minute:0
    }
  }
}
{
  name:"CAST(`'23:12:12.1267'` AS TIME)",
  statement:"CAST(`'23:12:12.1267'` AS TIME)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$time::{
      hour:23,
      minute:12,
      second:12.1267,
      timezone_hour:null.int,
      timezone_minute:null.int
    }
  }
}
{
  name:"CAST(`'23:12:12.1267'` AS TIME (2))",
  statement:"CAST(`'23:12:12.1267'` AS TIME (2))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$time::{
      hour:23,
      minute:12,
      second:12.13,
      timezone_hour:null.int,
      timezone_minute:null.int
    }
  }
}
{
  name:"CAST(`'23:12:12.1267'` AS TIME WITH TIME ZONE)",
  statement:"CAST(`'23:12:12.1267'` AS TIME WITH TIME ZONE)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$time::{
      hour:23,
      minute:12,
      second:12.1267,
      timezone_hour:0,
      timezone_minute:0
    }
  }
}
{
  name:"CAST(`'23:12:12.1267'` AS TIME (2) WITH TIME ZONE)",
  statement:"CAST(`'23:12:12.1267'` AS TIME (2) WITH TIME ZONE)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$time::{
      hour:23,
      minute:12,
      second:12.13,
      timezone_hour:0,
      timezone_minute:0
    }
  }
}
{
  name:"CAST(`2007-02-23T` AS TIME WITH TIME ZONE)",
  statement:"CAST(`2007-02-23T` AS TIME WITH TIME ZONE)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`2007-02-23T12:14:33.079-00:00` AS TIME WITH TIME ZONE)",
  statement:"CAST(`2007-02-23T12:14:33.079-00:00` AS TIME WITH TIME ZONE)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('23:12:2.1267' AS TIME)",
  statement:"CAST('23:12:2.1267' AS TIME)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('2:12:2.1267' AS TIME (2))",
  statement:"CAST('2:12:2.1267' AS TIME (2))",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('25:12:2.1267' AS TIME WITH TIME ZONE)",
  statement:"CAST('25:12:2.1267' AS TIME WITH TIME ZONE)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('24:60:2.1267' AS TIME (2) WITH TIME ZONE)",
  statement:"CAST('24:60:2.1267' AS TIME (2) WITH TIME ZONE)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`\"12:60:12.1267\"` AS TIME)",
  statement:"CAST(`\"12:60:12.1267\"` AS TIME)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`\"23:1:12.1267\"` AS TIME (2))",
  statement:"CAST(`\"23:1:12.1267\"` AS TIME (2))",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`\"30:12:12.1267\"` AS TIME WITH TIME ZONE)",
  statement:"CAST(`\"30:12:12.1267\"` AS TIME WITH TIME ZONE)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`'23:12:60.1267'` AS TIME (2) WITH TIME ZONE)",
  statement:"CAST(`'23:12:60.1267'` AS TIME (2) WITH TIME ZONE)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`'23:12:1.1267'` AS TIME)",
  statement:"CAST(`'23:12:1.1267'` AS TIME)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`'2:12:12.1267'` AS TIME (2))",
  statement:"CAST(`'2:12:12.1267'` AS TIME (2))",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`'23:1:12.1267'` AS TIME WITH TIME ZONE)",
  statement:"CAST(`'23:1:12.1267'` AS TIME WITH TIME ZONE)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`'-23:41:12.1267'` AS TIME (2) WITH TIME ZONE)",
  statement:"CAST(`'-23:41:12.1267'` AS TIME (2) WITH TIME ZONE)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(TIME '23:12:12.1267' AS symbol)",
  statement:"CAST(TIME '23:12:12.1267' AS symbol)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:'23:12:12.1267'
  }
}
{
  name:"CAST(TIME '23:12:12.1267-05:30' AS symbol)",
  statement:"CAST(TIME '23:12:12.1267-05:30' AS symbol)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:'23:12:12.1267'
  }
}
{
  name:"CAST(TIME '23:12:12.1267+05:30' AS symbol)",
  statement:"CAST(TIME '23:12:12.1267+05:30' AS symbol)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:'23:12:12.1267'
  }
}
{
  name:"CAST(TIME (3) '23:12:12.1267' AS symbol)",
  statement:"CAST(TIME (3) '23:12:12.1267' AS symbol)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:'23:12:12.127'
  }
}
{
  name:"CAST(TIME (3) '23:12:12.1267-05:30' AS symbol)",
  statement:"CAST(TIME (3) '23:12:12.1267-05:30' AS symbol)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:'23:12:12.127'
  }
}
{
  name:"CAST(TIME (3) '23:12:12.1267+05:30' AS symbol)",
  statement:"CAST(TIME (3) '23:12:12.1267+05:30' AS symbol)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:'23:12:12.127'
  }
}
{
  name:"CAST(TIME WITH TIME ZONE '23:12:12.1267' AS symbol)",
  statement:"CAST(TIME WITH TIME ZONE '23:12:12.1267' AS symbol)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:'23:12:12.1267+00:00'
  }
}
{
  name:"CAST(TIME WITH TIME ZONE '23:12:12.1267-05:30' AS symbol)",
  statement:"CAST(TIME WITH TIME ZONE '23:12:12.1267-05:30' AS symbol)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:'23:12:12.1267-05:30'
  }
}
{
  name:"CAST(TIME WITH TIME ZONE '23:12:12.1267+05:30' AS symbol)",
  statement:"CAST(TIME WITH TIME ZONE '23:12:12.1267+05:30' AS symbol)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:'23:12:12.1267+05:30'
  }
}
{
  name:"CAST(TIME (3) WITH TIME ZONE '23:12:12.1267' AS symbol)",
  statement:"CAST(TIME (3) WITH TIME ZONE '23:12:12.1267' AS symbol)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:'23:12:12.127+00:00'
  }
}
{
  name:"CAST(TIME (3) WITH TIME ZONE '23:12:12.1267-05:30' AS symbol)",
  statement:"CAST(TIME (3) WITH TIME ZONE '23:12:12.1267-05:30' AS symbol)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:'23:12:12.127-05:30'
  }
}
{
  name:"CAST(TIME (3) WITH TIME ZONE '23:12:12.1267+05:30' AS symbol)",
  statement:"CAST(TIME (3) WITH TIME ZONE '23:12:12.1267+05:30' AS symbol)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:'23:12:12.127+05:30'
  }
}
{
  name:"CAST(TIME '23:12:12.1267' AS string)",
  statement:"CAST(TIME '23:12:12.1267' AS string)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"23:12:12.1267"
  }
}
{
  name:"CAST(TIME '23:12:12.1267' AS varchar(40))",
  statement:"CAST(TIME '23:12:12.1267' AS varchar(40))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"23:12:12.1267"
  }
}
{
  name:"CAST(TIME '23:12:12.1267-05:30' AS string)",
  statement:"CAST(TIME '23:12:12.1267-05:30' AS string)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"23:12:12.1267"
  }
}
{
  name:"CAST(TIME '23:12:12.1267-05:30' AS varchar(40))",
  statement:"CAST(TIME '23:12:12.1267-05:30' AS varchar(40))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"23:12:12.1267"
  }
}
{
  name:"CAST(TIME '23:12:12.1267+05:30' AS string)",
  statement:"CAST(TIME '23:12:12.1267+05:30' AS string)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"23:12:12.1267"
  }
}
{
  name:"CAST(TIME '23:12:12.1267+05:30' AS varchar(40))",
  statement:"CAST(TIME '23:12:12.1267+05:30' AS varchar(40))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"23:12:12.1267"
  }
}
{
  name:"CAST(TIME (3) '23:12:12.1267' AS string)",
  statement:"CAST(TIME (3) '23:12:12.1267' AS string)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"23:12:12.127"
  }
}
{
  name:"CAST(TIME (3) '23:12:12.1267' AS varchar(40))",
  statement:"CAST(TIME (3) '23:12:12.1267' AS varchar(40))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"23:12:12.127"
  }
}
{
  name:"CAST(TIME (3) '23:12:12.1267-05:30' AS string)",
  statement:"CAST(TIME (3) '23:12:12.1267-05:30' AS string)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"23:12:12.127"
  }
}
{
  name:"CAST(TIME (3) '23:12:12.1267-05:30' AS varchar(40))",
  statement:"CAST(TIME (3) '23:12:12.1267-05:30' AS varchar(40))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"23:12:12.127"
  }
}
{
  name:"CAST(TIME (3) '23:12:12.1267+05:30' AS string)",
  statement:"CAST(TIME (3) '23:12:12.1267+05:30' AS string)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"23:12:12.127"
  }
}
{
  name:"CAST(TIME (3) '23:12:12.1267+05:30' AS varchar(40))",
  statement:"CAST(TIME (3) '23:12:12.1267+05:30' AS varchar(40))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"23:12:12.127"
  }
}
{
  name:"CAST(TIME WITH TIME ZONE '23:12:12.1267' AS string)",
  statement:"CAST(TIME WITH TIME ZONE '23:12:12.1267' AS string)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"23:12:12.1267+00:00"
  }
}
{
  name:"CAST(TIME WITH TIME ZONE '23:12:12.1267' AS varchar(40))",
  statement:"CAST(TIME WITH TIME ZONE '23:12:12.1267' AS varchar(40))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"23:12:12.1267+00:00"
  }
}
{
  name:"CAST(TIME WITH TIME ZONE '23:12:12.1267-05:30' AS string)",
  statement:"CAST(TIME WITH TIME ZONE '23:12:12.1267-05:30' AS string)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"23:12:12.1267-05:30"
  }
}
{
  name:"CAST(TIME WITH TIME ZONE '23:12:12.1267-05:30' AS varchar(40))",
  statement:"CAST(TIME WITH TIME ZONE '23:12:12.1267-05:30' AS varchar(40))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"23:12:12.1267-05:30"
  }
}
{
  name:"CAST(TIME WITH TIME ZONE '23:12:12.1267+05:30' AS string)",
  statement:"CAST(TIME WITH TIME ZONE '23:12:12.1267+05:30' AS string)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"23:12:12.1267+05:30"
  }
}
{
  name:"CAST(TIME WITH TIME ZONE '23:12:12.1267+05:30' AS varchar(40))",
  statement:"CAST(TIME WITH TIME ZONE '23:12:12.1267+05:30' AS varchar(40))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"23:12:12.1267+05:30"
  }
}
{
  name:"CAST(TIME (3) WITH TIME ZONE '23:12:12.1267' AS string)",
  statement:"CAST(TIME (3) WITH TIME ZONE '23:12:12.1267' AS string)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"23:12:12.127+00:00"
  }
}
{
  name:"CAST(TIME (3) WITH TIME ZONE '23:12:12.1267' AS varchar(40))",
  statement:"CAST(TIME (3) WITH TIME ZONE '23:12:12.1267' AS varchar(40))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"23:12:12.127+00:00"
  }
}
{
  name:"CAST(TIME (3) WITH TIME ZONE '23:12:12.1267-05:30' AS string)",
  statement:"CAST(TIME (3) WITH TIME ZONE '23:12:12.1267-05:30' AS string)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"23:12:12.127-05:30"
  }
}
{
  name:"CAST(TIME (3) WITH TIME ZONE '23:12:12.1267-05:30' AS varchar(40))",
  statement:"CAST(TIME (3) WITH TIME ZONE '23:12:12.1267-05:30' AS varchar(40))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"23:12:12.127-05:30"
  }
}
{
  name:"CAST(TIME (3) WITH TIME ZONE '23:12:12.1267+05:30' AS string)",
  statement:"CAST(TIME (3) WITH TIME ZONE '23:12:12.1267+05:30' AS string)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"23:12:12.127+05:30"
  }
}
{
  name:"CAST(TIME (3) WITH TIME ZONE '23:12:12.1267+05:30' AS varchar(40))",
  statement:"CAST(TIME (3) WITH TIME ZONE '23:12:12.1267+05:30' AS varchar(40))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"23:12:12.127+05:30"
  }
}
{
  name:"CAST(DATE '2007-10-10' AS bool)",
  statement:"CAST(DATE '2007-10-10' AS bool)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(DATE '2007-10-10' AS boolean)",
  statement:"CAST(DATE '2007-10-10' AS boolean)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(DATE '2007-10-10' AS int)",
  statement:"CAST(DATE '2007-10-10' AS int)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(DATE '2007-10-10' AS smallint)",
  statement:"CAST(DATE '2007-10-10' AS smallint)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(DATE '2007-10-10' AS integer2)",
  statement:"CAST(DATE '2007-10-10' AS integer2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(DATE '2007-10-10' AS int2)",
  statement:"CAST(DATE '2007-10-10' AS int2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(DATE '2007-10-10' AS integer)",
  statement:"CAST(DATE '2007-10-10' AS integer)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(DATE '2007-10-10' AS integer4)",
  statement:"CAST(DATE '2007-10-10' AS integer4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(DATE '2007-10-10' AS int4)",
  statement:"CAST(DATE '2007-10-10' AS int4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(DATE '2007-10-10' AS integer8)",
  statement:"CAST(DATE '2007-10-10' AS integer8)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(DATE '2007-10-10' AS int8)",
  statement:"CAST(DATE '2007-10-10' AS int8)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(DATE '2007-10-10' AS bigint)",
  statement:"CAST(DATE '2007-10-10' AS bigint)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(DATE '2007-10-10' AS float)",
  statement:"CAST(DATE '2007-10-10' AS float)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(DATE '2007-10-10' AS real)",
  statement:"CAST(DATE '2007-10-10' AS real)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(DATE '2007-10-10' AS double precision)",
  statement:"CAST(DATE '2007-10-10' AS double precision)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(DATE '2007-10-10' AS dec)",
  statement:"CAST(DATE '2007-10-10' AS dec)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(DATE '2007-10-10' AS decimal)",
  statement:"CAST(DATE '2007-10-10' AS decimal)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(DATE '2007-10-10' AS numeric)",
  statement:"CAST(DATE '2007-10-10' AS numeric)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(DATE '2007-10-10' AS timestamp)",
  statement:"CAST(DATE '2007-10-10' AS timestamp)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(DATE '2007-10-10' AS clob)",
  statement:"CAST(DATE '2007-10-10' AS clob)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(DATE '2007-10-10' AS blob)",
  statement:"CAST(DATE '2007-10-10' AS blob)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(DATE '2007-10-10' AS list)",
  statement:"CAST(DATE '2007-10-10' AS list)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(DATE '2007-10-10' AS sexp)",
  statement:"CAST(DATE '2007-10-10' AS sexp)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(DATE '2007-10-10' AS struct)",
  statement:"CAST(DATE '2007-10-10' AS struct)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(DATE '2007-10-10' AS tuple)",
  statement:"CAST(DATE '2007-10-10' AS tuple)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(DATE '2007-10-10' AS bag)",
  statement:"CAST(DATE '2007-10-10' AS bag)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(NULL AS bool)",
  statement:"CAST(NULL AS bool)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:null
  }
}
{
  name:"CAST(NULL AS boolean)",
  statement:"CAST(NULL AS boolean)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:null
  }
}
{
  name:"CAST(NULL AS int)",
  statement:"CAST(NULL AS int)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:null
  }
}
{
  name:"CAST(NULL AS smallint)",
  statement:"CAST(NULL AS smallint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:null
  }
}
{
  name:"CAST(NULL AS integer2)",
  statement:"CAST(NULL AS integer2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:null
  }
}
{
  name:"CAST(NULL AS int2)",
  statement:"CAST(NULL AS int2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:null
  }
}
{
  name:"CAST(NULL AS integer)",
  statement:"CAST(NULL AS integer)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:null
  }
}
{
  name:"CAST(NULL AS integer4)",
  statement:"CAST(NULL AS integer4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:null
  }
}
{
  name:"CAST(NULL AS int4)",
  statement:"CAST(NULL AS int4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:null
  }
}
{
  name:"CAST(NULL AS integer8)",
  statement:"CAST(NULL AS integer8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:null
  }
}
{
  name:"CAST(NULL AS int8)",
  statement:"CAST(NULL AS int8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:null
  }
}
{
  name:"CAST(NULL AS bigint)",
  statement:"CAST(NULL AS bigint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:null
  }
}
{
  name:"CAST(NULL AS float)",
  statement:"CAST(NULL AS float)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:null
  }
}
{
  name:"CAST(NULL AS real)",
  statement:"CAST(NULL AS real)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:null
  }
}
{
  name:"CAST(NULL AS double precision)",
  statement:"CAST(NULL AS double precision)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:null
  }
}
{
  name:"CAST(NULL AS dec)",
  statement:"CAST(NULL AS dec)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:null
  }
}
{
  name:"CAST(NULL AS decimal)",
  statement:"CAST(NULL AS decimal)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:null
  }
}
{
  name:"CAST(NULL AS numeric)",
  statement:"CAST(NULL AS numeric)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:null
  }
}
{
  name:"CAST(NULL AS date)",
  statement:"CAST(NULL AS date)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:null
  }
}
{
  name:"CAST(NULL AS timestamp)",
  statement:"CAST(NULL AS timestamp)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:null
  }
}
{
  name:"CAST(NULL AS time)",
  statement:"CAST(NULL AS time)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:null
  }
}
{
  name:"CAST(NULL AS symbol)",
  statement:"CAST(NULL AS symbol)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:null
  }
}
{
  name:"CAST(NULL AS string)",
  statement:"CAST(NULL AS string)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:null
  }
}
{
  name:"CAST(NULL AS char)",
  statement:"CAST(NULL AS char)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:null
  }
}
{
  name:"CAST(NULL AS varchar)",
  statement:"CAST(NULL AS varchar)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:null
  }
}
{
  name:"CAST(NULL AS character)",
  statement:"CAST(NULL AS character)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:null
  }
}
{
  name:"CAST(NULL AS character varying)",
  statement:"CAST(NULL AS character varying)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:null
  }
}
{
  name:"CAST(NULL AS clob)",
  statement:"CAST(NULL AS clob)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:null
  }
}
{
  name:"CAST(NULL AS blob)",
  statement:"CAST(NULL AS blob)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:null
  }
}
{
  name:"CAST(NULL AS list)",
  statement:"CAST(NULL AS list)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:null
  }
}
{
  name:"CAST(NULL AS sexp)",
  statement:"CAST(NULL AS sexp)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:null
  }
}
{
  name:"CAST(NULL AS struct)",
  statement:"CAST(NULL AS struct)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:null
  }
}
{
  name:"CAST(NULL AS tuple)",
  statement:"CAST(NULL AS tuple)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:null
  }
}
{
  name:"CAST(NULL AS bag)",
  statement:"CAST(NULL AS bag)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:null
  }
}
{
  name:"CAST(MISSING AS bool)",
  statement:"CAST(MISSING AS bool)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$missing::null
  }
}
{
  name:"CAST(MISSING AS boolean)",
  statement:"CAST(MISSING AS boolean)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$missing::null
  }
}
{
  name:"CAST(MISSING AS int)",
  statement:"CAST(MISSING AS int)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$missing::null
  }
}
{
  name:"CAST(MISSING AS smallint)",
  statement:"CAST(MISSING AS smallint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$missing::null
  }
}
{
  name:"CAST(MISSING AS integer2)",
  statement:"CAST(MISSING AS integer2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$missing::null
  }
}
{
  name:"CAST(MISSING AS int2)",
  statement:"CAST(MISSING AS int2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$missing::null
  }
}
{
  name:"CAST(MISSING AS integer)",
  statement:"CAST(MISSING AS integer)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$missing::null
  }
}
{
  name:"CAST(MISSING AS integer4)",
  statement:"CAST(MISSING AS integer4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$missing::null
  }
}
{
  name:"CAST(MISSING AS int4)",
  statement:"CAST(MISSING AS int4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$missing::null
  }
}
{
  name:"CAST(MISSING AS integer8)",
  statement:"CAST(MISSING AS integer8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$missing::null
  }
}
{
  name:"CAST(MISSING AS int8)",
  statement:"CAST(MISSING AS int8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$missing::null
  }
}
{
  name:"CAST(MISSING AS bigint)",
  statement:"CAST(MISSING AS bigint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$missing::null
  }
}
{
  name:"CAST(MISSING AS float)",
  statement:"CAST(MISSING AS float)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$missing::null
  }
}
{
  name:"CAST(MISSING AS real)",
  statement:"CAST(MISSING AS real)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$missing::null
  }
}
{
  name:"CAST(MISSING AS double precision)",
  statement:"CAST(MISSING AS double precision)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$missing::null
  }
}
{
  name:"CAST(MISSING AS dec)",
  statement:"CAST(MISSING AS dec)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$missing::null
  }
}
{
  name:"CAST(MISSING AS decimal)",
  statement:"CAST(MISSING AS decimal)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$missing::null
  }
}
{
  name:"CAST(MISSING AS numeric)",
  statement:"CAST(MISSING AS numeric)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$missing::null
  }
}
{
  name:"CAST(MISSING AS date)",
  statement:"CAST(MISSING AS date)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$missing::null
  }
}
{
  name:"CAST(MISSING AS timestamp)",
  statement:"CAST(MISSING AS timestamp)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$missing::null
  }
}
{
  name:"CAST(MISSING AS time)",
  statement:"CAST(MISSING AS time)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$missing::null
  }
}
{
  name:"CAST(MISSING AS symbol)",
  statement:"CAST(MISSING AS symbol)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$missing::null
  }
}
{
  name:"CAST(MISSING AS string)",
  statement:"CAST(MISSING AS string)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$missing::null
  }
}
{
  name:"CAST(MISSING AS char)",
  statement:"CAST(MISSING AS char)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$missing::null
  }
}
{
  name:"CAST(MISSING AS varchar)",
  statement:"CAST(MISSING AS varchar)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$missing::null
  }
}
{
  name:"CAST(MISSING AS character)",
  statement:"CAST(MISSING AS character)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$missing::null
  }
}
{
  name:"CAST(MISSING AS character varying)",
  statement:"CAST(MISSING AS character varying)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$missing::null
  }
}
{
  name:"CAST(MISSING AS clob)",
  statement:"CAST(MISSING AS clob)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$missing::null
  }
}
{
  name:"CAST(MISSING AS blob)",
  statement:"CAST(MISSING AS blob)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$missing::null
  }
}
{
  name:"CAST(MISSING AS list)",
  statement:"CAST(MISSING AS list)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$missing::null
  }
}
{
  name:"CAST(MISSING AS sexp)",
  statement:"CAST(MISSING AS sexp)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$missing::null
  }
}
{
  name:"CAST(MISSING AS struct)",
  statement:"CAST(MISSING AS struct)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$missing::null
  }
}
{
  name:"CAST(MISSING AS tuple)",
  statement:"CAST(MISSING AS tuple)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$missing::null
  }
}
{
  name:"CAST(MISSING AS bag)",
  statement:"CAST(MISSING AS bag)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$missing::null
  }
}
{
  name:"CAST(TRUE AND FALSE AS bool)",
  statement:"CAST(TRUE AND FALSE AS bool)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:false
  }
}
{
  name:"CAST(TRUE AND FALSE AS boolean)",
  statement:"CAST(TRUE AND FALSE AS boolean)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:false
  }
}
{
  name:"CAST(`true` AS bool)",
  statement:"CAST(`true` AS bool)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:true
  }
}
{
  name:"CAST(`true` AS boolean)",
  statement:"CAST(`true` AS boolean)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:true
  }
}
{
  name:"CAST(5 AS bool)",
  statement:"CAST(5 AS bool)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:true
  }
}
{
  name:"CAST(5 AS boolean)",
  statement:"CAST(5 AS boolean)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:true
  }
}
{
  name:"CAST(`0e0` AS bool)",
  statement:"CAST(`0e0` AS bool)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:false
  }
}
{
  name:"CAST(`0e0` AS boolean)",
  statement:"CAST(`0e0` AS boolean)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:false
  }
}
{
  name:"CAST(1.1 AS bool)",
  statement:"CAST(1.1 AS bool)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:true
  }
}
{
  name:"CAST(1.1 AS boolean)",
  statement:"CAST(1.1 AS boolean)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:true
  }
}
{
  name:"CAST(`2007-10-10T` AS bool)",
  statement:"CAST(`2007-10-10T` AS bool)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`2007-10-10T` AS boolean)",
  statement:"CAST(`2007-10-10T` AS boolean)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('hello' AS bool)",
  statement:"CAST('hello' AS bool)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('hello' AS boolean)",
  statement:"CAST('hello' AS boolean)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('TrUe' AS bool)",
  statement:"CAST('TrUe' AS bool)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:true
  }
}
{
  name:"CAST('TrUe' AS boolean)",
  statement:"CAST('TrUe' AS boolean)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:true
  }
}
{
  name:"CAST(`\"FALSE\"` AS bool)",
  statement:"CAST(`\"FALSE\"` AS bool)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:false
  }
}
{
  name:"CAST(`\"FALSE\"` AS boolean)",
  statement:"CAST(`\"FALSE\"` AS boolean)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:false
  }
}
{
  name:"CAST(`'true'` AS bool)",
  statement:"CAST(`'true'` AS bool)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:true
  }
}
{
  name:"CAST(`'true'` AS boolean)",
  statement:"CAST(`'true'` AS boolean)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:true
  }
}
{
  name:"CAST(`{{\"\"}}` AS bool)",
  statement:"CAST(`{{\"\"}}` AS bool)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"\"}}` AS boolean)",
  statement:"CAST(`{{\"\"}}` AS boolean)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"goodbye\"}}` AS bool)",
  statement:"CAST(`{{\"goodbye\"}}` AS bool)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"goodbye\"}}` AS boolean)",
  statement:"CAST(`{{\"goodbye\"}}` AS boolean)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"false\"}}` AS bool)",
  statement:"CAST(`{{\"false\"}}` AS bool)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"false\"}}` AS boolean)",
  statement:"CAST(`{{\"false\"}}` AS boolean)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"true\"}}` AS bool)",
  statement:"CAST(`{{\"true\"}}` AS bool)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"true\"}}` AS boolean)",
  statement:"CAST(`{{\"true\"}}` AS boolean)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{}}` AS bool)",
  statement:"CAST(`{{}}` AS bool)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{}}` AS boolean)",
  statement:"CAST(`{{}}` AS boolean)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{Z29vZGJ5ZQ==}}` AS bool)",
  statement:"CAST(`{{Z29vZGJ5ZQ==}}` AS bool)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{Z29vZGJ5ZQ==}}` AS boolean)",
  statement:"CAST(`{{Z29vZGJ5ZQ==}}` AS boolean)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{ZmFsc2U=}}` AS bool)",
  statement:"CAST(`{{ZmFsc2U=}}` AS bool)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{ZmFsc2U=}}` AS boolean)",
  statement:"CAST(`{{ZmFsc2U=}}` AS boolean)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{dHJ1ZQ==}}` AS bool)",
  statement:"CAST(`{{dHJ1ZQ==}}` AS bool)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{dHJ1ZQ==}}` AS boolean)",
  statement:"CAST(`{{dHJ1ZQ==}}` AS boolean)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[]` AS bool)",
  statement:"CAST(`[]` AS bool)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[]` AS boolean)",
  statement:"CAST(`[]` AS boolean)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[true]` AS bool)",
  statement:"CAST(`[true]` AS bool)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[true]` AS boolean)",
  statement:"CAST(`[true]` AS boolean)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[false]` AS bool)",
  statement:"CAST(`[false]` AS bool)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[false]` AS boolean)",
  statement:"CAST(`[false]` AS boolean)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[true, false]` AS bool)",
  statement:"CAST(`[true, false]` AS bool)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[true, false]` AS boolean)",
  statement:"CAST(`[true, false]` AS boolean)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`()` AS bool)",
  statement:"CAST(`()` AS bool)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`()` AS boolean)",
  statement:"CAST(`()` AS boolean)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`(true)` AS bool)",
  statement:"CAST(`(true)` AS bool)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`(true)` AS boolean)",
  statement:"CAST(`(true)` AS boolean)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`(false)` AS bool)",
  statement:"CAST(`(false)` AS bool)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`(false)` AS boolean)",
  statement:"CAST(`(false)` AS boolean)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{}` AS bool)",
  statement:"CAST(`{}` AS bool)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{}` AS boolean)",
  statement:"CAST(`{}` AS boolean)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST({} AS bool)",
  statement:"CAST({} AS bool)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST({} AS boolean)",
  statement:"CAST({} AS boolean)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{a:true}` AS bool)",
  statement:"CAST(`{a:true}` AS bool)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{a:true}` AS boolean)",
  statement:"CAST(`{a:true}` AS boolean)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST({'b':true} AS bool)",
  statement:"CAST({'b':true} AS bool)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST({'b':true} AS boolean)",
  statement:"CAST({'b':true} AS boolean)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<>> AS bool)",
  statement:"CAST(<<>> AS bool)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<>> AS boolean)",
  statement:"CAST(<<>> AS boolean)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<true>> AS bool)",
  statement:"CAST(<<true>> AS bool)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<true>> AS boolean)",
  statement:"CAST(<<true>> AS boolean)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<false>> AS bool)",
  statement:"CAST(<<false>> AS bool)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<false>> AS boolean)",
  statement:"CAST(<<false>> AS boolean)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(TRUE AND FALSE AS int)",
  statement:"CAST(TRUE AND FALSE AS int)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST(TRUE AND FALSE AS smallint)",
  statement:"CAST(TRUE AND FALSE AS smallint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST(TRUE AND FALSE AS integer2)",
  statement:"CAST(TRUE AND FALSE AS integer2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST(TRUE AND FALSE AS int2)",
  statement:"CAST(TRUE AND FALSE AS int2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST(TRUE AND FALSE AS integer)",
  statement:"CAST(TRUE AND FALSE AS integer)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST(TRUE AND FALSE AS integer4)",
  statement:"CAST(TRUE AND FALSE AS integer4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST(TRUE AND FALSE AS int4)",
  statement:"CAST(TRUE AND FALSE AS int4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST(TRUE AND FALSE AS integer8)",
  statement:"CAST(TRUE AND FALSE AS integer8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST(TRUE AND FALSE AS int8)",
  statement:"CAST(TRUE AND FALSE AS int8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST(TRUE AND FALSE AS bigint)",
  statement:"CAST(TRUE AND FALSE AS bigint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST(`true` AS int)",
  statement:"CAST(`true` AS int)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:1
  }
}
{
  name:"CAST(`true` AS smallint)",
  statement:"CAST(`true` AS smallint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:1
  }
}
{
  name:"CAST(`true` AS integer2)",
  statement:"CAST(`true` AS integer2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:1
  }
}
{
  name:"CAST(`true` AS int2)",
  statement:"CAST(`true` AS int2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:1
  }
}
{
  name:"CAST(`true` AS integer)",
  statement:"CAST(`true` AS integer)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:1
  }
}
{
  name:"CAST(`true` AS integer4)",
  statement:"CAST(`true` AS integer4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:1
  }
}
{
  name:"CAST(`true` AS int4)",
  statement:"CAST(`true` AS int4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:1
  }
}
{
  name:"CAST(`true` AS integer8)",
  statement:"CAST(`true` AS integer8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:1
  }
}
{
  name:"CAST(`true` AS int8)",
  statement:"CAST(`true` AS int8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:1
  }
}
{
  name:"CAST(`true` AS bigint)",
  statement:"CAST(`true` AS bigint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:1
  }
}
{
  name:"CAST(5 AS int)",
  statement:"CAST(5 AS int)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:5
  }
}
{
  name:"CAST(5 AS smallint)",
  statement:"CAST(5 AS smallint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:5
  }
}
{
  name:"CAST(5 AS integer2)",
  statement:"CAST(5 AS integer2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:5
  }
}
{
  name:"CAST(5 AS int2)",
  statement:"CAST(5 AS int2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:5
  }
}
{
  name:"CAST(5 AS integer)",
  statement:"CAST(5 AS integer)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:5
  }
}
{
  name:"CAST(5 AS integer4)",
  statement:"CAST(5 AS integer4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:5
  }
}
{
  name:"CAST(5 AS int4)",
  statement:"CAST(5 AS int4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:5
  }
}
{
  name:"CAST(5 AS integer8)",
  statement:"CAST(5 AS integer8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:5
  }
}
{
  name:"CAST(5 AS int8)",
  statement:"CAST(5 AS int8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:5
  }
}
{
  name:"CAST(5 AS bigint)",
  statement:"CAST(5 AS bigint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:5
  }
}
{
  name:"CAST( 5  AS int)",
  statement:"CAST( 5  AS int)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:5
  }
}
{
  name:"CAST( 5  AS smallint)",
  statement:"CAST( 5  AS smallint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:5
  }
}
{
  name:"CAST( 5  AS integer2)",
  statement:"CAST( 5  AS integer2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:5
  }
}
{
  name:"CAST( 5  AS int2)",
  statement:"CAST( 5  AS int2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:5
  }
}
{
  name:"CAST( 5  AS integer)",
  statement:"CAST( 5  AS integer)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:5
  }
}
{
  name:"CAST( 5  AS integer4)",
  statement:"CAST( 5  AS integer4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:5
  }
}
{
  name:"CAST( 5  AS int4)",
  statement:"CAST( 5  AS int4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:5
  }
}
{
  name:"CAST( 5  AS integer8)",
  statement:"CAST( 5  AS integer8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:5
  }
}
{
  name:"CAST( 5  AS int8)",
  statement:"CAST( 5  AS int8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:5
  }
}
{
  name:"CAST( 5  AS bigint)",
  statement:"CAST( 5  AS bigint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:5
  }
}
{
  name:"CAST(`0e0` AS int)",
  statement:"CAST(`0e0` AS int)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST(`0e0` AS smallint)",
  statement:"CAST(`0e0` AS smallint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST(`0e0` AS integer2)",
  statement:"CAST(`0e0` AS integer2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST(`0e0` AS int2)",
  statement:"CAST(`0e0` AS int2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST(`0e0` AS integer)",
  statement:"CAST(`0e0` AS integer)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST(`0e0` AS integer4)",
  statement:"CAST(`0e0` AS integer4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST(`0e0` AS int4)",
  statement:"CAST(`0e0` AS int4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST(`0e0` AS integer8)",
  statement:"CAST(`0e0` AS integer8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST(`0e0` AS int8)",
  statement:"CAST(`0e0` AS int8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST(`0e0` AS bigint)",
  statement:"CAST(`0e0` AS bigint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST(1.1 AS int)",
  statement:"CAST(1.1 AS int)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:1
  }
}
{
  name:"CAST(1.1 AS smallint)",
  statement:"CAST(1.1 AS smallint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:1
  }
}
{
  name:"CAST(1.1 AS integer2)",
  statement:"CAST(1.1 AS integer2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:1
  }
}
{
  name:"CAST(1.1 AS int2)",
  statement:"CAST(1.1 AS int2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:1
  }
}
{
  name:"CAST(1.1 AS integer)",
  statement:"CAST(1.1 AS integer)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:1
  }
}
{
  name:"CAST(1.1 AS integer4)",
  statement:"CAST(1.1 AS integer4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:1
  }
}
{
  name:"CAST(1.1 AS int4)",
  statement:"CAST(1.1 AS int4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:1
  }
}
{
  name:"CAST(1.1 AS integer8)",
  statement:"CAST(1.1 AS integer8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:1
  }
}
{
  name:"CAST(1.1 AS int8)",
  statement:"CAST(1.1 AS int8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:1
  }
}
{
  name:"CAST(1.1 AS bigint)",
  statement:"CAST(1.1 AS bigint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:1
  }
}
{
  name:"CAST(-20.1 AS int)",
  statement:"CAST(-20.1 AS int)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-20
  }
}
{
  name:"CAST(-20.1 AS smallint)",
  statement:"CAST(-20.1 AS smallint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-20
  }
}
{
  name:"CAST(-20.1 AS integer2)",
  statement:"CAST(-20.1 AS integer2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-20
  }
}
{
  name:"CAST(-20.1 AS int2)",
  statement:"CAST(-20.1 AS int2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-20
  }
}
{
  name:"CAST(-20.1 AS integer)",
  statement:"CAST(-20.1 AS integer)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-20
  }
}
{
  name:"CAST(-20.1 AS integer4)",
  statement:"CAST(-20.1 AS integer4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-20
  }
}
{
  name:"CAST(-20.1 AS int4)",
  statement:"CAST(-20.1 AS int4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-20
  }
}
{
  name:"CAST(-20.1 AS integer8)",
  statement:"CAST(-20.1 AS integer8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-20
  }
}
{
  name:"CAST(-20.1 AS int8)",
  statement:"CAST(-20.1 AS int8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-20
  }
}
{
  name:"CAST(-20.1 AS bigint)",
  statement:"CAST(-20.1 AS bigint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-20
  }
}
{
  name:"CAST(`2007-10-10T` AS int)",
  statement:"CAST(`2007-10-10T` AS int)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`2007-10-10T` AS smallint)",
  statement:"CAST(`2007-10-10T` AS smallint)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`2007-10-10T` AS integer2)",
  statement:"CAST(`2007-10-10T` AS integer2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`2007-10-10T` AS int2)",
  statement:"CAST(`2007-10-10T` AS int2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`2007-10-10T` AS integer)",
  statement:"CAST(`2007-10-10T` AS integer)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`2007-10-10T` AS integer4)",
  statement:"CAST(`2007-10-10T` AS integer4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`2007-10-10T` AS int4)",
  statement:"CAST(`2007-10-10T` AS int4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`2007-10-10T` AS integer8)",
  statement:"CAST(`2007-10-10T` AS integer8)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`2007-10-10T` AS int8)",
  statement:"CAST(`2007-10-10T` AS int8)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`2007-10-10T` AS bigint)",
  statement:"CAST(`2007-10-10T` AS bigint)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('hello' AS int)",
  statement:"CAST('hello' AS int)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('hello' AS smallint)",
  statement:"CAST('hello' AS smallint)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('hello' AS integer2)",
  statement:"CAST('hello' AS integer2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('hello' AS int2)",
  statement:"CAST('hello' AS int2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('hello' AS integer)",
  statement:"CAST('hello' AS integer)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('hello' AS integer4)",
  statement:"CAST('hello' AS integer4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('hello' AS int4)",
  statement:"CAST('hello' AS int4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('hello' AS integer8)",
  statement:"CAST('hello' AS integer8)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('hello' AS int8)",
  statement:"CAST('hello' AS int8)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('hello' AS bigint)",
  statement:"CAST('hello' AS bigint)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('1234A' AS int)",
  statement:"CAST('1234A' AS int)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('1234A' AS smallint)",
  statement:"CAST('1234A' AS smallint)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('1234A' AS integer2)",
  statement:"CAST('1234A' AS integer2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('1234A' AS int2)",
  statement:"CAST('1234A' AS int2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('1234A' AS integer)",
  statement:"CAST('1234A' AS integer)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('1234A' AS integer4)",
  statement:"CAST('1234A' AS integer4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('1234A' AS int4)",
  statement:"CAST('1234A' AS int4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('1234A' AS integer8)",
  statement:"CAST('1234A' AS integer8)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('1234A' AS int8)",
  statement:"CAST('1234A' AS int8)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('1234A' AS bigint)",
  statement:"CAST('1234A' AS bigint)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('20' AS int)",
  statement:"CAST('20' AS int)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:20
  }
}
{
  name:"CAST('20' AS smallint)",
  statement:"CAST('20' AS smallint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:20
  }
}
{
  name:"CAST('20' AS integer2)",
  statement:"CAST('20' AS integer2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:20
  }
}
{
  name:"CAST('20' AS int2)",
  statement:"CAST('20' AS int2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:20
  }
}
{
  name:"CAST('20' AS integer)",
  statement:"CAST('20' AS integer)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:20
  }
}
{
  name:"CAST('20' AS integer4)",
  statement:"CAST('20' AS integer4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:20
  }
}
{
  name:"CAST('20' AS int4)",
  statement:"CAST('20' AS int4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:20
  }
}
{
  name:"CAST('20' AS integer8)",
  statement:"CAST('20' AS integer8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:20
  }
}
{
  name:"CAST('20' AS int8)",
  statement:"CAST('20' AS int8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:20
  }
}
{
  name:"CAST('20' AS bigint)",
  statement:"CAST('20' AS bigint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:20
  }
}
{
  name:"CAST('020' AS int)",
  statement:"CAST('020' AS int)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:20
  }
}
{
  name:"CAST('020' AS smallint)",
  statement:"CAST('020' AS smallint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:20
  }
}
{
  name:"CAST('020' AS integer2)",
  statement:"CAST('020' AS integer2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:20
  }
}
{
  name:"CAST('020' AS int2)",
  statement:"CAST('020' AS int2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:20
  }
}
{
  name:"CAST('020' AS integer)",
  statement:"CAST('020' AS integer)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:20
  }
}
{
  name:"CAST('020' AS integer4)",
  statement:"CAST('020' AS integer4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:20
  }
}
{
  name:"CAST('020' AS int4)",
  statement:"CAST('020' AS int4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:20
  }
}
{
  name:"CAST('020' AS integer8)",
  statement:"CAST('020' AS integer8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:20
  }
}
{
  name:"CAST('020' AS int8)",
  statement:"CAST('020' AS int8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:20
  }
}
{
  name:"CAST('020' AS bigint)",
  statement:"CAST('020' AS bigint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:20
  }
}
{
  name:"CAST('+20' AS int)",
  statement:"CAST('+20' AS int)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:20
  }
}
{
  name:"CAST('+20' AS smallint)",
  statement:"CAST('+20' AS smallint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:20
  }
}
{
  name:"CAST('+20' AS integer2)",
  statement:"CAST('+20' AS integer2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:20
  }
}
{
  name:"CAST('+20' AS int2)",
  statement:"CAST('+20' AS int2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:20
  }
}
{
  name:"CAST('+20' AS integer)",
  statement:"CAST('+20' AS integer)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:20
  }
}
{
  name:"CAST('+20' AS integer4)",
  statement:"CAST('+20' AS integer4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:20
  }
}
{
  name:"CAST('+20' AS int4)",
  statement:"CAST('+20' AS int4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:20
  }
}
{
  name:"CAST('+20' AS integer8)",
  statement:"CAST('+20' AS integer8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:20
  }
}
{
  name:"CAST('+20' AS int8)",
  statement:"CAST('+20' AS int8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:20
  }
}
{
  name:"CAST('+20' AS bigint)",
  statement:"CAST('+20' AS bigint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:20
  }
}
{
  name:"CAST('+020' AS int)",
  statement:"CAST('+020' AS int)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:20
  }
}
{
  name:"CAST('+020' AS smallint)",
  statement:"CAST('+020' AS smallint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:20
  }
}
{
  name:"CAST('+020' AS integer2)",
  statement:"CAST('+020' AS integer2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:20
  }
}
{
  name:"CAST('+020' AS int2)",
  statement:"CAST('+020' AS int2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:20
  }
}
{
  name:"CAST('+020' AS integer)",
  statement:"CAST('+020' AS integer)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:20
  }
}
{
  name:"CAST('+020' AS integer4)",
  statement:"CAST('+020' AS integer4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:20
  }
}
{
  name:"CAST('+020' AS int4)",
  statement:"CAST('+020' AS int4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:20
  }
}
{
  name:"CAST('+020' AS integer8)",
  statement:"CAST('+020' AS integer8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:20
  }
}
{
  name:"CAST('+020' AS int8)",
  statement:"CAST('+020' AS int8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:20
  }
}
{
  name:"CAST('+020' AS bigint)",
  statement:"CAST('+020' AS bigint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:20
  }
}
{
  name:"CAST('-20' AS int)",
  statement:"CAST('-20' AS int)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-20
  }
}
{
  name:"CAST('-20' AS smallint)",
  statement:"CAST('-20' AS smallint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-20
  }
}
{
  name:"CAST('-20' AS integer2)",
  statement:"CAST('-20' AS integer2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-20
  }
}
{
  name:"CAST('-20' AS int2)",
  statement:"CAST('-20' AS int2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-20
  }
}
{
  name:"CAST('-20' AS integer)",
  statement:"CAST('-20' AS integer)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-20
  }
}
{
  name:"CAST('-20' AS integer4)",
  statement:"CAST('-20' AS integer4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-20
  }
}
{
  name:"CAST('-20' AS int4)",
  statement:"CAST('-20' AS int4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-20
  }
}
{
  name:"CAST('-20' AS integer8)",
  statement:"CAST('-20' AS integer8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-20
  }
}
{
  name:"CAST('-20' AS int8)",
  statement:"CAST('-20' AS int8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-20
  }
}
{
  name:"CAST('-20' AS bigint)",
  statement:"CAST('-20' AS bigint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-20
  }
}
{
  name:"CAST('-020' AS int)",
  statement:"CAST('-020' AS int)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-20
  }
}
{
  name:"CAST('-020' AS smallint)",
  statement:"CAST('-020' AS smallint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-20
  }
}
{
  name:"CAST('-020' AS integer2)",
  statement:"CAST('-020' AS integer2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-20
  }
}
{
  name:"CAST('-020' AS int2)",
  statement:"CAST('-020' AS int2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-20
  }
}
{
  name:"CAST('-020' AS integer)",
  statement:"CAST('-020' AS integer)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-20
  }
}
{
  name:"CAST('-020' AS integer4)",
  statement:"CAST('-020' AS integer4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-20
  }
}
{
  name:"CAST('-020' AS int4)",
  statement:"CAST('-020' AS int4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-20
  }
}
{
  name:"CAST('-020' AS integer8)",
  statement:"CAST('-020' AS integer8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-20
  }
}
{
  name:"CAST('-020' AS int8)",
  statement:"CAST('-020' AS int8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-20
  }
}
{
  name:"CAST('-020' AS bigint)",
  statement:"CAST('-020' AS bigint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-20
  }
}
{
  name:"CAST('0' AS int)",
  statement:"CAST('0' AS int)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST('0' AS smallint)",
  statement:"CAST('0' AS smallint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST('0' AS integer2)",
  statement:"CAST('0' AS integer2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST('0' AS int2)",
  statement:"CAST('0' AS int2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST('0' AS integer)",
  statement:"CAST('0' AS integer)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST('0' AS integer4)",
  statement:"CAST('0' AS integer4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST('0' AS int4)",
  statement:"CAST('0' AS int4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST('0' AS integer8)",
  statement:"CAST('0' AS integer8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST('0' AS int8)",
  statement:"CAST('0' AS int8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST('0' AS bigint)",
  statement:"CAST('0' AS bigint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST('00' AS int)",
  statement:"CAST('00' AS int)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST('00' AS smallint)",
  statement:"CAST('00' AS smallint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST('00' AS integer2)",
  statement:"CAST('00' AS integer2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST('00' AS int2)",
  statement:"CAST('00' AS int2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST('00' AS integer)",
  statement:"CAST('00' AS integer)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST('00' AS integer4)",
  statement:"CAST('00' AS integer4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST('00' AS int4)",
  statement:"CAST('00' AS int4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST('00' AS integer8)",
  statement:"CAST('00' AS integer8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST('00' AS int8)",
  statement:"CAST('00' AS int8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST('00' AS bigint)",
  statement:"CAST('00' AS bigint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST('+0' AS int)",
  statement:"CAST('+0' AS int)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST('+0' AS smallint)",
  statement:"CAST('+0' AS smallint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST('+0' AS integer2)",
  statement:"CAST('+0' AS integer2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST('+0' AS int2)",
  statement:"CAST('+0' AS int2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST('+0' AS integer)",
  statement:"CAST('+0' AS integer)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST('+0' AS integer4)",
  statement:"CAST('+0' AS integer4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST('+0' AS int4)",
  statement:"CAST('+0' AS int4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST('+0' AS integer8)",
  statement:"CAST('+0' AS integer8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST('+0' AS int8)",
  statement:"CAST('+0' AS int8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST('+0' AS bigint)",
  statement:"CAST('+0' AS bigint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST('+00' AS int)",
  statement:"CAST('+00' AS int)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST('+00' AS smallint)",
  statement:"CAST('+00' AS smallint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST('+00' AS integer2)",
  statement:"CAST('+00' AS integer2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST('+00' AS int2)",
  statement:"CAST('+00' AS int2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST('+00' AS integer)",
  statement:"CAST('+00' AS integer)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST('+00' AS integer4)",
  statement:"CAST('+00' AS integer4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST('+00' AS int4)",
  statement:"CAST('+00' AS int4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST('+00' AS integer8)",
  statement:"CAST('+00' AS integer8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST('+00' AS int8)",
  statement:"CAST('+00' AS int8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST('+00' AS bigint)",
  statement:"CAST('+00' AS bigint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST('-0' AS int)",
  statement:"CAST('-0' AS int)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST('-0' AS smallint)",
  statement:"CAST('-0' AS smallint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST('-0' AS integer2)",
  statement:"CAST('-0' AS integer2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST('-0' AS int2)",
  statement:"CAST('-0' AS int2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST('-0' AS integer)",
  statement:"CAST('-0' AS integer)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST('-0' AS integer4)",
  statement:"CAST('-0' AS integer4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST('-0' AS int4)",
  statement:"CAST('-0' AS int4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST('-0' AS integer8)",
  statement:"CAST('-0' AS integer8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST('-0' AS int8)",
  statement:"CAST('-0' AS int8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST('-0' AS bigint)",
  statement:"CAST('-0' AS bigint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST('-00' AS int)",
  statement:"CAST('-00' AS int)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST('-00' AS smallint)",
  statement:"CAST('-00' AS smallint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST('-00' AS integer2)",
  statement:"CAST('-00' AS integer2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST('-00' AS int2)",
  statement:"CAST('-00' AS int2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST('-00' AS integer)",
  statement:"CAST('-00' AS integer)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST('-00' AS integer4)",
  statement:"CAST('-00' AS integer4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST('-00' AS int4)",
  statement:"CAST('-00' AS int4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST('-00' AS integer8)",
  statement:"CAST('-00' AS integer8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST('-00' AS int8)",
  statement:"CAST('-00' AS int8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST('-00' AS bigint)",
  statement:"CAST('-00' AS bigint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0
  }
}
{
  name:"CAST('0xA' AS int)",
  statement:"CAST('0xA' AS int)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:10
  }
}
{
  name:"CAST('0xA' AS smallint)",
  statement:"CAST('0xA' AS smallint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:10
  }
}
{
  name:"CAST('0xA' AS integer2)",
  statement:"CAST('0xA' AS integer2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:10
  }
}
{
  name:"CAST('0xA' AS int2)",
  statement:"CAST('0xA' AS int2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:10
  }
}
{
  name:"CAST('0xA' AS integer)",
  statement:"CAST('0xA' AS integer)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:10
  }
}
{
  name:"CAST('0xA' AS integer4)",
  statement:"CAST('0xA' AS integer4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:10
  }
}
{
  name:"CAST('0xA' AS int4)",
  statement:"CAST('0xA' AS int4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:10
  }
}
{
  name:"CAST('0xA' AS integer8)",
  statement:"CAST('0xA' AS integer8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:10
  }
}
{
  name:"CAST('0xA' AS int8)",
  statement:"CAST('0xA' AS int8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:10
  }
}
{
  name:"CAST('0xA' AS bigint)",
  statement:"CAST('0xA' AS bigint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:10
  }
}
{
  name:"CAST('0XA' AS int)",
  statement:"CAST('0XA' AS int)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:10
  }
}
{
  name:"CAST('0XA' AS smallint)",
  statement:"CAST('0XA' AS smallint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:10
  }
}
{
  name:"CAST('0XA' AS integer2)",
  statement:"CAST('0XA' AS integer2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:10
  }
}
{
  name:"CAST('0XA' AS int2)",
  statement:"CAST('0XA' AS int2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:10
  }
}
{
  name:"CAST('0XA' AS integer)",
  statement:"CAST('0XA' AS integer)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:10
  }
}
{
  name:"CAST('0XA' AS integer4)",
  statement:"CAST('0XA' AS integer4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:10
  }
}
{
  name:"CAST('0XA' AS int4)",
  statement:"CAST('0XA' AS int4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:10
  }
}
{
  name:"CAST('0XA' AS integer8)",
  statement:"CAST('0XA' AS integer8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:10
  }
}
{
  name:"CAST('0XA' AS int8)",
  statement:"CAST('0XA' AS int8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:10
  }
}
{
  name:"CAST('0XA' AS bigint)",
  statement:"CAST('0XA' AS bigint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:10
  }
}
{
  name:"CAST('0x0A' AS int)",
  statement:"CAST('0x0A' AS int)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:10
  }
}
{
  name:"CAST('0x0A' AS smallint)",
  statement:"CAST('0x0A' AS smallint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:10
  }
}
{
  name:"CAST('0x0A' AS integer2)",
  statement:"CAST('0x0A' AS integer2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:10
  }
}
{
  name:"CAST('0x0A' AS int2)",
  statement:"CAST('0x0A' AS int2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:10
  }
}
{
  name:"CAST('0x0A' AS integer)",
  statement:"CAST('0x0A' AS integer)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:10
  }
}
{
  name:"CAST('0x0A' AS integer4)",
  statement:"CAST('0x0A' AS integer4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:10
  }
}
{
  name:"CAST('0x0A' AS int4)",
  statement:"CAST('0x0A' AS int4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:10
  }
}
{
  name:"CAST('0x0A' AS integer8)",
  statement:"CAST('0x0A' AS integer8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:10
  }
}
{
  name:"CAST('0x0A' AS int8)",
  statement:"CAST('0x0A' AS int8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:10
  }
}
{
  name:"CAST('0x0A' AS bigint)",
  statement:"CAST('0x0A' AS bigint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:10
  }
}
{
  name:"CAST('+0xA' AS int)",
  statement:"CAST('+0xA' AS int)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:10
  }
}
{
  name:"CAST('+0xA' AS smallint)",
  statement:"CAST('+0xA' AS smallint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:10
  }
}
{
  name:"CAST('+0xA' AS integer2)",
  statement:"CAST('+0xA' AS integer2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:10
  }
}
{
  name:"CAST('+0xA' AS int2)",
  statement:"CAST('+0xA' AS int2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:10
  }
}
{
  name:"CAST('+0xA' AS integer)",
  statement:"CAST('+0xA' AS integer)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:10
  }
}
{
  name:"CAST('+0xA' AS integer4)",
  statement:"CAST('+0xA' AS integer4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:10
  }
}
{
  name:"CAST('+0xA' AS int4)",
  statement:"CAST('+0xA' AS int4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:10
  }
}
{
  name:"CAST('+0xA' AS integer8)",
  statement:"CAST('+0xA' AS integer8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:10
  }
}
{
  name:"CAST('+0xA' AS int8)",
  statement:"CAST('+0xA' AS int8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:10
  }
}
{
  name:"CAST('+0xA' AS bigint)",
  statement:"CAST('+0xA' AS bigint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:10
  }
}
{
  name:"CAST('+0x0A' AS int)",
  statement:"CAST('+0x0A' AS int)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:10
  }
}
{
  name:"CAST('+0x0A' AS smallint)",
  statement:"CAST('+0x0A' AS smallint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:10
  }
}
{
  name:"CAST('+0x0A' AS integer2)",
  statement:"CAST('+0x0A' AS integer2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:10
  }
}
{
  name:"CAST('+0x0A' AS int2)",
  statement:"CAST('+0x0A' AS int2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:10
  }
}
{
  name:"CAST('+0x0A' AS integer)",
  statement:"CAST('+0x0A' AS integer)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:10
  }
}
{
  name:"CAST('+0x0A' AS integer4)",
  statement:"CAST('+0x0A' AS integer4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:10
  }
}
{
  name:"CAST('+0x0A' AS int4)",
  statement:"CAST('+0x0A' AS int4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:10
  }
}
{
  name:"CAST('+0x0A' AS integer8)",
  statement:"CAST('+0x0A' AS integer8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:10
  }
}
{
  name:"CAST('+0x0A' AS int8)",
  statement:"CAST('+0x0A' AS int8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:10
  }
}
{
  name:"CAST('+0x0A' AS bigint)",
  statement:"CAST('+0x0A' AS bigint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:10
  }
}
{
  name:"CAST('-0xA' AS int)",
  statement:"CAST('-0xA' AS int)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-10
  }
}
{
  name:"CAST('-0xA' AS smallint)",
  statement:"CAST('-0xA' AS smallint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-10
  }
}
{
  name:"CAST('-0xA' AS integer2)",
  statement:"CAST('-0xA' AS integer2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-10
  }
}
{
  name:"CAST('-0xA' AS int2)",
  statement:"CAST('-0xA' AS int2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-10
  }
}
{
  name:"CAST('-0xA' AS integer)",
  statement:"CAST('-0xA' AS integer)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-10
  }
}
{
  name:"CAST('-0xA' AS integer4)",
  statement:"CAST('-0xA' AS integer4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-10
  }
}
{
  name:"CAST('-0xA' AS int4)",
  statement:"CAST('-0xA' AS int4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-10
  }
}
{
  name:"CAST('-0xA' AS integer8)",
  statement:"CAST('-0xA' AS integer8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-10
  }
}
{
  name:"CAST('-0xA' AS int8)",
  statement:"CAST('-0xA' AS int8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-10
  }
}
{
  name:"CAST('-0xA' AS bigint)",
  statement:"CAST('-0xA' AS bigint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-10
  }
}
{
  name:"CAST('-0x0A' AS int)",
  statement:"CAST('-0x0A' AS int)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-10
  }
}
{
  name:"CAST('-0x0A' AS smallint)",
  statement:"CAST('-0x0A' AS smallint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-10
  }
}
{
  name:"CAST('-0x0A' AS integer2)",
  statement:"CAST('-0x0A' AS integer2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-10
  }
}
{
  name:"CAST('-0x0A' AS int2)",
  statement:"CAST('-0x0A' AS int2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-10
  }
}
{
  name:"CAST('-0x0A' AS integer)",
  statement:"CAST('-0x0A' AS integer)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-10
  }
}
{
  name:"CAST('-0x0A' AS integer4)",
  statement:"CAST('-0x0A' AS integer4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-10
  }
}
{
  name:"CAST('-0x0A' AS int4)",
  statement:"CAST('-0x0A' AS int4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-10
  }
}
{
  name:"CAST('-0x0A' AS integer8)",
  statement:"CAST('-0x0A' AS integer8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-10
  }
}
{
  name:"CAST('-0x0A' AS int8)",
  statement:"CAST('-0x0A' AS int8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-10
  }
}
{
  name:"CAST('-0x0A' AS bigint)",
  statement:"CAST('-0x0A' AS bigint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-10
  }
}
{
  name:"CAST('0b10' AS int)",
  statement:"CAST('0b10' AS int)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST('0b10' AS smallint)",
  statement:"CAST('0b10' AS smallint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST('0b10' AS integer2)",
  statement:"CAST('0b10' AS integer2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST('0b10' AS int2)",
  statement:"CAST('0b10' AS int2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST('0b10' AS integer)",
  statement:"CAST('0b10' AS integer)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST('0b10' AS integer4)",
  statement:"CAST('0b10' AS integer4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST('0b10' AS int4)",
  statement:"CAST('0b10' AS int4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST('0b10' AS integer8)",
  statement:"CAST('0b10' AS integer8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST('0b10' AS int8)",
  statement:"CAST('0b10' AS int8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST('0b10' AS bigint)",
  statement:"CAST('0b10' AS bigint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST('0B10' AS int)",
  statement:"CAST('0B10' AS int)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST('0B10' AS smallint)",
  statement:"CAST('0B10' AS smallint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST('0B10' AS integer2)",
  statement:"CAST('0B10' AS integer2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST('0B10' AS int2)",
  statement:"CAST('0B10' AS int2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST('0B10' AS integer)",
  statement:"CAST('0B10' AS integer)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST('0B10' AS integer4)",
  statement:"CAST('0B10' AS integer4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST('0B10' AS int4)",
  statement:"CAST('0B10' AS int4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST('0B10' AS integer8)",
  statement:"CAST('0B10' AS integer8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST('0B10' AS int8)",
  statement:"CAST('0B10' AS int8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST('0B10' AS bigint)",
  statement:"CAST('0B10' AS bigint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST('0b010' AS int)",
  statement:"CAST('0b010' AS int)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST('0b010' AS smallint)",
  statement:"CAST('0b010' AS smallint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST('0b010' AS integer2)",
  statement:"CAST('0b010' AS integer2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST('0b010' AS int2)",
  statement:"CAST('0b010' AS int2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST('0b010' AS integer)",
  statement:"CAST('0b010' AS integer)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST('0b010' AS integer4)",
  statement:"CAST('0b010' AS integer4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST('0b010' AS int4)",
  statement:"CAST('0b010' AS int4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST('0b010' AS integer8)",
  statement:"CAST('0b010' AS integer8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST('0b010' AS int8)",
  statement:"CAST('0b010' AS int8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST('0b010' AS bigint)",
  statement:"CAST('0b010' AS bigint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST('+0b10' AS int)",
  statement:"CAST('+0b10' AS int)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST('+0b10' AS smallint)",
  statement:"CAST('+0b10' AS smallint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST('+0b10' AS integer2)",
  statement:"CAST('+0b10' AS integer2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST('+0b10' AS int2)",
  statement:"CAST('+0b10' AS int2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST('+0b10' AS integer)",
  statement:"CAST('+0b10' AS integer)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST('+0b10' AS integer4)",
  statement:"CAST('+0b10' AS integer4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST('+0b10' AS int4)",
  statement:"CAST('+0b10' AS int4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST('+0b10' AS integer8)",
  statement:"CAST('+0b10' AS integer8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST('+0b10' AS int8)",
  statement:"CAST('+0b10' AS int8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST('+0b10' AS bigint)",
  statement:"CAST('+0b10' AS bigint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST('+0b010' AS int)",
  statement:"CAST('+0b010' AS int)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST('+0b010' AS smallint)",
  statement:"CAST('+0b010' AS smallint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST('+0b010' AS integer2)",
  statement:"CAST('+0b010' AS integer2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST('+0b010' AS int2)",
  statement:"CAST('+0b010' AS int2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST('+0b010' AS integer)",
  statement:"CAST('+0b010' AS integer)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST('+0b010' AS integer4)",
  statement:"CAST('+0b010' AS integer4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST('+0b010' AS int4)",
  statement:"CAST('+0b010' AS int4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST('+0b010' AS integer8)",
  statement:"CAST('+0b010' AS integer8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST('+0b010' AS int8)",
  statement:"CAST('+0b010' AS int8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST('+0b010' AS bigint)",
  statement:"CAST('+0b010' AS bigint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST('-0b10' AS int)",
  statement:"CAST('-0b10' AS int)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-2
  }
}
{
  name:"CAST('-0b10' AS smallint)",
  statement:"CAST('-0b10' AS smallint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-2
  }
}
{
  name:"CAST('-0b10' AS integer2)",
  statement:"CAST('-0b10' AS integer2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-2
  }
}
{
  name:"CAST('-0b10' AS int2)",
  statement:"CAST('-0b10' AS int2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-2
  }
}
{
  name:"CAST('-0b10' AS integer)",
  statement:"CAST('-0b10' AS integer)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-2
  }
}
{
  name:"CAST('-0b10' AS integer4)",
  statement:"CAST('-0b10' AS integer4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-2
  }
}
{
  name:"CAST('-0b10' AS int4)",
  statement:"CAST('-0b10' AS int4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-2
  }
}
{
  name:"CAST('-0b10' AS integer8)",
  statement:"CAST('-0b10' AS integer8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-2
  }
}
{
  name:"CAST('-0b10' AS int8)",
  statement:"CAST('-0b10' AS int8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-2
  }
}
{
  name:"CAST('-0b10' AS bigint)",
  statement:"CAST('-0b10' AS bigint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-2
  }
}
{
  name:"CAST('-0b010' AS int)",
  statement:"CAST('-0b010' AS int)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-2
  }
}
{
  name:"CAST('-0b010' AS smallint)",
  statement:"CAST('-0b010' AS smallint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-2
  }
}
{
  name:"CAST('-0b010' AS integer2)",
  statement:"CAST('-0b010' AS integer2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-2
  }
}
{
  name:"CAST('-0b010' AS int2)",
  statement:"CAST('-0b010' AS int2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-2
  }
}
{
  name:"CAST('-0b010' AS integer)",
  statement:"CAST('-0b010' AS integer)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-2
  }
}
{
  name:"CAST('-0b010' AS integer4)",
  statement:"CAST('-0b010' AS integer4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-2
  }
}
{
  name:"CAST('-0b010' AS int4)",
  statement:"CAST('-0b010' AS int4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-2
  }
}
{
  name:"CAST('-0b010' AS integer8)",
  statement:"CAST('-0b010' AS integer8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-2
  }
}
{
  name:"CAST('-0b010' AS int8)",
  statement:"CAST('-0b010' AS int8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-2
  }
}
{
  name:"CAST('-0b010' AS bigint)",
  statement:"CAST('-0b010' AS bigint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-2
  }
}
{
  name:"CAST(`\"1000\"` AS int)",
  statement:"CAST(`\"1000\"` AS int)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:1000
  }
}
{
  name:"CAST(`\"1000\"` AS smallint)",
  statement:"CAST(`\"1000\"` AS smallint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:1000
  }
}
{
  name:"CAST(`\"1000\"` AS integer2)",
  statement:"CAST(`\"1000\"` AS integer2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:1000
  }
}
{
  name:"CAST(`\"1000\"` AS int2)",
  statement:"CAST(`\"1000\"` AS int2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:1000
  }
}
{
  name:"CAST(`\"1000\"` AS integer)",
  statement:"CAST(`\"1000\"` AS integer)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:1000
  }
}
{
  name:"CAST(`\"1000\"` AS integer4)",
  statement:"CAST(`\"1000\"` AS integer4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:1000
  }
}
{
  name:"CAST(`\"1000\"` AS int4)",
  statement:"CAST(`\"1000\"` AS int4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:1000
  }
}
{
  name:"CAST(`\"1000\"` AS integer8)",
  statement:"CAST(`\"1000\"` AS integer8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:1000
  }
}
{
  name:"CAST(`\"1000\"` AS int8)",
  statement:"CAST(`\"1000\"` AS int8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:1000
  }
}
{
  name:"CAST(`\"1000\"` AS bigint)",
  statement:"CAST(`\"1000\"` AS bigint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:1000
  }
}
{
  name:"CAST(`'2e100'` AS int)",
  statement:"CAST(`'2e100'` AS int)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`'2e100'` AS smallint)",
  statement:"CAST(`'2e100'` AS smallint)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`'2e100'` AS integer2)",
  statement:"CAST(`'2e100'` AS integer2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`'2e100'` AS int2)",
  statement:"CAST(`'2e100'` AS int2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`'2e100'` AS integer)",
  statement:"CAST(`'2e100'` AS integer)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`'2e100'` AS integer4)",
  statement:"CAST(`'2e100'` AS integer4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`'2e100'` AS int4)",
  statement:"CAST(`'2e100'` AS int4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`'2e100'` AS integer8)",
  statement:"CAST(`'2e100'` AS integer8)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`'2e100'` AS int8)",
  statement:"CAST(`'2e100'` AS int8)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`'2e100'` AS bigint)",
  statement:"CAST(`'2e100'` AS bigint)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`'2d100'` AS int)",
  statement:"CAST(`'2d100'` AS int)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`'2d100'` AS smallint)",
  statement:"CAST(`'2d100'` AS smallint)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`'2d100'` AS integer2)",
  statement:"CAST(`'2d100'` AS integer2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`'2d100'` AS int2)",
  statement:"CAST(`'2d100'` AS int2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`'2d100'` AS integer)",
  statement:"CAST(`'2d100'` AS integer)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`'2d100'` AS integer4)",
  statement:"CAST(`'2d100'` AS integer4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`'2d100'` AS int4)",
  statement:"CAST(`'2d100'` AS int4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`'2d100'` AS integer8)",
  statement:"CAST(`'2d100'` AS integer8)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`'2d100'` AS int8)",
  statement:"CAST(`'2d100'` AS int8)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`'2d100'` AS bigint)",
  statement:"CAST(`'2d100'` AS bigint)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('00xA' AS int)",
  statement:"CAST('00xA' AS int)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('00xA' AS smallint)",
  statement:"CAST('00xA' AS smallint)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('00xA' AS integer2)",
  statement:"CAST('00xA' AS integer2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('00xA' AS int2)",
  statement:"CAST('00xA' AS int2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('00xA' AS integer)",
  statement:"CAST('00xA' AS integer)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('00xA' AS integer4)",
  statement:"CAST('00xA' AS integer4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('00xA' AS int4)",
  statement:"CAST('00xA' AS int4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('00xA' AS integer8)",
  statement:"CAST('00xA' AS integer8)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('00xA' AS int8)",
  statement:"CAST('00xA' AS int8)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('00xA' AS bigint)",
  statement:"CAST('00xA' AS bigint)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('00b10' AS int)",
  statement:"CAST('00b10' AS int)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('00b10' AS smallint)",
  statement:"CAST('00b10' AS smallint)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('00b10' AS integer2)",
  statement:"CAST('00b10' AS integer2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('00b10' AS int2)",
  statement:"CAST('00b10' AS int2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('00b10' AS integer)",
  statement:"CAST('00b10' AS integer)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('00b10' AS integer4)",
  statement:"CAST('00b10' AS integer4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('00b10' AS int4)",
  statement:"CAST('00b10' AS int4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('00b10' AS integer8)",
  statement:"CAST('00b10' AS integer8)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('00b10' AS int8)",
  statement:"CAST('00b10' AS int8)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('00b10' AS bigint)",
  statement:"CAST('00b10' AS bigint)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"\"}}` AS int)",
  statement:"CAST(`{{\"\"}}` AS int)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"\"}}` AS smallint)",
  statement:"CAST(`{{\"\"}}` AS smallint)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"\"}}` AS integer2)",
  statement:"CAST(`{{\"\"}}` AS integer2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"\"}}` AS int2)",
  statement:"CAST(`{{\"\"}}` AS int2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"\"}}` AS integer)",
  statement:"CAST(`{{\"\"}}` AS integer)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"\"}}` AS integer4)",
  statement:"CAST(`{{\"\"}}` AS integer4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"\"}}` AS int4)",
  statement:"CAST(`{{\"\"}}` AS int4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"\"}}` AS integer8)",
  statement:"CAST(`{{\"\"}}` AS integer8)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"\"}}` AS int8)",
  statement:"CAST(`{{\"\"}}` AS int8)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"\"}}` AS bigint)",
  statement:"CAST(`{{\"\"}}` AS bigint)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"0\"}}` AS int)",
  statement:"CAST(`{{\"0\"}}` AS int)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"0\"}}` AS smallint)",
  statement:"CAST(`{{\"0\"}}` AS smallint)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"0\"}}` AS integer2)",
  statement:"CAST(`{{\"0\"}}` AS integer2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"0\"}}` AS int2)",
  statement:"CAST(`{{\"0\"}}` AS int2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"0\"}}` AS integer)",
  statement:"CAST(`{{\"0\"}}` AS integer)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"0\"}}` AS integer4)",
  statement:"CAST(`{{\"0\"}}` AS integer4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"0\"}}` AS int4)",
  statement:"CAST(`{{\"0\"}}` AS int4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"0\"}}` AS integer8)",
  statement:"CAST(`{{\"0\"}}` AS integer8)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"0\"}}` AS int8)",
  statement:"CAST(`{{\"0\"}}` AS int8)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"0\"}}` AS bigint)",
  statement:"CAST(`{{\"0\"}}` AS bigint)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"1.0\"}}` AS int)",
  statement:"CAST(`{{\"1.0\"}}` AS int)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"1.0\"}}` AS smallint)",
  statement:"CAST(`{{\"1.0\"}}` AS smallint)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"1.0\"}}` AS integer2)",
  statement:"CAST(`{{\"1.0\"}}` AS integer2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"1.0\"}}` AS int2)",
  statement:"CAST(`{{\"1.0\"}}` AS int2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"1.0\"}}` AS integer)",
  statement:"CAST(`{{\"1.0\"}}` AS integer)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"1.0\"}}` AS integer4)",
  statement:"CAST(`{{\"1.0\"}}` AS integer4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"1.0\"}}` AS int4)",
  statement:"CAST(`{{\"1.0\"}}` AS int4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"1.0\"}}` AS integer8)",
  statement:"CAST(`{{\"1.0\"}}` AS integer8)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"1.0\"}}` AS int8)",
  statement:"CAST(`{{\"1.0\"}}` AS int8)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"1.0\"}}` AS bigint)",
  statement:"CAST(`{{\"1.0\"}}` AS bigint)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"2e10\"}}` AS int)",
  statement:"CAST(`{{\"2e10\"}}` AS int)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"2e10\"}}` AS smallint)",
  statement:"CAST(`{{\"2e10\"}}` AS smallint)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"2e10\"}}` AS integer2)",
  statement:"CAST(`{{\"2e10\"}}` AS integer2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"2e10\"}}` AS int2)",
  statement:"CAST(`{{\"2e10\"}}` AS int2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"2e10\"}}` AS integer)",
  statement:"CAST(`{{\"2e10\"}}` AS integer)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"2e10\"}}` AS integer4)",
  statement:"CAST(`{{\"2e10\"}}` AS integer4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"2e10\"}}` AS int4)",
  statement:"CAST(`{{\"2e10\"}}` AS int4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"2e10\"}}` AS integer8)",
  statement:"CAST(`{{\"2e10\"}}` AS integer8)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"2e10\"}}` AS int8)",
  statement:"CAST(`{{\"2e10\"}}` AS int8)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"2e10\"}}` AS bigint)",
  statement:"CAST(`{{\"2e10\"}}` AS bigint)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{}}` AS int)",
  statement:"CAST(`{{}}` AS int)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{}}` AS smallint)",
  statement:"CAST(`{{}}` AS smallint)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{}}` AS integer2)",
  statement:"CAST(`{{}}` AS integer2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{}}` AS int2)",
  statement:"CAST(`{{}}` AS int2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{}}` AS integer)",
  statement:"CAST(`{{}}` AS integer)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{}}` AS integer4)",
  statement:"CAST(`{{}}` AS integer4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{}}` AS int4)",
  statement:"CAST(`{{}}` AS int4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{}}` AS integer8)",
  statement:"CAST(`{{}}` AS integer8)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{}}` AS int8)",
  statement:"CAST(`{{}}` AS int8)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{}}` AS bigint)",
  statement:"CAST(`{{}}` AS bigint)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MA==}}` AS int)",
  statement:"CAST(`{{MA==}}` AS int)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MA==}}` AS smallint)",
  statement:"CAST(`{{MA==}}` AS smallint)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MA==}}` AS integer2)",
  statement:"CAST(`{{MA==}}` AS integer2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MA==}}` AS int2)",
  statement:"CAST(`{{MA==}}` AS int2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MA==}}` AS integer)",
  statement:"CAST(`{{MA==}}` AS integer)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MA==}}` AS integer4)",
  statement:"CAST(`{{MA==}}` AS integer4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MA==}}` AS int4)",
  statement:"CAST(`{{MA==}}` AS int4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MA==}}` AS integer8)",
  statement:"CAST(`{{MA==}}` AS integer8)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MA==}}` AS int8)",
  statement:"CAST(`{{MA==}}` AS int8)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MA==}}` AS bigint)",
  statement:"CAST(`{{MA==}}` AS bigint)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MS4w}}` AS int)",
  statement:"CAST(`{{MS4w}}` AS int)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MS4w}}` AS smallint)",
  statement:"CAST(`{{MS4w}}` AS smallint)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MS4w}}` AS integer2)",
  statement:"CAST(`{{MS4w}}` AS integer2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MS4w}}` AS int2)",
  statement:"CAST(`{{MS4w}}` AS int2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MS4w}}` AS integer)",
  statement:"CAST(`{{MS4w}}` AS integer)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MS4w}}` AS integer4)",
  statement:"CAST(`{{MS4w}}` AS integer4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MS4w}}` AS int4)",
  statement:"CAST(`{{MS4w}}` AS int4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MS4w}}` AS integer8)",
  statement:"CAST(`{{MS4w}}` AS integer8)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MS4w}}` AS int8)",
  statement:"CAST(`{{MS4w}}` AS int8)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MS4w}}` AS bigint)",
  statement:"CAST(`{{MS4w}}` AS bigint)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MmUxMA==}}` AS int)",
  statement:"CAST(`{{MmUxMA==}}` AS int)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MmUxMA==}}` AS smallint)",
  statement:"CAST(`{{MmUxMA==}}` AS smallint)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MmUxMA==}}` AS integer2)",
  statement:"CAST(`{{MmUxMA==}}` AS integer2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MmUxMA==}}` AS int2)",
  statement:"CAST(`{{MmUxMA==}}` AS int2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MmUxMA==}}` AS integer)",
  statement:"CAST(`{{MmUxMA==}}` AS integer)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MmUxMA==}}` AS integer4)",
  statement:"CAST(`{{MmUxMA==}}` AS integer4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MmUxMA==}}` AS int4)",
  statement:"CAST(`{{MmUxMA==}}` AS int4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MmUxMA==}}` AS integer8)",
  statement:"CAST(`{{MmUxMA==}}` AS integer8)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MmUxMA==}}` AS int8)",
  statement:"CAST(`{{MmUxMA==}}` AS int8)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MmUxMA==}}` AS bigint)",
  statement:"CAST(`{{MmUxMA==}}` AS bigint)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[]` AS int)",
  statement:"CAST(`[]` AS int)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[]` AS smallint)",
  statement:"CAST(`[]` AS smallint)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[]` AS integer2)",
  statement:"CAST(`[]` AS integer2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[]` AS int2)",
  statement:"CAST(`[]` AS int2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[]` AS integer)",
  statement:"CAST(`[]` AS integer)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[]` AS integer4)",
  statement:"CAST(`[]` AS integer4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[]` AS int4)",
  statement:"CAST(`[]` AS int4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[]` AS integer8)",
  statement:"CAST(`[]` AS integer8)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[]` AS int8)",
  statement:"CAST(`[]` AS int8)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[]` AS bigint)",
  statement:"CAST(`[]` AS bigint)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[1]` AS int)",
  statement:"CAST(`[1]` AS int)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[1]` AS smallint)",
  statement:"CAST(`[1]` AS smallint)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[1]` AS integer2)",
  statement:"CAST(`[1]` AS integer2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[1]` AS int2)",
  statement:"CAST(`[1]` AS int2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[1]` AS integer)",
  statement:"CAST(`[1]` AS integer)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[1]` AS integer4)",
  statement:"CAST(`[1]` AS integer4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[1]` AS int4)",
  statement:"CAST(`[1]` AS int4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[1]` AS integer8)",
  statement:"CAST(`[1]` AS integer8)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[1]` AS int8)",
  statement:"CAST(`[1]` AS int8)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[1]` AS bigint)",
  statement:"CAST(`[1]` AS bigint)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[-2, 0]` AS int)",
  statement:"CAST(`[-2, 0]` AS int)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[-2, 0]` AS smallint)",
  statement:"CAST(`[-2, 0]` AS smallint)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[-2, 0]` AS integer2)",
  statement:"CAST(`[-2, 0]` AS integer2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[-2, 0]` AS int2)",
  statement:"CAST(`[-2, 0]` AS int2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[-2, 0]` AS integer)",
  statement:"CAST(`[-2, 0]` AS integer)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[-2, 0]` AS integer4)",
  statement:"CAST(`[-2, 0]` AS integer4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[-2, 0]` AS int4)",
  statement:"CAST(`[-2, 0]` AS int4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[-2, 0]` AS integer8)",
  statement:"CAST(`[-2, 0]` AS integer8)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[-2, 0]` AS int8)",
  statement:"CAST(`[-2, 0]` AS int8)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[-2, 0]` AS bigint)",
  statement:"CAST(`[-2, 0]` AS bigint)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`()` AS int)",
  statement:"CAST(`()` AS int)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`()` AS smallint)",
  statement:"CAST(`()` AS smallint)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`()` AS integer2)",
  statement:"CAST(`()` AS integer2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`()` AS int2)",
  statement:"CAST(`()` AS int2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`()` AS integer)",
  statement:"CAST(`()` AS integer)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`()` AS integer4)",
  statement:"CAST(`()` AS integer4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`()` AS int4)",
  statement:"CAST(`()` AS int4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`()` AS integer8)",
  statement:"CAST(`()` AS integer8)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`()` AS int8)",
  statement:"CAST(`()` AS int8)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`()` AS bigint)",
  statement:"CAST(`()` AS bigint)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`(1)` AS int)",
  statement:"CAST(`(1)` AS int)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`(1)` AS smallint)",
  statement:"CAST(`(1)` AS smallint)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`(1)` AS integer2)",
  statement:"CAST(`(1)` AS integer2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`(1)` AS int2)",
  statement:"CAST(`(1)` AS int2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`(1)` AS integer)",
  statement:"CAST(`(1)` AS integer)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`(1)` AS integer4)",
  statement:"CAST(`(1)` AS integer4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`(1)` AS int4)",
  statement:"CAST(`(1)` AS int4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`(1)` AS integer8)",
  statement:"CAST(`(1)` AS integer8)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`(1)` AS int8)",
  statement:"CAST(`(1)` AS int8)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`(1)` AS bigint)",
  statement:"CAST(`(1)` AS bigint)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`(0)` AS int)",
  statement:"CAST(`(0)` AS int)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`(0)` AS smallint)",
  statement:"CAST(`(0)` AS smallint)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`(0)` AS integer2)",
  statement:"CAST(`(0)` AS integer2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`(0)` AS int2)",
  statement:"CAST(`(0)` AS int2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`(0)` AS integer)",
  statement:"CAST(`(0)` AS integer)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`(0)` AS integer4)",
  statement:"CAST(`(0)` AS integer4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`(0)` AS int4)",
  statement:"CAST(`(0)` AS int4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`(0)` AS integer8)",
  statement:"CAST(`(0)` AS integer8)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`(0)` AS int8)",
  statement:"CAST(`(0)` AS int8)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`(0)` AS bigint)",
  statement:"CAST(`(0)` AS bigint)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{}` AS int)",
  statement:"CAST(`{}` AS int)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{}` AS smallint)",
  statement:"CAST(`{}` AS smallint)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{}` AS integer2)",
  statement:"CAST(`{}` AS integer2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{}` AS int2)",
  statement:"CAST(`{}` AS int2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{}` AS integer)",
  statement:"CAST(`{}` AS integer)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{}` AS integer4)",
  statement:"CAST(`{}` AS integer4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{}` AS int4)",
  statement:"CAST(`{}` AS int4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{}` AS integer8)",
  statement:"CAST(`{}` AS integer8)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{}` AS int8)",
  statement:"CAST(`{}` AS int8)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{}` AS bigint)",
  statement:"CAST(`{}` AS bigint)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST({} AS int)",
  statement:"CAST({} AS int)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST({} AS smallint)",
  statement:"CAST({} AS smallint)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST({} AS integer2)",
  statement:"CAST({} AS integer2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST({} AS int2)",
  statement:"CAST({} AS int2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST({} AS integer)",
  statement:"CAST({} AS integer)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST({} AS integer4)",
  statement:"CAST({} AS integer4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST({} AS int4)",
  statement:"CAST({} AS int4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST({} AS integer8)",
  statement:"CAST({} AS integer8)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST({} AS int8)",
  statement:"CAST({} AS int8)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST({} AS bigint)",
  statement:"CAST({} AS bigint)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{a:12}` AS int)",
  statement:"CAST(`{a:12}` AS int)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{a:12}` AS smallint)",
  statement:"CAST(`{a:12}` AS smallint)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{a:12}` AS integer2)",
  statement:"CAST(`{a:12}` AS integer2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{a:12}` AS int2)",
  statement:"CAST(`{a:12}` AS int2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{a:12}` AS integer)",
  statement:"CAST(`{a:12}` AS integer)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{a:12}` AS integer4)",
  statement:"CAST(`{a:12}` AS integer4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{a:12}` AS int4)",
  statement:"CAST(`{a:12}` AS int4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{a:12}` AS integer8)",
  statement:"CAST(`{a:12}` AS integer8)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{a:12}` AS int8)",
  statement:"CAST(`{a:12}` AS int8)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{a:12}` AS bigint)",
  statement:"CAST(`{a:12}` AS bigint)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST({'b':-4} AS int)",
  statement:"CAST({'b':-4} AS int)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST({'b':-4} AS smallint)",
  statement:"CAST({'b':-4} AS smallint)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST({'b':-4} AS integer2)",
  statement:"CAST({'b':-4} AS integer2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST({'b':-4} AS int2)",
  statement:"CAST({'b':-4} AS int2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST({'b':-4} AS integer)",
  statement:"CAST({'b':-4} AS integer)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST({'b':-4} AS integer4)",
  statement:"CAST({'b':-4} AS integer4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST({'b':-4} AS int4)",
  statement:"CAST({'b':-4} AS int4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST({'b':-4} AS integer8)",
  statement:"CAST({'b':-4} AS integer8)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST({'b':-4} AS int8)",
  statement:"CAST({'b':-4} AS int8)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST({'b':-4} AS bigint)",
  statement:"CAST({'b':-4} AS bigint)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<>> AS int)",
  statement:"CAST(<<>> AS int)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<>> AS smallint)",
  statement:"CAST(<<>> AS smallint)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<>> AS integer2)",
  statement:"CAST(<<>> AS integer2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<>> AS int2)",
  statement:"CAST(<<>> AS int2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<>> AS integer)",
  statement:"CAST(<<>> AS integer)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<>> AS integer4)",
  statement:"CAST(<<>> AS integer4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<>> AS int4)",
  statement:"CAST(<<>> AS int4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<>> AS integer8)",
  statement:"CAST(<<>> AS integer8)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<>> AS int8)",
  statement:"CAST(<<>> AS int8)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<>> AS bigint)",
  statement:"CAST(<<>> AS bigint)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<14>> AS int)",
  statement:"CAST(<<14>> AS int)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<14>> AS smallint)",
  statement:"CAST(<<14>> AS smallint)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<14>> AS integer2)",
  statement:"CAST(<<14>> AS integer2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<14>> AS int2)",
  statement:"CAST(<<14>> AS int2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<14>> AS integer)",
  statement:"CAST(<<14>> AS integer)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<14>> AS integer4)",
  statement:"CAST(<<14>> AS integer4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<14>> AS int4)",
  statement:"CAST(<<14>> AS int4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<14>> AS integer8)",
  statement:"CAST(<<14>> AS integer8)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<14>> AS int8)",
  statement:"CAST(<<14>> AS int8)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<14>> AS bigint)",
  statement:"CAST(<<14>> AS bigint)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<20>> AS int)",
  statement:"CAST(<<20>> AS int)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<20>> AS smallint)",
  statement:"CAST(<<20>> AS smallint)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<20>> AS integer2)",
  statement:"CAST(<<20>> AS integer2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<20>> AS int2)",
  statement:"CAST(<<20>> AS int2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<20>> AS integer)",
  statement:"CAST(<<20>> AS integer)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<20>> AS integer4)",
  statement:"CAST(<<20>> AS integer4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<20>> AS int4)",
  statement:"CAST(<<20>> AS int4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<20>> AS integer8)",
  statement:"CAST(<<20>> AS integer8)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<20>> AS int8)",
  statement:"CAST(<<20>> AS int8)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<20>> AS bigint)",
  statement:"CAST(<<20>> AS bigint)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(TRUE AND FALSE AS float)",
  statement:"CAST(TRUE AND FALSE AS float)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0e0
  }
}
{
  name:"CAST(TRUE AND FALSE AS real)",
  statement:"CAST(TRUE AND FALSE AS real)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0e0
  }
}
{
  name:"CAST(TRUE AND FALSE AS double precision)",
  statement:"CAST(TRUE AND FALSE AS double precision)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0e0
  }
}
{
  name:"CAST(`true` AS float)",
  statement:"CAST(`true` AS float)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:1e0
  }
}
{
  name:"CAST(`true` AS real)",
  statement:"CAST(`true` AS real)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:1e0
  }
}
{
  name:"CAST(`true` AS double precision)",
  statement:"CAST(`true` AS double precision)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:1e0
  }
}
{
  name:"CAST(5 AS float)",
  statement:"CAST(5 AS float)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:5e0
  }
}
{
  name:"CAST(5 AS real)",
  statement:"CAST(5 AS real)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:5e0
  }
}
{
  name:"CAST(5 AS double precision)",
  statement:"CAST(5 AS double precision)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:5e0
  }
}
{
  name:"CAST( 5  AS float)",
  statement:"CAST( 5  AS float)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:5e0
  }
}
{
  name:"CAST( 5  AS real)",
  statement:"CAST( 5  AS real)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:5e0
  }
}
{
  name:"CAST( 5  AS double precision)",
  statement:"CAST( 5  AS double precision)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:5e0
  }
}
{
  name:"CAST(`0e0` AS float)",
  statement:"CAST(`0e0` AS float)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0e0
  }
}
{
  name:"CAST(`0e0` AS real)",
  statement:"CAST(`0e0` AS real)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0e0
  }
}
{
  name:"CAST(`0e0` AS double precision)",
  statement:"CAST(`0e0` AS double precision)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0e0
  }
}
{
  name:"CAST(1.1 AS float)",
  statement:"CAST(1.1 AS float)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:1.1e0
  }
}
{
  name:"CAST(1.1 AS real)",
  statement:"CAST(1.1 AS real)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:1.1e0
  }
}
{
  name:"CAST(1.1 AS double precision)",
  statement:"CAST(1.1 AS double precision)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:1.1e0
  }
}
{
  name:"CAST(-20.1 AS float)",
  statement:"CAST(-20.1 AS float)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-20.1e0
  }
}
{
  name:"CAST(-20.1 AS real)",
  statement:"CAST(-20.1 AS real)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-20.1e0
  }
}
{
  name:"CAST(-20.1 AS double precision)",
  statement:"CAST(-20.1 AS double precision)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-20.1e0
  }
}
{
  name:"CAST(`2007-10-10T` AS float)",
  statement:"CAST(`2007-10-10T` AS float)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`2007-10-10T` AS real)",
  statement:"CAST(`2007-10-10T` AS real)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`2007-10-10T` AS double precision)",
  statement:"CAST(`2007-10-10T` AS double precision)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('hello' AS float)",
  statement:"CAST('hello' AS float)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('hello' AS real)",
  statement:"CAST('hello' AS real)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('hello' AS double precision)",
  statement:"CAST('hello' AS double precision)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('-20' AS float)",
  statement:"CAST('-20' AS float)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-20e0
  }
}
{
  name:"CAST('-20' AS real)",
  statement:"CAST('-20' AS real)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-20e0
  }
}
{
  name:"CAST('-20' AS double precision)",
  statement:"CAST('-20' AS double precision)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-20e0
  }
}
{
  name:"CAST(`\"1000\"` AS float)",
  statement:"CAST(`\"1000\"` AS float)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:1000e0
  }
}
{
  name:"CAST(`\"1000\"` AS real)",
  statement:"CAST(`\"1000\"` AS real)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:1000e0
  }
}
{
  name:"CAST(`\"1000\"` AS double precision)",
  statement:"CAST(`\"1000\"` AS double precision)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:1000e0
  }
}
{
  name:"CAST(`'2e100'` AS float)",
  statement:"CAST(`'2e100'` AS float)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2.0E100
  }
}
{
  name:"CAST(`'2e100'` AS real)",
  statement:"CAST(`'2e100'` AS real)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2.0E100
  }
}
{
  name:"CAST(`'2e100'` AS double precision)",
  statement:"CAST(`'2e100'` AS double precision)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2.0E100
  }
}
{
  name:"CAST(`'2d100'` AS float)",
  statement:"CAST(`'2d100'` AS float)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`'2d100'` AS real)",
  statement:"CAST(`'2d100'` AS real)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`'2d100'` AS double precision)",
  statement:"CAST(`'2d100'` AS double precision)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"\"}}` AS float)",
  statement:"CAST(`{{\"\"}}` AS float)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"\"}}` AS real)",
  statement:"CAST(`{{\"\"}}` AS real)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"\"}}` AS double precision)",
  statement:"CAST(`{{\"\"}}` AS double precision)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"0\"}}` AS float)",
  statement:"CAST(`{{\"0\"}}` AS float)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"0\"}}` AS real)",
  statement:"CAST(`{{\"0\"}}` AS real)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"0\"}}` AS double precision)",
  statement:"CAST(`{{\"0\"}}` AS double precision)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"1.0\"}}` AS float)",
  statement:"CAST(`{{\"1.0\"}}` AS float)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"1.0\"}}` AS real)",
  statement:"CAST(`{{\"1.0\"}}` AS real)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"1.0\"}}` AS double precision)",
  statement:"CAST(`{{\"1.0\"}}` AS double precision)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"2e10\"}}` AS float)",
  statement:"CAST(`{{\"2e10\"}}` AS float)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"2e10\"}}` AS real)",
  statement:"CAST(`{{\"2e10\"}}` AS real)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"2e10\"}}` AS double precision)",
  statement:"CAST(`{{\"2e10\"}}` AS double precision)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{}}` AS float)",
  statement:"CAST(`{{}}` AS float)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{}}` AS real)",
  statement:"CAST(`{{}}` AS real)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{}}` AS double precision)",
  statement:"CAST(`{{}}` AS double precision)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MA==}}` AS float)",
  statement:"CAST(`{{MA==}}` AS float)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MA==}}` AS real)",
  statement:"CAST(`{{MA==}}` AS real)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MA==}}` AS double precision)",
  statement:"CAST(`{{MA==}}` AS double precision)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MS4w}}` AS float)",
  statement:"CAST(`{{MS4w}}` AS float)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MS4w}}` AS real)",
  statement:"CAST(`{{MS4w}}` AS real)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MS4w}}` AS double precision)",
  statement:"CAST(`{{MS4w}}` AS double precision)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MmUxMA==}}` AS float)",
  statement:"CAST(`{{MmUxMA==}}` AS float)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MmUxMA==}}` AS real)",
  statement:"CAST(`{{MmUxMA==}}` AS real)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MmUxMA==}}` AS double precision)",
  statement:"CAST(`{{MmUxMA==}}` AS double precision)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[]` AS float)",
  statement:"CAST(`[]` AS float)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[]` AS real)",
  statement:"CAST(`[]` AS real)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[]` AS double precision)",
  statement:"CAST(`[]` AS double precision)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[1e0]` AS float)",
  statement:"CAST(`[1e0]` AS float)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[1e0]` AS real)",
  statement:"CAST(`[1e0]` AS real)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[1e0]` AS double precision)",
  statement:"CAST(`[1e0]` AS double precision)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[-2e0, 0e0]` AS float)",
  statement:"CAST(`[-2e0, 0e0]` AS float)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[-2e0, 0e0]` AS real)",
  statement:"CAST(`[-2e0, 0e0]` AS real)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[-2e0, 0e0]` AS double precision)",
  statement:"CAST(`[-2e0, 0e0]` AS double precision)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`()` AS float)",
  statement:"CAST(`()` AS float)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`()` AS real)",
  statement:"CAST(`()` AS real)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`()` AS double precision)",
  statement:"CAST(`()` AS double precision)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`(1e0)` AS float)",
  statement:"CAST(`(1e0)` AS float)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`(1e0)` AS real)",
  statement:"CAST(`(1e0)` AS real)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`(1e0)` AS double precision)",
  statement:"CAST(`(1e0)` AS double precision)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`(0e0)` AS float)",
  statement:"CAST(`(0e0)` AS float)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`(0e0)` AS real)",
  statement:"CAST(`(0e0)` AS real)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`(0e0)` AS double precision)",
  statement:"CAST(`(0e0)` AS double precision)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{}` AS float)",
  statement:"CAST(`{}` AS float)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{}` AS real)",
  statement:"CAST(`{}` AS real)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{}` AS double precision)",
  statement:"CAST(`{}` AS double precision)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST({} AS float)",
  statement:"CAST({} AS float)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST({} AS real)",
  statement:"CAST({} AS real)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST({} AS double precision)",
  statement:"CAST({} AS double precision)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{a:12e0}` AS float)",
  statement:"CAST(`{a:12e0}` AS float)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{a:12e0}` AS real)",
  statement:"CAST(`{a:12e0}` AS real)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{a:12e0}` AS double precision)",
  statement:"CAST(`{a:12e0}` AS double precision)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST({'b':`-4e0`} AS float)",
  statement:"CAST({'b':`-4e0`} AS float)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST({'b':`-4e0`} AS real)",
  statement:"CAST({'b':`-4e0`} AS real)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST({'b':`-4e0`} AS double precision)",
  statement:"CAST({'b':`-4e0`} AS double precision)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<>> AS float)",
  statement:"CAST(<<>> AS float)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<>> AS real)",
  statement:"CAST(<<>> AS real)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<>> AS double precision)",
  statement:"CAST(<<>> AS double precision)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<`14e0`>> AS float)",
  statement:"CAST(<<`14e0`>> AS float)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<`14e0`>> AS real)",
  statement:"CAST(<<`14e0`>> AS real)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<`14e0`>> AS double precision)",
  statement:"CAST(<<`14e0`>> AS double precision)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<`20e0`>> AS float)",
  statement:"CAST(<<`20e0`>> AS float)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<`20e0`>> AS real)",
  statement:"CAST(<<`20e0`>> AS real)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<`20e0`>> AS double precision)",
  statement:"CAST(<<`20e0`>> AS double precision)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(TRUE AND FALSE AS dec)",
  statement:"CAST(TRUE AND FALSE AS dec)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0.
  }
}
{
  name:"CAST(TRUE AND FALSE AS decimal)",
  statement:"CAST(TRUE AND FALSE AS decimal)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0.
  }
}
{
  name:"CAST(TRUE AND FALSE AS numeric)",
  statement:"CAST(TRUE AND FALSE AS numeric)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0.
  }
}
{
  name:"CAST(`true` AS dec)",
  statement:"CAST(`true` AS dec)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:1.
  }
}
{
  name:"CAST(`true` AS decimal)",
  statement:"CAST(`true` AS decimal)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:1.
  }
}
{
  name:"CAST(`true` AS numeric)",
  statement:"CAST(`true` AS numeric)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:1.
  }
}
{
  name:"CAST(5 AS dec)",
  statement:"CAST(5 AS dec)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:5.
  }
}
{
  name:"CAST(5 AS decimal)",
  statement:"CAST(5 AS decimal)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:5.
  }
}
{
  name:"CAST(5 AS numeric)",
  statement:"CAST(5 AS numeric)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:5.
  }
}
{
  name:"CAST(5  AS dec)",
  statement:"CAST(5  AS dec)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:5.
  }
}
{
  name:"CAST(5  AS decimal)",
  statement:"CAST(5  AS decimal)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:5.
  }
}
{
  name:"CAST(5  AS numeric)",
  statement:"CAST(5  AS numeric)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:5.
  }
}
{
  name:"CAST(`0e0` AS dec)",
  statement:"CAST(`0e0` AS dec)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0.
  }
}
{
  name:"CAST(`0e0` AS decimal)",
  statement:"CAST(`0e0` AS decimal)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0.
  }
}
{
  name:"CAST(`0e0` AS numeric)",
  statement:"CAST(`0e0` AS numeric)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0.
  }
}
{
  name:"CAST(`1e0` AS dec)",
  statement:"CAST(`1e0` AS dec)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:1.
  }
}
{
  name:"CAST(`1e0` AS decimal)",
  statement:"CAST(`1e0` AS decimal)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:1.
  }
}
{
  name:"CAST(`1e0` AS numeric)",
  statement:"CAST(`1e0` AS numeric)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:1.
  }
}
{
  name:"CAST(1.1 AS dec)",
  statement:"CAST(1.1 AS dec)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:1.1
  }
}
{
  name:"CAST(1.1 AS decimal)",
  statement:"CAST(1.1 AS decimal)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:1.1
  }
}
{
  name:"CAST(1.1 AS numeric)",
  statement:"CAST(1.1 AS numeric)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:1.1
  }
}
{
  name:"CAST(-20.1 AS dec)",
  statement:"CAST(-20.1 AS dec)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-20.1
  }
}
{
  name:"CAST(-20.1 AS decimal)",
  statement:"CAST(-20.1 AS decimal)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-20.1
  }
}
{
  name:"CAST(-20.1 AS numeric)",
  statement:"CAST(-20.1 AS numeric)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-20.1
  }
}
{
  name:"CAST(`2007-10-10T` AS dec)",
  statement:"CAST(`2007-10-10T` AS dec)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`2007-10-10T` AS decimal)",
  statement:"CAST(`2007-10-10T` AS decimal)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`2007-10-10T` AS numeric)",
  statement:"CAST(`2007-10-10T` AS numeric)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('hello' AS dec)",
  statement:"CAST('hello' AS dec)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('hello' AS decimal)",
  statement:"CAST('hello' AS decimal)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('hello' AS numeric)",
  statement:"CAST('hello' AS numeric)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('-20' AS dec)",
  statement:"CAST('-20' AS dec)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-20.
  }
}
{
  name:"CAST('-20' AS decimal)",
  statement:"CAST('-20' AS decimal)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-20.
  }
}
{
  name:"CAST('-20' AS numeric)",
  statement:"CAST('-20' AS numeric)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-20.
  }
}
{
  name:"CAST(`\"1000\"` AS dec)",
  statement:"CAST(`\"1000\"` AS dec)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:1000.
  }
}
{
  name:"CAST(`\"1000\"` AS decimal)",
  statement:"CAST(`\"1000\"` AS decimal)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:1000.
  }
}
{
  name:"CAST(`\"1000\"` AS numeric)",
  statement:"CAST(`\"1000\"` AS numeric)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:1000.
  }
}
{
  name:"CAST(`'2e100'` AS dec)",
  statement:"CAST(`'2e100'` AS dec)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2d100
  }
}
{
  name:"CAST(`'2e100'` AS decimal)",
  statement:"CAST(`'2e100'` AS decimal)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2d100
  }
}
{
  name:"CAST(`'2e100'` AS numeric)",
  statement:"CAST(`'2e100'` AS numeric)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2d100
  }
}
{
  name:"CAST(`'2d100'` AS dec)",
  statement:"CAST(`'2d100'` AS dec)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`'2d100'` AS decimal)",
  statement:"CAST(`'2d100'` AS decimal)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`'2d100'` AS numeric)",
  statement:"CAST(`'2d100'` AS numeric)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"\"}}` AS dec)",
  statement:"CAST(`{{\"\"}}` AS dec)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"\"}}` AS decimal)",
  statement:"CAST(`{{\"\"}}` AS decimal)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"\"}}` AS numeric)",
  statement:"CAST(`{{\"\"}}` AS numeric)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"0\"}}` AS dec)",
  statement:"CAST(`{{\"0\"}}` AS dec)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"0\"}}` AS decimal)",
  statement:"CAST(`{{\"0\"}}` AS decimal)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"0\"}}` AS numeric)",
  statement:"CAST(`{{\"0\"}}` AS numeric)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"1.0\"}}` AS dec)",
  statement:"CAST(`{{\"1.0\"}}` AS dec)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"1.0\"}}` AS decimal)",
  statement:"CAST(`{{\"1.0\"}}` AS decimal)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"1.0\"}}` AS numeric)",
  statement:"CAST(`{{\"1.0\"}}` AS numeric)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"2e10\"}}` AS dec)",
  statement:"CAST(`{{\"2e10\"}}` AS dec)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"2e10\"}}` AS decimal)",
  statement:"CAST(`{{\"2e10\"}}` AS decimal)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"2e10\"}}` AS numeric)",
  statement:"CAST(`{{\"2e10\"}}` AS numeric)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{}}` AS dec)",
  statement:"CAST(`{{}}` AS dec)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{}}` AS decimal)",
  statement:"CAST(`{{}}` AS decimal)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{}}` AS numeric)",
  statement:"CAST(`{{}}` AS numeric)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MA==}}` AS dec)",
  statement:"CAST(`{{MA==}}` AS dec)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MA==}}` AS decimal)",
  statement:"CAST(`{{MA==}}` AS decimal)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MA==}}` AS numeric)",
  statement:"CAST(`{{MA==}}` AS numeric)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MS4w}}` AS dec)",
  statement:"CAST(`{{MS4w}}` AS dec)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MS4w}}` AS decimal)",
  statement:"CAST(`{{MS4w}}` AS decimal)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MS4w}}` AS numeric)",
  statement:"CAST(`{{MS4w}}` AS numeric)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MmUxMA==}}` AS dec)",
  statement:"CAST(`{{MmUxMA==}}` AS dec)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MmUxMA==}}` AS decimal)",
  statement:"CAST(`{{MmUxMA==}}` AS decimal)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MmUxMA==}}` AS numeric)",
  statement:"CAST(`{{MmUxMA==}}` AS numeric)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[]` AS dec)",
  statement:"CAST(`[]` AS dec)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[]` AS decimal)",
  statement:"CAST(`[]` AS decimal)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[]` AS numeric)",
  statement:"CAST(`[]` AS numeric)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[1d0]` AS dec)",
  statement:"CAST(`[1d0]` AS dec)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[1d0]` AS decimal)",
  statement:"CAST(`[1d0]` AS decimal)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[1d0]` AS numeric)",
  statement:"CAST(`[1d0]` AS numeric)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[-2d0, 0d0]` AS dec)",
  statement:"CAST(`[-2d0, 0d0]` AS dec)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[-2d0, 0d0]` AS decimal)",
  statement:"CAST(`[-2d0, 0d0]` AS decimal)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[-2d0, 0d0]` AS numeric)",
  statement:"CAST(`[-2d0, 0d0]` AS numeric)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`()` AS dec)",
  statement:"CAST(`()` AS dec)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`()` AS decimal)",
  statement:"CAST(`()` AS decimal)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`()` AS numeric)",
  statement:"CAST(`()` AS numeric)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`(1d0)` AS dec)",
  statement:"CAST(`(1d0)` AS dec)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`(1d0)` AS decimal)",
  statement:"CAST(`(1d0)` AS decimal)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`(1d0)` AS numeric)",
  statement:"CAST(`(1d0)` AS numeric)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`(0d0)` AS dec)",
  statement:"CAST(`(0d0)` AS dec)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`(0d0)` AS decimal)",
  statement:"CAST(`(0d0)` AS decimal)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`(0d0)` AS numeric)",
  statement:"CAST(`(0d0)` AS numeric)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{}` AS dec)",
  statement:"CAST(`{}` AS dec)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{}` AS decimal)",
  statement:"CAST(`{}` AS decimal)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{}` AS numeric)",
  statement:"CAST(`{}` AS numeric)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST({} AS dec)",
  statement:"CAST({} AS dec)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST({} AS decimal)",
  statement:"CAST({} AS decimal)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST({} AS numeric)",
  statement:"CAST({} AS numeric)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{a:12d0}` AS dec)",
  statement:"CAST(`{a:12d0}` AS dec)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{a:12d0}` AS decimal)",
  statement:"CAST(`{a:12d0}` AS decimal)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{a:12d0}` AS numeric)",
  statement:"CAST(`{a:12d0}` AS numeric)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST({'b':`-4d0`} AS dec)",
  statement:"CAST({'b':`-4d0`} AS dec)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST({'b':`-4d0`} AS decimal)",
  statement:"CAST({'b':`-4d0`} AS decimal)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST({'b':`-4d0`} AS numeric)",
  statement:"CAST({'b':`-4d0`} AS numeric)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<>> AS dec)",
  statement:"CAST(<<>> AS dec)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<>> AS decimal)",
  statement:"CAST(<<>> AS decimal)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<>> AS numeric)",
  statement:"CAST(<<>> AS numeric)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<`14d0`>> AS dec)",
  statement:"CAST(<<`14d0`>> AS dec)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<`14d0`>> AS decimal)",
  statement:"CAST(<<`14d0`>> AS decimal)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<`14d0`>> AS numeric)",
  statement:"CAST(<<`14d0`>> AS numeric)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<`20d0`>> AS dec)",
  statement:"CAST(<<`20d0`>> AS dec)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<`20d0`>> AS decimal)",
  statement:"CAST(<<`20d0`>> AS decimal)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<`20d0`>> AS numeric)",
  statement:"CAST(<<`20d0`>> AS numeric)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(TRUE AND FALSE AS date)",
  statement:"CAST(TRUE AND FALSE AS date)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`true` AS date)",
  statement:"CAST(`true` AS date)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(5 AS date)",
  statement:"CAST(5 AS date)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`0e0` AS date)",
  statement:"CAST(`0e0` AS date)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(1.1 AS date)",
  statement:"CAST(1.1 AS date)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(-20.1 AS date)",
  statement:"CAST(-20.1 AS date)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`2007-10-10T` AS date)",
  statement:"CAST(`2007-10-10T` AS date)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$date::2007-10-10
  }
}
{
  name:"CAST(`2007-02-23T12:14Z` AS date)",
  statement:"CAST(`2007-02-23T12:14Z` AS date)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$date::2007-02-23
  }
}
{
  name:"CAST(`2007-02-23T12:14:33.079Z` AS date)",
  statement:"CAST(`2007-02-23T12:14:33.079Z` AS date)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$date::2007-02-23
  }
}
{
  name:"CAST(`2007-02-23T12:14:33.079-08:00` AS date)",
  statement:"CAST(`2007-02-23T12:14:33.079-08:00` AS date)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$date::2007-02-23
  }
}
{
  name:"CAST(`2007-02T` AS date)",
  statement:"CAST(`2007-02T` AS date)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$date::2007-02-01
  }
}
{
  name:"CAST(`2007T` AS date)",
  statement:"CAST(`2007T` AS date)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$date::2007-01-01
  }
}
{
  name:"CAST('hello' AS date)",
  statement:"CAST('hello' AS date)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('2016-03-01T01:12:12Z' AS date)",
  statement:"CAST('2016-03-01T01:12:12Z' AS date)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`\"2001-01-01\"` AS date)",
  statement:"CAST(`\"2001-01-01\"` AS date)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$date::2001-01-01
  }
}
{
  name:"CAST(`\"+20212-02-01\"` AS date)",
  statement:"CAST(`\"+20212-02-01\"` AS date)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`\"20212-02-01\"` AS date)",
  statement:"CAST(`\"20212-02-01\"` AS date)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`'2000T'` AS date)",
  statement:"CAST(`'2000T'` AS date)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`'1999-04T'` AS date)",
  statement:"CAST(`'1999-04T'` AS date)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"\"}}` AS date)",
  statement:"CAST(`{{\"\"}}` AS date)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{}}` AS date)",
  statement:"CAST(`{{}}` AS date)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[]` AS date)",
  statement:"CAST(`[]` AS date)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`()` AS date)",
  statement:"CAST(`()` AS date)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{}` AS date)",
  statement:"CAST(`{}` AS date)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<>> AS date)",
  statement:"CAST(<<>> AS date)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(TRUE AND FALSE AS time)",
  statement:"CAST(TRUE AND FALSE AS time)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`true` AS time)",
  statement:"CAST(`true` AS time)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(5 AS time)",
  statement:"CAST(5 AS time)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`0e0` AS time)",
  statement:"CAST(`0e0` AS time)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(1.1 AS time)",
  statement:"CAST(1.1 AS time)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(-20.1 AS time)",
  statement:"CAST(-20.1 AS time)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`2007-10-10T` AS time)",
  statement:"CAST(`2007-10-10T` AS time)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$time::{
      hour:0,
      minute:0,
      second:0.,
      timezone_hour:null.int,
      timezone_minute:null.int
    }
  }
}
{
  name:"CAST(`2007-02-23T12:14Z` AS time)",
  statement:"CAST(`2007-02-23T12:14Z` AS time)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$time::{
      hour:12,
      minute:14,
      second:0.,
      timezone_hour:null.int,
      timezone_minute:null.int
    }
  }
}
{
  name:"CAST(`2007-02-23T12:14:33.079Z` AS time)",
  statement:"CAST(`2007-02-23T12:14:33.079Z` AS time)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$time::{
      hour:12,
      minute:14,
      second:33.079,
      timezone_hour:null.int,
      timezone_minute:null.int
    }
  }
}
{
  name:"CAST(`2007-02-23T12:14:33.079-08:00` AS time)",
  statement:"CAST(`2007-02-23T12:14:33.079-08:00` AS time)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$time::{
      hour:12,
      minute:14,
      second:33.079,
      timezone_hour:null.int,
      timezone_minute:null.int
    }
  }
}
{
  name:"CAST(`2007-02T` AS time)",
  statement:"CAST(`2007-02T` AS time)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$time::{
      hour:0,
      minute:0,
      second:0.,
      timezone_hour:null.int,
      timezone_minute:null.int
    }
  }
}
{
  name:"CAST(`2007T` AS time)",
  statement:"CAST(`2007T` AS time)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$time::{
      hour:0,
      minute:0,
      second:0.,
      timezone_hour:null.int,
      timezone_minute:null.int
    }
  }
}
{
  name:"CAST('hello' AS time)",
  statement:"CAST('hello' AS time)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('2016-03-01T01:12:12Z' AS time)",
  statement:"CAST('2016-03-01T01:12:12Z' AS time)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`\"23:2:12.12345\"` AS time)",
  statement:"CAST(`\"23:2:12.12345\"` AS time)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`\"+20212-02-01\"` AS time)",
  statement:"CAST(`\"+20212-02-01\"` AS time)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`\"20212-02-01\"` AS time)",
  statement:"CAST(`\"20212-02-01\"` AS time)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`'2000T'` AS time)",
  statement:"CAST(`'2000T'` AS time)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`'1999-04T'` AS time)",
  statement:"CAST(`'1999-04T'` AS time)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"\"}}` AS time)",
  statement:"CAST(`{{\"\"}}` AS time)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{}}` AS time)",
  statement:"CAST(`{{}}` AS time)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[]` AS time)",
  statement:"CAST(`[]` AS time)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`()` AS time)",
  statement:"CAST(`()` AS time)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{}` AS time)",
  statement:"CAST(`{}` AS time)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<>> AS time)",
  statement:"CAST(<<>> AS time)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(TRUE AND FALSE AS timestamp)",
  statement:"CAST(TRUE AND FALSE AS timestamp)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`true` AS timestamp)",
  statement:"CAST(`true` AS timestamp)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(5 AS timestamp)",
  statement:"CAST(5 AS timestamp)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`0e0` AS timestamp)",
  statement:"CAST(`0e0` AS timestamp)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(1.1 AS timestamp)",
  statement:"CAST(1.1 AS timestamp)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(-20.1 AS timestamp)",
  statement:"CAST(-20.1 AS timestamp)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`2007-10-10T` AS timestamp)",
  statement:"CAST(`2007-10-10T` AS timestamp)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2007-10-10
  }
}
{
  name:"CAST('hello' AS timestamp)",
  statement:"CAST('hello' AS timestamp)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('2016-03-01T01:12:12Z' AS timestamp)",
  statement:"CAST('2016-03-01T01:12:12Z' AS timestamp)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2016-03-01T01:12:12Z
  }
}
{
  name:"CAST(`\"2001-01-01\"` AS timestamp)",
  statement:"CAST(`\"2001-01-01\"` AS timestamp)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2001-01-01
  }
}
{
  name:"CAST(`'2000T'` AS timestamp)",
  statement:"CAST(`'2000T'` AS timestamp)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2000T
  }
}
{
  name:"CAST(`'1999-04T'` AS timestamp)",
  statement:"CAST(`'1999-04T'` AS timestamp)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:1999-04T
  }
}
{
  name:"CAST(`{{\"\"}}` AS timestamp)",
  statement:"CAST(`{{\"\"}}` AS timestamp)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{}}` AS timestamp)",
  statement:"CAST(`{{}}` AS timestamp)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[]` AS timestamp)",
  statement:"CAST(`[]` AS timestamp)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`()` AS timestamp)",
  statement:"CAST(`()` AS timestamp)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{}` AS timestamp)",
  statement:"CAST(`{}` AS timestamp)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<>> AS timestamp)",
  statement:"CAST(<<>> AS timestamp)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(TRUE AND FALSE AS symbol)",
  statement:"CAST(TRUE AND FALSE AS symbol)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:'false'
  }
}
{
  name:"CAST(`true` AS symbol)",
  statement:"CAST(`true` AS symbol)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:'true'
  }
}
{
  name:"CAST(5 AS symbol)",
  statement:"CAST(5 AS symbol)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:'5'
  }
}
{
  name:"CAST(`0e0` AS symbol)",
  statement:"CAST(`0e0` AS symbol)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:'0.0'
  }
}
{
  name:"CAST(1.1 AS symbol)",
  statement:"CAST(1.1 AS symbol)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:'1.1'
  }
}
{
  name:"CAST(-20.1 AS symbol)",
  statement:"CAST(-20.1 AS symbol)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:'-20.1'
  }
}
{
  name:"CAST(`2007-10-10T` AS symbol)",
  statement:"CAST(`2007-10-10T` AS symbol)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:'2007-10-10'
  }
}
{
  name:"CAST('hello' AS symbol)",
  statement:"CAST('hello' AS symbol)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:hello
  }
}
{
  name:"CAST('-20' AS symbol)",
  statement:"CAST('-20' AS symbol)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:'-20'
  }
}
{
  name:"CAST(`\"1000\"` AS symbol)",
  statement:"CAST(`\"1000\"` AS symbol)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:'1000'
  }
}
{
  name:"CAST(`'2e100'` AS symbol)",
  statement:"CAST(`'2e100'` AS symbol)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:'2e100'
  }
}
{
  name:"CAST(`'2d100'` AS symbol)",
  statement:"CAST(`'2d100'` AS symbol)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:'2d100'
  }
}
{
  name:"CAST(`{{\"\"}}` AS symbol)",
  statement:"CAST(`{{\"\"}}` AS symbol)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"0\"}}` AS symbol)",
  statement:"CAST(`{{\"0\"}}` AS symbol)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"1.0\"}}` AS symbol)",
  statement:"CAST(`{{\"1.0\"}}` AS symbol)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"2e10\"}}` AS symbol)",
  statement:"CAST(`{{\"2e10\"}}` AS symbol)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{}}` AS symbol)",
  statement:"CAST(`{{}}` AS symbol)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MA==}}` AS symbol)",
  statement:"CAST(`{{MA==}}` AS symbol)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MS4w}}` AS symbol)",
  statement:"CAST(`{{MS4w}}` AS symbol)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MmUxMA==}}` AS symbol)",
  statement:"CAST(`{{MmUxMA==}}` AS symbol)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[]` AS symbol)",
  statement:"CAST(`[]` AS symbol)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(['hello'] AS symbol)",
  statement:"CAST(['hello'] AS symbol)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[-2d0, 0d0]` AS symbol)",
  statement:"CAST(`[-2d0, 0d0]` AS symbol)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`()` AS symbol)",
  statement:"CAST(`()` AS symbol)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`(1d0)` AS symbol)",
  statement:"CAST(`(1d0)` AS symbol)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`(0d0)` AS symbol)",
  statement:"CAST(`(0d0)` AS symbol)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{}` AS symbol)",
  statement:"CAST(`{}` AS symbol)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST({} AS symbol)",
  statement:"CAST({} AS symbol)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{a:12d0}` AS symbol)",
  statement:"CAST(`{a:12d0}` AS symbol)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST({'b':`-4d0`} AS symbol)",
  statement:"CAST({'b':`-4d0`} AS symbol)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<>> AS symbol)",
  statement:"CAST(<<>> AS symbol)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<`14d0`>> AS symbol)",
  statement:"CAST(<<`14d0`>> AS symbol)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<`20d0`>> AS symbol)",
  statement:"CAST(<<`20d0`>> AS symbol)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(TRUE AND FALSE AS STRING)",
  statement:"CAST(TRUE AND FALSE AS STRING)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"false"
  }
}
{
  name:"CAST(TRUE AND FALSE AS VARCHAR(30))",
  statement:"CAST(TRUE AND FALSE AS VARCHAR(30))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"false"
  }
}
{
  name:"CAST(TRUE AND FALSE AS CHARACTER VARYING(30))",
  statement:"CAST(TRUE AND FALSE AS CHARACTER VARYING(30))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"false"
  }
}
{
  name:"CAST(`true` AS STRING)",
  statement:"CAST(`true` AS STRING)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"true"
  }
}
{
  name:"CAST(`true` AS VARCHAR(30))",
  statement:"CAST(`true` AS VARCHAR(30))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"true"
  }
}
{
  name:"CAST(`true` AS CHARACTER VARYING(30))",
  statement:"CAST(`true` AS CHARACTER VARYING(30))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"true"
  }
}
{
  name:"CAST(5 AS STRING)",
  statement:"CAST(5 AS STRING)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"5"
  }
}
{
  name:"CAST(5 AS VARCHAR(30))",
  statement:"CAST(5 AS VARCHAR(30))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"5"
  }
}
{
  name:"CAST(5 AS CHARACTER VARYING(30))",
  statement:"CAST(5 AS CHARACTER VARYING(30))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"5"
  }
}
{
  name:"CAST(`0e0` AS STRING)",
  statement:"CAST(`0e0` AS STRING)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"0.0"
  }
}
{
  name:"CAST(`0e0` AS VARCHAR(30))",
  statement:"CAST(`0e0` AS VARCHAR(30))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"0.0"
  }
}
{
  name:"CAST(`0e0` AS CHARACTER VARYING(30))",
  statement:"CAST(`0e0` AS CHARACTER VARYING(30))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"0.0"
  }
}
{
  name:"CAST(1.1 AS STRING)",
  statement:"CAST(1.1 AS STRING)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"1.1"
  }
}
{
  name:"CAST(1.1 AS VARCHAR(30))",
  statement:"CAST(1.1 AS VARCHAR(30))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"1.1"
  }
}
{
  name:"CAST(1.1 AS CHARACTER VARYING(30))",
  statement:"CAST(1.1 AS CHARACTER VARYING(30))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"1.1"
  }
}
{
  name:"CAST(-20.1 AS STRING)",
  statement:"CAST(-20.1 AS STRING)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"-20.1"
  }
}
{
  name:"CAST(-20.1 AS VARCHAR(30))",
  statement:"CAST(-20.1 AS VARCHAR(30))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"-20.1"
  }
}
{
  name:"CAST(-20.1 AS CHARACTER VARYING(30))",
  statement:"CAST(-20.1 AS CHARACTER VARYING(30))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"-20.1"
  }
}
{
  name:"CAST(`2007-10-10T` AS STRING)",
  statement:"CAST(`2007-10-10T` AS STRING)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"2007-10-10"
  }
}
{
  name:"CAST(`2007-10-10T` AS VARCHAR(30))",
  statement:"CAST(`2007-10-10T` AS VARCHAR(30))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"2007-10-10"
  }
}
{
  name:"CAST(`2007-10-10T` AS CHARACTER VARYING(30))",
  statement:"CAST(`2007-10-10T` AS CHARACTER VARYING(30))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"2007-10-10"
  }
}
{
  name:"CAST('hello' AS STRING)",
  statement:"CAST('hello' AS STRING)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"hello"
  }
}
{
  name:"CAST('hello' AS VARCHAR(30))",
  statement:"CAST('hello' AS VARCHAR(30))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"hello"
  }
}
{
  name:"CAST('hello' AS CHARACTER VARYING(30))",
  statement:"CAST('hello' AS CHARACTER VARYING(30))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"hello"
  }
}
{
  name:"CAST('-20' AS STRING)",
  statement:"CAST('-20' AS STRING)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"-20"
  }
}
{
  name:"CAST('-20' AS VARCHAR(30))",
  statement:"CAST('-20' AS VARCHAR(30))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"-20"
  }
}
{
  name:"CAST('-20' AS CHARACTER VARYING(30))",
  statement:"CAST('-20' AS CHARACTER VARYING(30))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"-20"
  }
}
{
  name:"CAST(`\"1000\"` AS STRING)",
  statement:"CAST(`\"1000\"` AS STRING)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"1000"
  }
}
{
  name:"CAST(`\"1000\"` AS VARCHAR(30))",
  statement:"CAST(`\"1000\"` AS VARCHAR(30))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"1000"
  }
}
{
  name:"CAST(`\"1000\"` AS CHARACTER VARYING(30))",
  statement:"CAST(`\"1000\"` AS CHARACTER VARYING(30))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"1000"
  }
}
{
  name:"CAST(`'2e100'` AS STRING)",
  statement:"CAST(`'2e100'` AS STRING)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"2e100"
  }
}
{
  name:"CAST(`'2e100'` AS VARCHAR(30))",
  statement:"CAST(`'2e100'` AS VARCHAR(30))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"2e100"
  }
}
{
  name:"CAST(`'2e100'` AS CHARACTER VARYING(30))",
  statement:"CAST(`'2e100'` AS CHARACTER VARYING(30))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"2e100"
  }
}
{
  name:"CAST(`'2d100'` AS STRING)",
  statement:"CAST(`'2d100'` AS STRING)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"2d100"
  }
}
{
  name:"CAST(`'2d100'` AS VARCHAR(30))",
  statement:"CAST(`'2d100'` AS VARCHAR(30))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"2d100"
  }
}
{
  name:"CAST(`'2d100'` AS CHARACTER VARYING(30))",
  statement:"CAST(`'2d100'` AS CHARACTER VARYING(30))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"2d100"
  }
}
{
  name:"CAST(`{{\"\"}}` AS STRING)",
  statement:"CAST(`{{\"\"}}` AS STRING)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"\"}}` AS VARCHAR(30))",
  statement:"CAST(`{{\"\"}}` AS VARCHAR(30))",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"\"}}` AS CHARACTER VARYING(30))",
  statement:"CAST(`{{\"\"}}` AS CHARACTER VARYING(30))",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"0\"}}` AS STRING)",
  statement:"CAST(`{{\"0\"}}` AS STRING)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"0\"}}` AS VARCHAR(30))",
  statement:"CAST(`{{\"0\"}}` AS VARCHAR(30))",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"0\"}}` AS CHARACTER VARYING(30))",
  statement:"CAST(`{{\"0\"}}` AS CHARACTER VARYING(30))",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"1.0\"}}` AS STRING)",
  statement:"CAST(`{{\"1.0\"}}` AS STRING)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"1.0\"}}` AS VARCHAR(30))",
  statement:"CAST(`{{\"1.0\"}}` AS VARCHAR(30))",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"1.0\"}}` AS CHARACTER VARYING(30))",
  statement:"CAST(`{{\"1.0\"}}` AS CHARACTER VARYING(30))",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"2e10\"}}` AS STRING)",
  statement:"CAST(`{{\"2e10\"}}` AS STRING)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"2e10\"}}` AS VARCHAR(30))",
  statement:"CAST(`{{\"2e10\"}}` AS VARCHAR(30))",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"2e10\"}}` AS CHARACTER VARYING(30))",
  statement:"CAST(`{{\"2e10\"}}` AS CHARACTER VARYING(30))",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{}}` AS STRING)",
  statement:"CAST(`{{}}` AS STRING)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{}}` AS VARCHAR(30))",
  statement:"CAST(`{{}}` AS VARCHAR(30))",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{}}` AS CHARACTER VARYING(30))",
  statement:"CAST(`{{}}` AS CHARACTER VARYING(30))",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MA==}}` AS STRING)",
  statement:"CAST(`{{MA==}}` AS STRING)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MA==}}` AS VARCHAR(30))",
  statement:"CAST(`{{MA==}}` AS VARCHAR(30))",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MA==}}` AS CHARACTER VARYING(30))",
  statement:"CAST(`{{MA==}}` AS CHARACTER VARYING(30))",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MS4w}}` AS STRING)",
  statement:"CAST(`{{MS4w}}` AS STRING)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MS4w}}` AS VARCHAR(30))",
  statement:"CAST(`{{MS4w}}` AS VARCHAR(30))",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MS4w}}` AS CHARACTER VARYING(30))",
  statement:"CAST(`{{MS4w}}` AS CHARACTER VARYING(30))",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MmUxMA==}}` AS STRING)",
  statement:"CAST(`{{MmUxMA==}}` AS STRING)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MmUxMA==}}` AS VARCHAR(30))",
  statement:"CAST(`{{MmUxMA==}}` AS VARCHAR(30))",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MmUxMA==}}` AS CHARACTER VARYING(30))",
  statement:"CAST(`{{MmUxMA==}}` AS CHARACTER VARYING(30))",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[]` AS STRING)",
  statement:"CAST(`[]` AS STRING)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[]` AS VARCHAR(30))",
  statement:"CAST(`[]` AS VARCHAR(30))",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[]` AS CHARACTER VARYING(30))",
  statement:"CAST(`[]` AS CHARACTER VARYING(30))",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(['hello'] AS STRING)",
  statement:"CAST(['hello'] AS STRING)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(['hello'] AS VARCHAR(30))",
  statement:"CAST(['hello'] AS VARCHAR(30))",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(['hello'] AS CHARACTER VARYING(30))",
  statement:"CAST(['hello'] AS CHARACTER VARYING(30))",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[-2d0, 0d0]` AS STRING)",
  statement:"CAST(`[-2d0, 0d0]` AS STRING)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[-2d0, 0d0]` AS VARCHAR(30))",
  statement:"CAST(`[-2d0, 0d0]` AS VARCHAR(30))",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[-2d0, 0d0]` AS CHARACTER VARYING(30))",
  statement:"CAST(`[-2d0, 0d0]` AS CHARACTER VARYING(30))",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`()` AS STRING)",
  statement:"CAST(`()` AS STRING)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`()` AS VARCHAR(30))",
  statement:"CAST(`()` AS VARCHAR(30))",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`()` AS CHARACTER VARYING(30))",
  statement:"CAST(`()` AS CHARACTER VARYING(30))",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`(1d0)` AS STRING)",
  statement:"CAST(`(1d0)` AS STRING)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`(1d0)` AS VARCHAR(30))",
  statement:"CAST(`(1d0)` AS VARCHAR(30))",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`(1d0)` AS CHARACTER VARYING(30))",
  statement:"CAST(`(1d0)` AS CHARACTER VARYING(30))",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`(0d0)` AS STRING)",
  statement:"CAST(`(0d0)` AS STRING)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`(0d0)` AS VARCHAR(30))",
  statement:"CAST(`(0d0)` AS VARCHAR(30))",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`(0d0)` AS CHARACTER VARYING(30))",
  statement:"CAST(`(0d0)` AS CHARACTER VARYING(30))",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{}` AS STRING)",
  statement:"CAST(`{}` AS STRING)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{}` AS VARCHAR(30))",
  statement:"CAST(`{}` AS VARCHAR(30))",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{}` AS CHARACTER VARYING(30))",
  statement:"CAST(`{}` AS CHARACTER VARYING(30))",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST({} AS STRING)",
  statement:"CAST({} AS STRING)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST({} AS VARCHAR(30))",
  statement:"CAST({} AS VARCHAR(30))",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST({} AS CHARACTER VARYING(30))",
  statement:"CAST({} AS CHARACTER VARYING(30))",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{a:12d0}` AS STRING)",
  statement:"CAST(`{a:12d0}` AS STRING)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{a:12d0}` AS VARCHAR(30))",
  statement:"CAST(`{a:12d0}` AS VARCHAR(30))",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{a:12d0}` AS CHARACTER VARYING(30))",
  statement:"CAST(`{a:12d0}` AS CHARACTER VARYING(30))",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST({'b':`-4d0`} AS STRING)",
  statement:"CAST({'b':`-4d0`} AS STRING)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST({'b':`-4d0`} AS VARCHAR(30))",
  statement:"CAST({'b':`-4d0`} AS VARCHAR(30))",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST({'b':`-4d0`} AS CHARACTER VARYING(30))",
  statement:"CAST({'b':`-4d0`} AS CHARACTER VARYING(30))",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<>> AS STRING)",
  statement:"CAST(<<>> AS STRING)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<>> AS VARCHAR(30))",
  statement:"CAST(<<>> AS VARCHAR(30))",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<>> AS CHARACTER VARYING(30))",
  statement:"CAST(<<>> AS CHARACTER VARYING(30))",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<`14d0`>> AS STRING)",
  statement:"CAST(<<`14d0`>> AS STRING)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<`14d0`>> AS VARCHAR(30))",
  statement:"CAST(<<`14d0`>> AS VARCHAR(30))",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<`14d0`>> AS CHARACTER VARYING(30))",
  statement:"CAST(<<`14d0`>> AS CHARACTER VARYING(30))",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<'a', <<'hello'>>>> AS STRING)",
  statement:"CAST(<<'a', <<'hello'>>>> AS STRING)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<'a', <<'hello'>>>> AS VARCHAR(30))",
  statement:"CAST(<<'a', <<'hello'>>>> AS VARCHAR(30))",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<'a', <<'hello'>>>> AS CHARACTER VARYING(30))",
  statement:"CAST(<<'a', <<'hello'>>>> AS CHARACTER VARYING(30))",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<`20d0`>> AS STRING)",
  statement:"CAST(<<`20d0`>> AS STRING)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<`20d0`>> AS VARCHAR(30))",
  statement:"CAST(<<`20d0`>> AS VARCHAR(30))",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<`20d0`>> AS CHARACTER VARYING(30))",
  statement:"CAST(<<`20d0`>> AS CHARACTER VARYING(30))",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(TRUE AND FALSE AS clob)",
  statement:"CAST(TRUE AND FALSE AS clob)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`true` AS clob)",
  statement:"CAST(`true` AS clob)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(5 AS clob)",
  statement:"CAST(5 AS clob)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`0e0` AS clob)",
  statement:"CAST(`0e0` AS clob)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(1.1 AS clob)",
  statement:"CAST(1.1 AS clob)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(-20.1 AS clob)",
  statement:"CAST(-20.1 AS clob)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`2007-10-10T` AS clob)",
  statement:"CAST(`2007-10-10T` AS clob)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('hello' AS clob)",
  statement:"CAST('hello' AS clob)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('-20' AS clob)",
  statement:"CAST('-20' AS clob)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`\"1000\"` AS clob)",
  statement:"CAST(`\"1000\"` AS clob)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`'2e100'` AS clob)",
  statement:"CAST(`'2e100'` AS clob)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`'2d100'` AS clob)",
  statement:"CAST(`'2d100'` AS clob)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"\"}}` AS clob)",
  statement:"CAST(`{{\"\"}}` AS clob)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:{{ "" }}
  }
}
{
  name:"CAST(`{{\"0\"}}` AS clob)",
  statement:"CAST(`{{\"0\"}}` AS clob)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:{{ "0" }}
  }
}
{
  name:"CAST(`{{\"1.0\"}}` AS clob)",
  statement:"CAST(`{{\"1.0\"}}` AS clob)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:{{ "1.0" }}
  }
}
{
  name:"CAST(`{{\"2e10\"}}` AS clob)",
  statement:"CAST(`{{\"2e10\"}}` AS clob)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:{{ "2e10" }}
  }
}
{
  name:"CAST(`{{}}` AS clob)",
  statement:"CAST(`{{}}` AS clob)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:{{ "" }}
  }
}
{
  name:"CAST(`{{MA==}}` AS clob)",
  statement:"CAST(`{{MA==}}` AS clob)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:{{ "0" }}
  }
}
{
  name:"CAST(`{{MS4w}}` AS clob)",
  statement:"CAST(`{{MS4w}}` AS clob)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:{{ "1.0" }}
  }
}
{
  name:"CAST(`{{MmUxMA==}}` AS clob)",
  statement:"CAST(`{{MmUxMA==}}` AS clob)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:{{ "2e10" }}
  }
}
{
  name:"CAST(`[]` AS clob)",
  statement:"CAST(`[]` AS clob)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(['hello'] AS clob)",
  statement:"CAST(['hello'] AS clob)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[-2d0, 0d0]` AS clob)",
  statement:"CAST(`[-2d0, 0d0]` AS clob)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`()` AS clob)",
  statement:"CAST(`()` AS clob)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`(1d0)` AS clob)",
  statement:"CAST(`(1d0)` AS clob)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`(0d0)` AS clob)",
  statement:"CAST(`(0d0)` AS clob)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{}` AS clob)",
  statement:"CAST(`{}` AS clob)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST({} AS clob)",
  statement:"CAST({} AS clob)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{a:12d0}` AS clob)",
  statement:"CAST(`{a:12d0}` AS clob)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST({'b':`-4d0`} AS clob)",
  statement:"CAST({'b':`-4d0`} AS clob)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<>> AS clob)",
  statement:"CAST(<<>> AS clob)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<`14d0`>> AS clob)",
  statement:"CAST(<<`14d0`>> AS clob)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<`20d0`>> AS clob)",
  statement:"CAST(<<`20d0`>> AS clob)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(TRUE AND FALSE AS blob)",
  statement:"CAST(TRUE AND FALSE AS blob)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`true` AS blob)",
  statement:"CAST(`true` AS blob)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(5 AS blob)",
  statement:"CAST(5 AS blob)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`0e0` AS blob)",
  statement:"CAST(`0e0` AS blob)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(1.1 AS blob)",
  statement:"CAST(1.1 AS blob)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(-20.1 AS blob)",
  statement:"CAST(-20.1 AS blob)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`2007-10-10T` AS blob)",
  statement:"CAST(`2007-10-10T` AS blob)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('hello' AS blob)",
  statement:"CAST('hello' AS blob)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('-20' AS blob)",
  statement:"CAST('-20' AS blob)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`\"1000\"` AS blob)",
  statement:"CAST(`\"1000\"` AS blob)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`'2e100'` AS blob)",
  statement:"CAST(`'2e100'` AS blob)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`'2d100'` AS blob)",
  statement:"CAST(`'2d100'` AS blob)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"\"}}` AS blob)",
  statement:"CAST(`{{\"\"}}` AS blob)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:{{  }}
  }
}
{
  name:"CAST(`{{\"0\"}}` AS blob)",
  statement:"CAST(`{{\"0\"}}` AS blob)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:{{ MA== }}
  }
}
{
  name:"CAST(`{{\"1.0\"}}` AS blob)",
  statement:"CAST(`{{\"1.0\"}}` AS blob)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:{{ MS4w }}
  }
}
{
  name:"CAST(`{{\"2e10\"}}` AS blob)",
  statement:"CAST(`{{\"2e10\"}}` AS blob)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:{{ MmUxMA== }}
  }
}
{
  name:"CAST(`{{}}` AS blob)",
  statement:"CAST(`{{}}` AS blob)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:{{  }}
  }
}
{
  name:"CAST(`{{MA==}}` AS blob)",
  statement:"CAST(`{{MA==}}` AS blob)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:{{ MA== }}
  }
}
{
  name:"CAST(`{{MS4w}}` AS blob)",
  statement:"CAST(`{{MS4w}}` AS blob)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:{{ MS4w }}
  }
}
{
  name:"CAST(`{{MmUxMA==}}` AS blob)",
  statement:"CAST(`{{MmUxMA==}}` AS blob)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:{{ MmUxMA== }}
  }
}
{
  name:"CAST(`[]` AS blob)",
  statement:"CAST(`[]` AS blob)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(['hello'] AS blob)",
  statement:"CAST(['hello'] AS blob)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[-2d0, 0d0]` AS blob)",
  statement:"CAST(`[-2d0, 0d0]` AS blob)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`()` AS blob)",
  statement:"CAST(`()` AS blob)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`(1d0)` AS blob)",
  statement:"CAST(`(1d0)` AS blob)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`(0d0)` AS blob)",
  statement:"CAST(`(0d0)` AS blob)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{}` AS blob)",
  statement:"CAST(`{}` AS blob)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST({} AS blob)",
  statement:"CAST({} AS blob)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{a:12d0}` AS blob)",
  statement:"CAST(`{a:12d0}` AS blob)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST({'b':`-4d0`} AS blob)",
  statement:"CAST({'b':`-4d0`} AS blob)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<>> AS blob)",
  statement:"CAST(<<>> AS blob)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<`14d0`>> AS blob)",
  statement:"CAST(<<`14d0`>> AS blob)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<`20d0`>> AS blob)",
  statement:"CAST(<<`20d0`>> AS blob)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(TRUE AND FALSE AS list)",
  statement:"CAST(TRUE AND FALSE AS list)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`true` AS list)",
  statement:"CAST(`true` AS list)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(5 AS list)",
  statement:"CAST(5 AS list)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`0e0` AS list)",
  statement:"CAST(`0e0` AS list)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(1.1 AS list)",
  statement:"CAST(1.1 AS list)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(-20.1 AS list)",
  statement:"CAST(-20.1 AS list)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`2007-10-10T` AS list)",
  statement:"CAST(`2007-10-10T` AS list)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('hello' AS list)",
  statement:"CAST('hello' AS list)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('-20' AS list)",
  statement:"CAST('-20' AS list)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`\"1000\"` AS list)",
  statement:"CAST(`\"1000\"` AS list)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`'2e100'` AS list)",
  statement:"CAST(`'2e100'` AS list)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`'2d100'` AS list)",
  statement:"CAST(`'2d100'` AS list)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"\"}}` AS list)",
  statement:"CAST(`{{\"\"}}` AS list)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"0\"}}` AS list)",
  statement:"CAST(`{{\"0\"}}` AS list)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"1.0\"}}` AS list)",
  statement:"CAST(`{{\"1.0\"}}` AS list)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"2e10\"}}` AS list)",
  statement:"CAST(`{{\"2e10\"}}` AS list)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{}}` AS list)",
  statement:"CAST(`{{}}` AS list)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MA==}}` AS list)",
  statement:"CAST(`{{MA==}}` AS list)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MS4w}}` AS list)",
  statement:"CAST(`{{MS4w}}` AS list)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MmUxMA==}}` AS list)",
  statement:"CAST(`{{MmUxMA==}}` AS list)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[]` AS list)",
  statement:"CAST(`[]` AS list)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
    ]
  }
}
{
  name:"CAST(['hello'] AS list)",
  statement:"CAST(['hello'] AS list)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
      "hello"
    ]
  }
}
{
  name:"CAST(`[-2d0, 0d0]` AS list)",
  statement:"CAST(`[-2d0, 0d0]` AS list)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
      -2.,
      0.
    ]
  }
}
{
  name:"CAST(`()` AS list)",
  statement:"CAST(`()` AS list)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
    ]
  }
}
{
  name:"CAST(`(1d0)` AS list)",
  statement:"CAST(`(1d0)` AS list)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
      1.
    ]
  }
}
{
  name:"CAST(`(0d0)` AS list)",
  statement:"CAST(`(0d0)` AS list)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
      0.
    ]
  }
}
{
  name:"CAST(`{}` AS list)",
  statement:"CAST(`{}` AS list)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST({} AS list)",
  statement:"CAST({} AS list)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{a:12d0}` AS list)",
  statement:"CAST(`{a:12d0}` AS list)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST({'b':`-4d0`} AS list)",
  statement:"CAST({'b':`-4d0`} AS list)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<>> AS list)",
  statement:"CAST(<<>> AS list)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
    ]
  }
}
{
  name:"CAST(<<`14d0`>> AS list)",
  statement:"CAST(<<`14d0`>> AS list)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
      14.
    ]
  }
}
{
  name:"CAST(<<`20d0`>> AS list)",
  statement:"CAST(<<`20d0`>> AS list)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
      20.
    ]
  }
}
{
  name:"CAST(TRUE AND FALSE AS sexp)",
  statement:"CAST(TRUE AND FALSE AS sexp)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`true` AS sexp)",
  statement:"CAST(`true` AS sexp)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(5 AS sexp)",
  statement:"CAST(5 AS sexp)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`0e0` AS sexp)",
  statement:"CAST(`0e0` AS sexp)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(1.1 AS sexp)",
  statement:"CAST(1.1 AS sexp)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(-20.1 AS sexp)",
  statement:"CAST(-20.1 AS sexp)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`2007-10-10T` AS sexp)",
  statement:"CAST(`2007-10-10T` AS sexp)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('hello' AS sexp)",
  statement:"CAST('hello' AS sexp)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('-20' AS sexp)",
  statement:"CAST('-20' AS sexp)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`\"1000\"` AS sexp)",
  statement:"CAST(`\"1000\"` AS sexp)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`'2e100'` AS sexp)",
  statement:"CAST(`'2e100'` AS sexp)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`'2d100'` AS sexp)",
  statement:"CAST(`'2d100'` AS sexp)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"\"}}` AS sexp)",
  statement:"CAST(`{{\"\"}}` AS sexp)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"0\"}}` AS sexp)",
  statement:"CAST(`{{\"0\"}}` AS sexp)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"1.0\"}}` AS sexp)",
  statement:"CAST(`{{\"1.0\"}}` AS sexp)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"2e10\"}}` AS sexp)",
  statement:"CAST(`{{\"2e10\"}}` AS sexp)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{}}` AS sexp)",
  statement:"CAST(`{{}}` AS sexp)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MA==}}` AS sexp)",
  statement:"CAST(`{{MA==}}` AS sexp)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MS4w}}` AS sexp)",
  statement:"CAST(`{{MS4w}}` AS sexp)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MmUxMA==}}` AS sexp)",
  statement:"CAST(`{{MmUxMA==}}` AS sexp)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[]` AS sexp)",
  statement:"CAST(`[]` AS sexp)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:(
    )
  }
}
{
  name:"CAST(['hello'] AS sexp)",
  statement:"CAST(['hello'] AS sexp)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:(
      "hello"
    )
  }
}
{
  name:"CAST(`[-2d0, 0d0]` AS sexp)",
  statement:"CAST(`[-2d0, 0d0]` AS sexp)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:(
      -2.
      0.
    )
  }
}
{
  name:"CAST(`()` AS sexp)",
  statement:"CAST(`()` AS sexp)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:(
    )
  }
}
{
  name:"CAST(`(1d0)` AS sexp)",
  statement:"CAST(`(1d0)` AS sexp)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:(
      1.
    )
  }
}
{
  name:"CAST(`(0d0)` AS sexp)",
  statement:"CAST(`(0d0)` AS sexp)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:(
      0.
    )
  }
}
{
  name:"CAST(`{}` AS sexp)",
  statement:"CAST(`{}` AS sexp)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST({} AS sexp)",
  statement:"CAST({} AS sexp)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{a:12d0}` AS sexp)",
  statement:"CAST(`{a:12d0}` AS sexp)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST({'b':`-4d0`} AS sexp)",
  statement:"CAST({'b':`-4d0`} AS sexp)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<>> AS sexp)",
  statement:"CAST(<<>> AS sexp)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:(
    )
  }
}
{
  name:"CAST(<<`14d0`>> AS sexp)",
  statement:"CAST(<<`14d0`>> AS sexp)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:(
      14.
    )
  }
}
{
  name:"CAST(<<`20d0`>> AS sexp)",
  statement:"CAST(<<`20d0`>> AS sexp)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:(
      20.
    )
  }
}
{
  name:"CAST(TRUE AND FALSE AS struct)",
  statement:"CAST(TRUE AND FALSE AS struct)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(TRUE AND FALSE AS tuple)",
  statement:"CAST(TRUE AND FALSE AS tuple)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`true` AS struct)",
  statement:"CAST(`true` AS struct)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`true` AS tuple)",
  statement:"CAST(`true` AS tuple)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(5 AS struct)",
  statement:"CAST(5 AS struct)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(5 AS tuple)",
  statement:"CAST(5 AS tuple)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`0e0` AS struct)",
  statement:"CAST(`0e0` AS struct)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`0e0` AS tuple)",
  statement:"CAST(`0e0` AS tuple)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(1.1 AS struct)",
  statement:"CAST(1.1 AS struct)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(1.1 AS tuple)",
  statement:"CAST(1.1 AS tuple)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(-20.1 AS struct)",
  statement:"CAST(-20.1 AS struct)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(-20.1 AS tuple)",
  statement:"CAST(-20.1 AS tuple)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`2007-10-10T` AS struct)",
  statement:"CAST(`2007-10-10T` AS struct)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`2007-10-10T` AS tuple)",
  statement:"CAST(`2007-10-10T` AS tuple)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('hello' AS struct)",
  statement:"CAST('hello' AS struct)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('hello' AS tuple)",
  statement:"CAST('hello' AS tuple)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('-20' AS struct)",
  statement:"CAST('-20' AS struct)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('-20' AS tuple)",
  statement:"CAST('-20' AS tuple)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`\"1000\"` AS struct)",
  statement:"CAST(`\"1000\"` AS struct)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`\"1000\"` AS tuple)",
  statement:"CAST(`\"1000\"` AS tuple)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`'2e100'` AS struct)",
  statement:"CAST(`'2e100'` AS struct)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`'2e100'` AS tuple)",
  statement:"CAST(`'2e100'` AS tuple)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`'2d100'` AS struct)",
  statement:"CAST(`'2d100'` AS struct)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`'2d100'` AS tuple)",
  statement:"CAST(`'2d100'` AS tuple)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"\"}}` AS struct)",
  statement:"CAST(`{{\"\"}}` AS struct)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"\"}}` AS tuple)",
  statement:"CAST(`{{\"\"}}` AS tuple)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"0\"}}` AS struct)",
  statement:"CAST(`{{\"0\"}}` AS struct)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"0\"}}` AS tuple)",
  statement:"CAST(`{{\"0\"}}` AS tuple)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"1.0\"}}` AS struct)",
  statement:"CAST(`{{\"1.0\"}}` AS struct)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"1.0\"}}` AS tuple)",
  statement:"CAST(`{{\"1.0\"}}` AS tuple)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"2e10\"}}` AS struct)",
  statement:"CAST(`{{\"2e10\"}}` AS struct)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"2e10\"}}` AS tuple)",
  statement:"CAST(`{{\"2e10\"}}` AS tuple)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{}}` AS struct)",
  statement:"CAST(`{{}}` AS struct)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{}}` AS tuple)",
  statement:"CAST(`{{}}` AS tuple)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MA==}}` AS struct)",
  statement:"CAST(`{{MA==}}` AS struct)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MA==}}` AS tuple)",
  statement:"CAST(`{{MA==}}` AS tuple)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MS4w}}` AS struct)",
  statement:"CAST(`{{MS4w}}` AS struct)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MS4w}}` AS tuple)",
  statement:"CAST(`{{MS4w}}` AS tuple)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MmUxMA==}}` AS struct)",
  statement:"CAST(`{{MmUxMA==}}` AS struct)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MmUxMA==}}` AS tuple)",
  statement:"CAST(`{{MmUxMA==}}` AS tuple)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[]` AS struct)",
  statement:"CAST(`[]` AS struct)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[]` AS tuple)",
  statement:"CAST(`[]` AS tuple)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(['hello'] AS struct)",
  statement:"CAST(['hello'] AS struct)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(['hello'] AS tuple)",
  statement:"CAST(['hello'] AS tuple)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[-2d0, 0d0]` AS struct)",
  statement:"CAST(`[-2d0, 0d0]` AS struct)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[-2d0, 0d0]` AS tuple)",
  statement:"CAST(`[-2d0, 0d0]` AS tuple)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`()` AS struct)",
  statement:"CAST(`()` AS struct)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`()` AS tuple)",
  statement:"CAST(`()` AS tuple)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`(1d0)` AS struct)",
  statement:"CAST(`(1d0)` AS struct)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`(1d0)` AS tuple)",
  statement:"CAST(`(1d0)` AS tuple)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`(0d0)` AS struct)",
  statement:"CAST(`(0d0)` AS struct)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`(0d0)` AS tuple)",
  statement:"CAST(`(0d0)` AS tuple)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{}` AS struct)",
  statement:"CAST(`{}` AS struct)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:{
    }
  }
}
{
  name:"CAST(`{}` AS tuple)",
  statement:"CAST(`{}` AS tuple)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:{
    }
  }
}
{
  name:"CAST({} AS struct)",
  statement:"CAST({} AS struct)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:{
    }
  }
}
{
  name:"CAST({} AS tuple)",
  statement:"CAST({} AS tuple)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:{
    }
  }
}
{
  name:"CAST(`{a:12d0}` AS struct)",
  statement:"CAST(`{a:12d0}` AS struct)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:{
      a:12.
    }
  }
}
{
  name:"CAST(`{a:12d0}` AS tuple)",
  statement:"CAST(`{a:12d0}` AS tuple)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:{
      a:12.
    }
  }
}
{
  name:"CAST({'b':`-4d0`} AS struct)",
  statement:"CAST({'b':`-4d0`} AS struct)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:{
      b:-4.
    }
  }
}
{
  name:"CAST({'b':`-4d0`} AS tuple)",
  statement:"CAST({'b':`-4d0`} AS tuple)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:{
      b:-4.
    }
  }
}
{
  name:"CAST(<<>> AS struct)",
  statement:"CAST(<<>> AS struct)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<>> AS tuple)",
  statement:"CAST(<<>> AS tuple)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<`14d0`>> AS struct)",
  statement:"CAST(<<`14d0`>> AS struct)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<`14d0`>> AS tuple)",
  statement:"CAST(<<`14d0`>> AS tuple)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<`20d0`>> AS struct)",
  statement:"CAST(<<`20d0`>> AS struct)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<`20d0`>> AS tuple)",
  statement:"CAST(<<`20d0`>> AS tuple)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(TRUE AND FALSE AS bag)",
  statement:"CAST(TRUE AND FALSE AS bag)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`true` AS bag)",
  statement:"CAST(`true` AS bag)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(5 AS bag)",
  statement:"CAST(5 AS bag)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`0e0` AS bag)",
  statement:"CAST(`0e0` AS bag)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(1.1 AS bag)",
  statement:"CAST(1.1 AS bag)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(-20.1 AS bag)",
  statement:"CAST(-20.1 AS bag)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`2007-10-10T` AS bag)",
  statement:"CAST(`2007-10-10T` AS bag)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('hello' AS bag)",
  statement:"CAST('hello' AS bag)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('-20' AS bag)",
  statement:"CAST('-20' AS bag)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`\"1000\"` AS bag)",
  statement:"CAST(`\"1000\"` AS bag)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`'2e100'` AS bag)",
  statement:"CAST(`'2e100'` AS bag)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`'2d100'` AS bag)",
  statement:"CAST(`'2d100'` AS bag)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"\"}}` AS bag)",
  statement:"CAST(`{{\"\"}}` AS bag)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"0\"}}` AS bag)",
  statement:"CAST(`{{\"0\"}}` AS bag)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"1.0\"}}` AS bag)",
  statement:"CAST(`{{\"1.0\"}}` AS bag)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"2e10\"}}` AS bag)",
  statement:"CAST(`{{\"2e10\"}}` AS bag)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{}}` AS bag)",
  statement:"CAST(`{{}}` AS bag)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MA==}}` AS bag)",
  statement:"CAST(`{{MA==}}` AS bag)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MS4w}}` AS bag)",
  statement:"CAST(`{{MS4w}}` AS bag)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MmUxMA==}}` AS bag)",
  statement:"CAST(`{{MmUxMA==}}` AS bag)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[]` AS bag)",
  statement:"CAST(`[]` AS bag)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$bag::[
    ]
  }
}
{
  name:"CAST(['hello'] AS bag)",
  statement:"CAST(['hello'] AS bag)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$bag::[
      "hello"
    ]
  }
}
{
  name:"CAST(`[-2d0, 0d0]` AS bag)",
  statement:"CAST(`[-2d0, 0d0]` AS bag)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$bag::[
      -2.,
      0.
    ]
  }
}
{
  name:"CAST(`()` AS bag)",
  statement:"CAST(`()` AS bag)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$bag::[
    ]
  }
}
{
  name:"CAST(`(1d0)` AS bag)",
  statement:"CAST(`(1d0)` AS bag)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$bag::[
      1.
    ]
  }
}
{
  name:"CAST(`(0d0)` AS bag)",
  statement:"CAST(`(0d0)` AS bag)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$bag::[
      0.
    ]
  }
}
{
  name:"CAST(`{}` AS bag)",
  statement:"CAST(`{}` AS bag)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST({} AS bag)",
  statement:"CAST({} AS bag)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{a:12d0}` AS bag)",
  statement:"CAST(`{a:12d0}` AS bag)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST({'b':`-4d0`} AS bag)",
  statement:"CAST({'b':`-4d0`} AS bag)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<>> AS bag)",
  statement:"CAST(<<>> AS bag)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$bag::[
    ]
  }
}
{
  name:"CAST(<<`14d0`>> AS bag)",
  statement:"CAST(<<`14d0`>> AS bag)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$bag::[
      14.
    ]
  }
}
{
  name:"CAST(<<`20d0`>> AS bag)",
  statement:"CAST(<<`20d0`>> AS bag)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$bag::[
      20.
    ]
  }
}
{
  name:"CAST(TRUE AND FALSE AS CHAR)",
  statement:"CAST(TRUE AND FALSE AS CHAR)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"f"
  }
}
{
  name:"CAST(TRUE AND FALSE AS CHARACTER)",
  statement:"CAST(TRUE AND FALSE AS CHARACTER)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"f"
  }
}
{
  name:"CAST(`true` AS CHAR)",
  statement:"CAST(`true` AS CHAR)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"t"
  }
}
{
  name:"CAST(`true` AS CHARACTER)",
  statement:"CAST(`true` AS CHARACTER)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"t"
  }
}
{
  name:"CAST(5 AS CHAR)",
  statement:"CAST(5 AS CHAR)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"5"
  }
}
{
  name:"CAST(5 AS CHARACTER)",
  statement:"CAST(5 AS CHARACTER)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"5"
  }
}
{
  name:"CAST(`0e0` AS CHAR)",
  statement:"CAST(`0e0` AS CHAR)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"0"
  }
}
{
  name:"CAST(`0e0` AS CHARACTER)",
  statement:"CAST(`0e0` AS CHARACTER)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"0"
  }
}
{
  name:"CAST(1.1 AS CHAR)",
  statement:"CAST(1.1 AS CHAR)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"1"
  }
}
{
  name:"CAST(1.1 AS CHARACTER)",
  statement:"CAST(1.1 AS CHARACTER)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"1"
  }
}
{
  name:"CAST(-20.1 AS CHAR)",
  statement:"CAST(-20.1 AS CHAR)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"-"
  }
}
{
  name:"CAST(-20.1 AS CHARACTER)",
  statement:"CAST(-20.1 AS CHARACTER)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"-"
  }
}
{
  name:"CAST(`+inf` AS CHAR)",
  statement:"CAST(`+inf` AS CHAR)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"I"
  }
}
{
  name:"CAST(`+inf` AS CHARACTER)",
  statement:"CAST(`+inf` AS CHARACTER)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"I"
  }
}
{
  name:"CAST(`-inf` AS CHAR)",
  statement:"CAST(`-inf` AS CHAR)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"-"
  }
}
{
  name:"CAST(`-inf` AS CHARACTER)",
  statement:"CAST(`-inf` AS CHARACTER)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"-"
  }
}
{
  name:"CAST(`nan` AS CHAR)",
  statement:"CAST(`nan` AS CHAR)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"N"
  }
}
{
  name:"CAST(`nan` AS CHARACTER)",
  statement:"CAST(`nan` AS CHARACTER)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"N"
  }
}
{
  name:"CAST(`2007-10-10T` AS CHAR)",
  statement:"CAST(`2007-10-10T` AS CHAR)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"2"
  }
}
{
  name:"CAST(`2007-10-10T` AS CHARACTER)",
  statement:"CAST(`2007-10-10T` AS CHARACTER)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"2"
  }
}
{
  name:"CAST('hello' AS CHAR)",
  statement:"CAST('hello' AS CHAR)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"h"
  }
}
{
  name:"CAST('hello' AS CHARACTER)",
  statement:"CAST('hello' AS CHARACTER)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"h"
  }
}
{
  name:"CAST('-20' AS CHAR)",
  statement:"CAST('-20' AS CHAR)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"-"
  }
}
{
  name:"CAST('-20' AS CHARACTER)",
  statement:"CAST('-20' AS CHARACTER)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"-"
  }
}
{
  name:"CAST(`\"1000\"` AS CHAR)",
  statement:"CAST(`\"1000\"` AS CHAR)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"1"
  }
}
{
  name:"CAST(`\"1000\"` AS CHARACTER)",
  statement:"CAST(`\"1000\"` AS CHARACTER)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"1"
  }
}
{
  name:"CAST(`'2e100'` AS CHAR)",
  statement:"CAST(`'2e100'` AS CHAR)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"2"
  }
}
{
  name:"CAST(`'2e100'` AS CHARACTER)",
  statement:"CAST(`'2e100'` AS CHARACTER)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"2"
  }
}
{
  name:"CAST(`'2d100'` AS CHAR)",
  statement:"CAST(`'2d100'` AS CHAR)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"2"
  }
}
{
  name:"CAST(`'2d100'` AS CHARACTER)",
  statement:"CAST(`'2d100'` AS CHARACTER)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"2"
  }
}
{
  name:"CAST(`{{\"\"}}` AS CHAR)",
  statement:"CAST(`{{\"\"}}` AS CHAR)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"\"}}` AS CHARACTER)",
  statement:"CAST(`{{\"\"}}` AS CHARACTER)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"0\"}}` AS CHAR)",
  statement:"CAST(`{{\"0\"}}` AS CHAR)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"0\"}}` AS CHARACTER)",
  statement:"CAST(`{{\"0\"}}` AS CHARACTER)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"1.0\"}}` AS CHAR)",
  statement:"CAST(`{{\"1.0\"}}` AS CHAR)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"1.0\"}}` AS CHARACTER)",
  statement:"CAST(`{{\"1.0\"}}` AS CHARACTER)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"2e10\"}}` AS CHAR)",
  statement:"CAST(`{{\"2e10\"}}` AS CHAR)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{\"2e10\"}}` AS CHARACTER)",
  statement:"CAST(`{{\"2e10\"}}` AS CHARACTER)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{}}` AS CHAR)",
  statement:"CAST(`{{}}` AS CHAR)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{}}` AS CHARACTER)",
  statement:"CAST(`{{}}` AS CHARACTER)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MA==}}` AS CHAR)",
  statement:"CAST(`{{MA==}}` AS CHAR)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MA==}}` AS CHARACTER)",
  statement:"CAST(`{{MA==}}` AS CHARACTER)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MS4w}}` AS CHAR)",
  statement:"CAST(`{{MS4w}}` AS CHAR)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MS4w}}` AS CHARACTER)",
  statement:"CAST(`{{MS4w}}` AS CHARACTER)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MmUxMA==}}` AS CHAR)",
  statement:"CAST(`{{MmUxMA==}}` AS CHAR)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{{MmUxMA==}}` AS CHARACTER)",
  statement:"CAST(`{{MmUxMA==}}` AS CHARACTER)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[]` AS CHAR)",
  statement:"CAST(`[]` AS CHAR)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[]` AS CHARACTER)",
  statement:"CAST(`[]` AS CHARACTER)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(['hello'] AS CHAR)",
  statement:"CAST(['hello'] AS CHAR)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(['hello'] AS CHARACTER)",
  statement:"CAST(['hello'] AS CHARACTER)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[-2d0, 0d0]` AS CHAR)",
  statement:"CAST(`[-2d0, 0d0]` AS CHAR)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`[-2d0, 0d0]` AS CHARACTER)",
  statement:"CAST(`[-2d0, 0d0]` AS CHARACTER)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`()` AS CHAR)",
  statement:"CAST(`()` AS CHAR)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`()` AS CHARACTER)",
  statement:"CAST(`()` AS CHARACTER)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`(1d0)` AS CHAR)",
  statement:"CAST(`(1d0)` AS CHAR)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`(1d0)` AS CHARACTER)",
  statement:"CAST(`(1d0)` AS CHARACTER)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`(0d0)` AS CHAR)",
  statement:"CAST(`(0d0)` AS CHAR)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`(0d0)` AS CHARACTER)",
  statement:"CAST(`(0d0)` AS CHARACTER)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{}` AS CHAR)",
  statement:"CAST(`{}` AS CHAR)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{}` AS CHARACTER)",
  statement:"CAST(`{}` AS CHARACTER)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST({} AS CHAR)",
  statement:"CAST({} AS CHAR)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST({} AS CHARACTER)",
  statement:"CAST({} AS CHARACTER)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{a:12d0}` AS CHAR)",
  statement:"CAST(`{a:12d0}` AS CHAR)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`{a:12d0}` AS CHARACTER)",
  statement:"CAST(`{a:12d0}` AS CHARACTER)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST({'b':`-4d0`} AS CHAR)",
  statement:"CAST({'b':`-4d0`} AS CHAR)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST({'b':`-4d0`} AS CHARACTER)",
  statement:"CAST({'b':`-4d0`} AS CHARACTER)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<>> AS CHAR)",
  statement:"CAST(<<>> AS CHAR)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<>> AS CHARACTER)",
  statement:"CAST(<<>> AS CHARACTER)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<`14d0`>> AS CHAR)",
  statement:"CAST(<<`14d0`>> AS CHAR)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<`14d0`>> AS CHARACTER)",
  statement:"CAST(<<`14d0`>> AS CHARACTER)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<'a', <<'hello'>>>> AS CHAR)",
  statement:"CAST(<<'a', <<'hello'>>>> AS CHAR)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<'a', <<'hello'>>>> AS CHARACTER)",
  statement:"CAST(<<'a', <<'hello'>>>> AS CHARACTER)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<`20d0`>> AS CHAR)",
  statement:"CAST(<<`20d0`>> AS CHAR)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(<<`20d0`>> AS CHARACTER)",
  statement:"CAST(<<`20d0`>> AS CHARACTER)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(1.9 AS int)",
  statement:"CAST(1.9 AS int)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST(1.9 AS smallint)",
  statement:"CAST(1.9 AS smallint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST(1.9 AS integer2)",
  statement:"CAST(1.9 AS integer2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST(1.9 AS int2)",
  statement:"CAST(1.9 AS int2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST(1.9 AS integer)",
  statement:"CAST(1.9 AS integer)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST(1.9 AS integer4)",
  statement:"CAST(1.9 AS integer4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST(1.9 AS int4)",
  statement:"CAST(1.9 AS int4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST(1.9 AS integer8)",
  statement:"CAST(1.9 AS integer8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST(1.9 AS int8)",
  statement:"CAST(1.9 AS int8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST(1.9 AS bigint)",
  statement:"CAST(1.9 AS bigint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST(-20.9 AS int)",
  statement:"CAST(-20.9 AS int)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-21
  }
}
{
  name:"CAST(-20.9 AS smallint)",
  statement:"CAST(-20.9 AS smallint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-21
  }
}
{
  name:"CAST(-20.9 AS integer2)",
  statement:"CAST(-20.9 AS integer2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-21
  }
}
{
  name:"CAST(-20.9 AS int2)",
  statement:"CAST(-20.9 AS int2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-21
  }
}
{
  name:"CAST(-20.9 AS integer)",
  statement:"CAST(-20.9 AS integer)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-21
  }
}
{
  name:"CAST(-20.9 AS integer4)",
  statement:"CAST(-20.9 AS integer4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-21
  }
}
{
  name:"CAST(-20.9 AS int4)",
  statement:"CAST(-20.9 AS int4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-21
  }
}
{
  name:"CAST(-20.9 AS integer8)",
  statement:"CAST(-20.9 AS integer8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-21
  }
}
{
  name:"CAST(-20.9 AS int8)",
  statement:"CAST(-20.9 AS int8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-21
  }
}
{
  name:"CAST(-20.9 AS bigint)",
  statement:"CAST(-20.9 AS bigint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-21
  }
}
{
  name:"CAST(1.5 AS int)",
  statement:"CAST(1.5 AS int)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST(1.5 AS smallint)",
  statement:"CAST(1.5 AS smallint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST(1.5 AS integer2)",
  statement:"CAST(1.5 AS integer2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST(1.5 AS int2)",
  statement:"CAST(1.5 AS int2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST(1.5 AS integer)",
  statement:"CAST(1.5 AS integer)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST(1.5 AS integer4)",
  statement:"CAST(1.5 AS integer4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST(1.5 AS int4)",
  statement:"CAST(1.5 AS int4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST(1.5 AS integer8)",
  statement:"CAST(1.5 AS integer8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST(1.5 AS int8)",
  statement:"CAST(1.5 AS int8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST(1.5 AS bigint)",
  statement:"CAST(1.5 AS bigint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST(2.5 AS int)",
  statement:"CAST(2.5 AS int)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST(2.5 AS smallint)",
  statement:"CAST(2.5 AS smallint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST(2.5 AS integer2)",
  statement:"CAST(2.5 AS integer2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST(2.5 AS int2)",
  statement:"CAST(2.5 AS int2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST(2.5 AS integer)",
  statement:"CAST(2.5 AS integer)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST(2.5 AS integer4)",
  statement:"CAST(2.5 AS integer4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST(2.5 AS int4)",
  statement:"CAST(2.5 AS int4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST(2.5 AS integer8)",
  statement:"CAST(2.5 AS integer8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST(2.5 AS int8)",
  statement:"CAST(2.5 AS int8)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST(2.5 AS bigint)",
  statement:"CAST(2.5 AS bigint)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST(32768 AS SMALLINT)",
  statement:"CAST(32768 AS SMALLINT)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(32768 AS INT2)",
  statement:"CAST(32768 AS INT2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(32768 AS INTEGER2)",
  statement:"CAST(32768 AS INTEGER2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(-32769 AS SMALLINT)",
  statement:"CAST(-32769 AS SMALLINT)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(-32769 AS INT2)",
  statement:"CAST(-32769 AS INT2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(-32769 AS INTEGER2)",
  statement:"CAST(-32769 AS INTEGER2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(1.5 AS SMALLINT)",
  statement:"CAST(1.5 AS SMALLINT)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST(1.5 AS INT2)",
  statement:"CAST(1.5 AS INT2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST(1.5 AS INTEGER2)",
  statement:"CAST(1.5 AS INTEGER2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST(32767.3 AS SMALLINT)",
  statement:"CAST(32767.3 AS SMALLINT)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:32767
  }
}
{
  name:"CAST(32767.3 AS INT2)",
  statement:"CAST(32767.3 AS INT2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:32767
  }
}
{
  name:"CAST(32767.3 AS INTEGER2)",
  statement:"CAST(32767.3 AS INTEGER2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:32767
  }
}
{
  name:"CAST(32767.5 AS SMALLINT)",
  statement:"CAST(32767.5 AS SMALLINT)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(32767.5 AS INT2)",
  statement:"CAST(32767.5 AS INT2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(32767.5 AS INTEGER2)",
  statement:"CAST(32767.5 AS INTEGER2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(32767.8 AS SMALLINT)",
  statement:"CAST(32767.8 AS SMALLINT)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(32767.8 AS INT2)",
  statement:"CAST(32767.8 AS INT2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(32767.8 AS INTEGER2)",
  statement:"CAST(32767.8 AS INTEGER2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(-32768.3 AS SMALLINT)",
  statement:"CAST(-32768.3 AS SMALLINT)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-32768
  }
}
{
  name:"CAST(-32768.3 AS INT2)",
  statement:"CAST(-32768.3 AS INT2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-32768
  }
}
{
  name:"CAST(-32768.3 AS INTEGER2)",
  statement:"CAST(-32768.3 AS INTEGER2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-32768
  }
}
{
  name:"CAST(-32768.5 AS SMALLINT)",
  statement:"CAST(-32768.5 AS SMALLINT)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-32768
  }
}
{
  name:"CAST(-32768.5 AS INT2)",
  statement:"CAST(-32768.5 AS INT2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-32768
  }
}
{
  name:"CAST(-32768.5 AS INTEGER2)",
  statement:"CAST(-32768.5 AS INTEGER2)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-32768
  }
}
{
  name:"CAST(-32768.9 AS SMALLINT)",
  statement:"CAST(-32768.9 AS SMALLINT)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(-32768.9 AS INT2)",
  statement:"CAST(-32768.9 AS INT2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(-32768.9 AS INTEGER2)",
  statement:"CAST(-32768.9 AS INTEGER2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(2147483648 AS INT4)",
  statement:"CAST(2147483648 AS INT4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(2147483648 AS INTEGER4)",
  statement:"CAST(2147483648 AS INTEGER4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(2147483648 AS INT)",
  statement:"CAST(2147483648 AS INT)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(-2147483649 AS INT4)",
  statement:"CAST(-2147483649 AS INT4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(-2147483649 AS INTEGER4)",
  statement:"CAST(-2147483649 AS INTEGER4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(-2147483649 AS INT)",
  statement:"CAST(-2147483649 AS INT)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(1.5 AS INT4)",
  statement:"CAST(1.5 AS INT4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST(1.5 AS INTEGER4)",
  statement:"CAST(1.5 AS INTEGER4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST(1.5 AS INT)",
  statement:"CAST(1.5 AS INT)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2
  }
}
{
  name:"CAST(2147483647.3 AS INT4)",
  statement:"CAST(2147483647.3 AS INT4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2147483647
  }
}
{
  name:"CAST(2147483647.3 AS INTEGER4)",
  statement:"CAST(2147483647.3 AS INTEGER4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2147483647
  }
}
{
  name:"CAST(2147483647.3 AS INT)",
  statement:"CAST(2147483647.3 AS INT)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2147483647
  }
}
{
  name:"CAST(2147483647.5 AS INT4)",
  statement:"CAST(2147483647.5 AS INT4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(2147483647.5 AS INTEGER4)",
  statement:"CAST(2147483647.5 AS INTEGER4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(2147483647.5 AS INT)",
  statement:"CAST(2147483647.5 AS INT)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(2147483647.8 AS INT4)",
  statement:"CAST(2147483647.8 AS INT4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(2147483647.8 AS INTEGER4)",
  statement:"CAST(2147483647.8 AS INTEGER4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(2147483647.8 AS INT)",
  statement:"CAST(2147483647.8 AS INT)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(-2147483648.3 AS INT4)",
  statement:"CAST(-2147483648.3 AS INT4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-2147483648
  }
}
{
  name:"CAST(-2147483648.3 AS INTEGER4)",
  statement:"CAST(-2147483648.3 AS INTEGER4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-2147483648
  }
}
{
  name:"CAST(-2147483648.3 AS INT)",
  statement:"CAST(-2147483648.3 AS INT)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-2147483648
  }
}
{
  name:"CAST(-2147483648.5 AS INT4)",
  statement:"CAST(-2147483648.5 AS INT4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-2147483648
  }
}
{
  name:"CAST(-2147483648.5 AS INTEGER4)",
  statement:"CAST(-2147483648.5 AS INTEGER4)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-2147483648
  }
}
{
  name:"CAST(-2147483648.5 AS INT)",
  statement:"CAST(-2147483648.5 AS INT)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-2147483648
  }
}
{
  name:"CAST(-2147483648.9 AS INT4)",
  statement:"CAST(-2147483648.9 AS INT4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(-2147483648.9 AS INTEGER4)",
  statement:"CAST(-2147483648.9 AS INTEGER4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(-2147483648.9 AS INT)",
  statement:"CAST(-2147483648.9 AS INT)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(9223372036854775807 AS BIGINT)",
  statement:"CAST(9223372036854775807 AS BIGINT)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:9223372036854775807
  }
}
{
  name:"CAST(9223372036854775807.3 AS BIGINT)",
  statement:"CAST(9223372036854775807.3 AS BIGINT)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:9223372036854775807
  }
}
{
  name:"CAST(9223372036854775807.5 AS BIGINT)",
  statement:"CAST(9223372036854775807.5 AS BIGINT)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(9223372036854775807.8 AS BIGINT)",
  statement:"CAST(9223372036854775807.8 AS BIGINT)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(9223372036854775808 AS BIGINT)",
  statement:"CAST(9223372036854775808 AS BIGINT)",
  assert:{
    result:EvaluationFail,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ]
  }
}
{
  name:"CAST(1e2147483609 AS BIGINT)",
  statement:"CAST(1e2147483609 AS BIGINT)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(12 AS dec(3))",
  statement:"CAST(12 AS dec(3))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:12.
  }
}
{
  name:"CAST(12 AS decimal(3))",
  statement:"CAST(12 AS decimal(3))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:12.
  }
}
{
  name:"CAST(12 AS numeric(3))",
  statement:"CAST(12 AS numeric(3))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:12.
  }
}
{
  name:"CAST(123 AS dec(3))",
  statement:"CAST(123 AS dec(3))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:123.
  }
}
{
  name:"CAST(123 AS decimal(3))",
  statement:"CAST(123 AS decimal(3))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:123.
  }
}
{
  name:"CAST(123 AS numeric(3))",
  statement:"CAST(123 AS numeric(3))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:123.
  }
}
{
  name:"CAST(1234 AS dec(3))",
  statement:"CAST(1234 AS dec(3))",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(1234 AS decimal(3))",
  statement:"CAST(1234 AS decimal(3))",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(1234 AS numeric(3))",
  statement:"CAST(1234 AS numeric(3))",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(123.45 AS dec(3))",
  statement:"CAST(123.45 AS dec(3))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:123.
  }
}
{
  name:"CAST(123.45 AS decimal(3))",
  statement:"CAST(123.45 AS decimal(3))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:123.
  }
}
{
  name:"CAST(123.45 AS numeric(3))",
  statement:"CAST(123.45 AS numeric(3))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:123.
  }
}
{
  name:"CAST('12' AS dec(3))",
  statement:"CAST('12' AS dec(3))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:12.
  }
}
{
  name:"CAST('12' AS decimal(3))",
  statement:"CAST('12' AS decimal(3))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:12.
  }
}
{
  name:"CAST('12' AS numeric(3))",
  statement:"CAST('12' AS numeric(3))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:12.
  }
}
{
  name:"CAST('123' AS dec(3))",
  statement:"CAST('123' AS dec(3))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:123.
  }
}
{
  name:"CAST('123' AS decimal(3))",
  statement:"CAST('123' AS decimal(3))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:123.
  }
}
{
  name:"CAST('123' AS numeric(3))",
  statement:"CAST('123' AS numeric(3))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:123.
  }
}
{
  name:"CAST('1234' AS dec(3))",
  statement:"CAST('1234' AS dec(3))",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('1234' AS decimal(3))",
  statement:"CAST('1234' AS decimal(3))",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('1234' AS numeric(3))",
  statement:"CAST('1234' AS numeric(3))",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('123.45' AS dec(3))",
  statement:"CAST('123.45' AS dec(3))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:123.
  }
}
{
  name:"CAST('123.45' AS decimal(3))",
  statement:"CAST('123.45' AS decimal(3))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:123.
  }
}
{
  name:"CAST('123.45' AS numeric(3))",
  statement:"CAST('123.45' AS numeric(3))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:123.
  }
}
{
  name:"CAST(12 AS dec(5, 2))",
  statement:"CAST(12 AS dec(5, 2))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:12.00
  }
}
{
  name:"CAST(12 AS decimal(5, 2))",
  statement:"CAST(12 AS decimal(5, 2))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:12.00
  }
}
{
  name:"CAST(12 AS numeric(5, 2))",
  statement:"CAST(12 AS numeric(5, 2))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:12.00
  }
}
{
  name:"CAST(123 AS dec(5, 2))",
  statement:"CAST(123 AS dec(5, 2))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:123.00
  }
}
{
  name:"CAST(123 AS decimal(5, 2))",
  statement:"CAST(123 AS decimal(5, 2))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:123.00
  }
}
{
  name:"CAST(123 AS numeric(5, 2))",
  statement:"CAST(123 AS numeric(5, 2))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:123.00
  }
}
{
  name:"CAST(1234 AS dec(5, 2))",
  statement:"CAST(1234 AS dec(5, 2))",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(1234 AS decimal(5, 2))",
  statement:"CAST(1234 AS decimal(5, 2))",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(1234 AS numeric(5, 2))",
  statement:"CAST(1234 AS numeric(5, 2))",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(123.45 AS dec(5, 2))",
  statement:"CAST(123.45 AS dec(5, 2))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:123.45
  }
}
{
  name:"CAST(123.45 AS decimal(5, 2))",
  statement:"CAST(123.45 AS decimal(5, 2))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:123.45
  }
}
{
  name:"CAST(123.45 AS numeric(5, 2))",
  statement:"CAST(123.45 AS numeric(5, 2))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:123.45
  }
}
{
  name:"CAST(123.459 AS dec(5, 2))",
  statement:"CAST(123.459 AS dec(5, 2))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:123.46
  }
}
{
  name:"CAST(123.459 AS decimal(5, 2))",
  statement:"CAST(123.459 AS decimal(5, 2))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:123.46
  }
}
{
  name:"CAST(123.459 AS numeric(5, 2))",
  statement:"CAST(123.459 AS numeric(5, 2))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:123.46
  }
}
{
  name:"CAST('12' AS dec(5, 2))",
  statement:"CAST('12' AS dec(5, 2))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:12.00
  }
}
{
  name:"CAST('12' AS decimal(5, 2))",
  statement:"CAST('12' AS decimal(5, 2))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:12.00
  }
}
{
  name:"CAST('12' AS numeric(5, 2))",
  statement:"CAST('12' AS numeric(5, 2))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:12.00
  }
}
{
  name:"CAST('123' AS dec(5, 2))",
  statement:"CAST('123' AS dec(5, 2))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:123.00
  }
}
{
  name:"CAST('123' AS decimal(5, 2))",
  statement:"CAST('123' AS decimal(5, 2))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:123.00
  }
}
{
  name:"CAST('123' AS numeric(5, 2))",
  statement:"CAST('123' AS numeric(5, 2))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:123.00
  }
}
{
  name:"CAST('1234' AS dec(5, 2))",
  statement:"CAST('1234' AS dec(5, 2))",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('1234' AS decimal(5, 2))",
  statement:"CAST('1234' AS decimal(5, 2))",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('1234' AS numeric(5, 2))",
  statement:"CAST('1234' AS numeric(5, 2))",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST('123.45' AS dec(5, 2))",
  statement:"CAST('123.45' AS dec(5, 2))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:123.45
  }
}
{
  name:"CAST('123.45' AS decimal(5, 2))",
  statement:"CAST('123.45' AS decimal(5, 2))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:123.45
  }
}
{
  name:"CAST('123.45' AS numeric(5, 2))",
  statement:"CAST('123.45' AS numeric(5, 2))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:123.45
  }
}
{
  name:"CAST('123.459' AS dec(5, 2))",
  statement:"CAST('123.459' AS dec(5, 2))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:123.46
  }
}
{
  name:"CAST('123.459' AS decimal(5, 2))",
  statement:"CAST('123.459' AS decimal(5, 2))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:123.46
  }
}
{
  name:"CAST('123.459' AS numeric(5, 2))",
  statement:"CAST('123.459' AS numeric(5, 2))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:123.46
  }
}
{
  name:"CAST(0.1 AS dec(4,4))",
  statement:"CAST(0.1 AS dec(4,4))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0.1000
  }
}
{
  name:"CAST(0.1 AS decimal(4,4))",
  statement:"CAST(0.1 AS decimal(4,4))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0.1000
  }
}
{
  name:"CAST(0.1 AS numeric(4,4))",
  statement:"CAST(0.1 AS numeric(4,4))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0.1000
  }
}
{
  name:"CAST(0.1234 AS dec(4,4))",
  statement:"CAST(0.1234 AS dec(4,4))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0.1234
  }
}
{
  name:"CAST(0.1234 AS decimal(4,4))",
  statement:"CAST(0.1234 AS decimal(4,4))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0.1234
  }
}
{
  name:"CAST(0.1234 AS numeric(4,4))",
  statement:"CAST(0.1234 AS numeric(4,4))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0.1234
  }
}
{
  name:"CAST(0.12345 AS dec(4,4))",
  statement:"CAST(0.12345 AS dec(4,4))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0.1235
  }
}
{
  name:"CAST(0.12345 AS decimal(4,4))",
  statement:"CAST(0.12345 AS decimal(4,4))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0.1235
  }
}
{
  name:"CAST(0.12345 AS numeric(4,4))",
  statement:"CAST(0.12345 AS numeric(4,4))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0.1235
  }
}
{
  name:"CAST(1 AS dec(2,4))",
  statement:"CAST(1 AS dec(2,4))",
  assert:{
    result:EvaluationFail,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ]
  }
}
{
  name:"CAST(1 AS decimal(2,4))",
  statement:"CAST(1 AS decimal(2,4))",
  assert:{
    result:EvaluationFail,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ]
  }
}
{
  name:"CAST(1 AS numeric(2,4))",
  statement:"CAST(1 AS numeric(2,4))",
  assert:{
    result:EvaluationFail,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ]
  }
}
{
  name:"CAST(1 AS dec(0,0))",
  statement:"CAST(1 AS dec(0,0))",
  assert:{
    result:EvaluationFail,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ]
  }
}
{
  name:"CAST(1 AS decimal(0,0))",
  statement:"CAST(1 AS decimal(0,0))",
  assert:{
    result:EvaluationFail,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ]
  }
}
{
  name:"CAST(1 AS numeric(0,0))",
  statement:"CAST(1 AS numeric(0,0))",
  assert:{
    result:EvaluationFail,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ]
  }
}
{
  name:"CAST('a' AS VARCHAR(4))",
  statement:"CAST('a' AS VARCHAR(4))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"a"
  }
}
{
  name:"CAST('a' AS CHARACTER VARYING(4))",
  statement:"CAST('a' AS CHARACTER VARYING(4))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"a"
  }
}
{
  name:"CAST('a    ' AS VARCHAR(4))",
  statement:"CAST('a    ' AS VARCHAR(4))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"a   "
  }
}
{
  name:"CAST('a    ' AS CHARACTER VARYING(4))",
  statement:"CAST('a    ' AS CHARACTER VARYING(4))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"a   "
  }
}
{
  name:"CAST('abcde' AS VARCHAR(4))",
  statement:"CAST('abcde' AS VARCHAR(4))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"abcd"
  }
}
{
  name:"CAST('abcde' AS CHARACTER VARYING(4))",
  statement:"CAST('abcde' AS CHARACTER VARYING(4))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"abcd"
  }
}
{
  name:"CAST('💩💩💩💩💩' AS VARCHAR(4))",
  statement:"CAST('💩💩💩💩💩' AS VARCHAR(4))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"💩💩💩💩"
  }
}
{
  name:"CAST('💩💩💩💩💩' AS CHARACTER VARYING(4))",
  statement:"CAST('💩💩💩💩💩' AS CHARACTER VARYING(4))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"💩💩💩💩"
  }
}
{
  name:"CAST(TRUE AND FALSE AS VARCHAR(4))",
  statement:"CAST(TRUE AND FALSE AS VARCHAR(4))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"fals"
  }
}
{
  name:"CAST(TRUE AND FALSE AS CHARACTER VARYING(4))",
  statement:"CAST(TRUE AND FALSE AS CHARACTER VARYING(4))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"fals"
  }
}
{
  name:"CAST(`true` AS VARCHAR(4))",
  statement:"CAST(`true` AS VARCHAR(4))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"true"
  }
}
{
  name:"CAST(`true` AS CHARACTER VARYING(4))",
  statement:"CAST(`true` AS CHARACTER VARYING(4))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"true"
  }
}
{
  name:"CAST(5 AS VARCHAR(4))",
  statement:"CAST(5 AS VARCHAR(4))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"5"
  }
}
{
  name:"CAST(5 AS CHARACTER VARYING(4))",
  statement:"CAST(5 AS CHARACTER VARYING(4))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"5"
  }
}
{
  name:"CAST(`0e0` AS VARCHAR(4))",
  statement:"CAST(`0e0` AS VARCHAR(4))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"0.0"
  }
}
{
  name:"CAST(`0e0` AS CHARACTER VARYING(4))",
  statement:"CAST(`0e0` AS CHARACTER VARYING(4))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"0.0"
  }
}
{
  name:"CAST(1.1 AS VARCHAR(4))",
  statement:"CAST(1.1 AS VARCHAR(4))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"1.1"
  }
}
{
  name:"CAST(1.1 AS CHARACTER VARYING(4))",
  statement:"CAST(1.1 AS CHARACTER VARYING(4))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"1.1"
  }
}
{
  name:"CAST(-20.1 AS VARCHAR(4))",
  statement:"CAST(-20.1 AS VARCHAR(4))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"-20."
  }
}
{
  name:"CAST(-20.1 AS CHARACTER VARYING(4))",
  statement:"CAST(-20.1 AS CHARACTER VARYING(4))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"-20."
  }
}
{
  name:"CAST('a' AS CHAR(4))",
  statement:"CAST('a' AS CHAR(4))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"a"
  }
}
{
  name:"CAST('a' AS CHARACTER(4))",
  statement:"CAST('a' AS CHARACTER(4))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"a"
  }
}
{
  name:"CAST('abcde' AS CHAR(4))",
  statement:"CAST('abcde' AS CHAR(4))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"abcd"
  }
}
{
  name:"CAST('abcde' AS CHARACTER(4))",
  statement:"CAST('abcde' AS CHARACTER(4))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"abcd"
  }
}
{
  name:"CAST('💩💩💩💩💩' AS CHAR(4))",
  statement:"CAST('💩💩💩💩💩' AS CHAR(4))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"💩💩💩💩"
  }
}
{
  name:"CAST('💩💩💩💩💩' AS CHARACTER(4))",
  statement:"CAST('💩💩💩💩💩' AS CHARACTER(4))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"💩💩💩💩"
  }
}
{
  name:"CAST(TRUE AND FALSE AS CHAR(4))",
  statement:"CAST(TRUE AND FALSE AS CHAR(4))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"fals"
  }
}
{
  name:"CAST(TRUE AND FALSE AS CHARACTER(4))",
  statement:"CAST(TRUE AND FALSE AS CHARACTER(4))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"fals"
  }
}
{
  name:"CAST(`true` AS CHAR(4))",
  statement:"CAST(`true` AS CHAR(4))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"true"
  }
}
{
  name:"CAST(`true` AS CHARACTER(4))",
  statement:"CAST(`true` AS CHARACTER(4))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"true"
  }
}
{
  name:"CAST(5 AS CHAR(4))",
  statement:"CAST(5 AS CHAR(4))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"5"
  }
}
{
  name:"CAST(5 AS CHARACTER(4))",
  statement:"CAST(5 AS CHARACTER(4))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"5"
  }
}
{
  name:"CAST(`0e0` AS CHAR(4))",
  statement:"CAST(`0e0` AS CHAR(4))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"0.0"
  }
}
{
  name:"CAST(`0e0` AS CHARACTER(4))",
  statement:"CAST(`0e0` AS CHARACTER(4))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"0.0"
  }
}
{
  name:"CAST(1.1 AS CHAR(4))",
  statement:"CAST(1.1 AS CHAR(4))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"1.1"
  }
}
{
  name:"CAST(1.1 AS CHARACTER(4))",
  statement:"CAST(1.1 AS CHARACTER(4))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"1.1"
  }
}
{
  name:"CAST(-20.1 AS CHAR(4))",
  statement:"CAST(-20.1 AS CHAR(4))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"-20."
  }
}
{
  name:"CAST(-20.1 AS CHARACTER(4))",
  statement:"CAST(-20.1 AS CHARACTER(4))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"-20."
  }
}
{
  name:"CAST(`+inf` AS int)",
  statement:"CAST(`+inf` AS int)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`+inf` AS smallint)",
  statement:"CAST(`+inf` AS smallint)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`+inf` AS integer2)",
  statement:"CAST(`+inf` AS integer2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`+inf` AS int2)",
  statement:"CAST(`+inf` AS int2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`+inf` AS integer)",
  statement:"CAST(`+inf` AS integer)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`+inf` AS integer4)",
  statement:"CAST(`+inf` AS integer4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`+inf` AS int4)",
  statement:"CAST(`+inf` AS int4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`+inf` AS integer8)",
  statement:"CAST(`+inf` AS integer8)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`+inf` AS int8)",
  statement:"CAST(`+inf` AS int8)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`+inf` AS bigint)",
  statement:"CAST(`+inf` AS bigint)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`+inf` AS dec)",
  statement:"CAST(`+inf` AS dec)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`+inf` AS decimal)",
  statement:"CAST(`+inf` AS decimal)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`+inf` AS numeric)",
  statement:"CAST(`+inf` AS numeric)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`-inf` AS int)",
  statement:"CAST(`-inf` AS int)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`-inf` AS smallint)",
  statement:"CAST(`-inf` AS smallint)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`-inf` AS integer2)",
  statement:"CAST(`-inf` AS integer2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`-inf` AS int2)",
  statement:"CAST(`-inf` AS int2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`-inf` AS integer)",
  statement:"CAST(`-inf` AS integer)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`-inf` AS integer4)",
  statement:"CAST(`-inf` AS integer4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`-inf` AS int4)",
  statement:"CAST(`-inf` AS int4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`-inf` AS integer8)",
  statement:"CAST(`-inf` AS integer8)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`-inf` AS int8)",
  statement:"CAST(`-inf` AS int8)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`-inf` AS bigint)",
  statement:"CAST(`-inf` AS bigint)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`-inf` AS dec)",
  statement:"CAST(`-inf` AS dec)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`-inf` AS decimal)",
  statement:"CAST(`-inf` AS decimal)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`-inf` AS numeric)",
  statement:"CAST(`-inf` AS numeric)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`nan` AS int)",
  statement:"CAST(`nan` AS int)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`nan` AS smallint)",
  statement:"CAST(`nan` AS smallint)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`nan` AS integer2)",
  statement:"CAST(`nan` AS integer2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`nan` AS int2)",
  statement:"CAST(`nan` AS int2)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`nan` AS integer)",
  statement:"CAST(`nan` AS integer)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`nan` AS integer4)",
  statement:"CAST(`nan` AS integer4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`nan` AS int4)",
  statement:"CAST(`nan` AS int4)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`nan` AS integer8)",
  statement:"CAST(`nan` AS integer8)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`nan` AS int8)",
  statement:"CAST(`nan` AS int8)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`nan` AS bigint)",
  statement:"CAST(`nan` AS bigint)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`nan` AS dec)",
  statement:"CAST(`nan` AS dec)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`nan` AS decimal)",
  statement:"CAST(`nan` AS decimal)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`nan` AS numeric)",
  statement:"CAST(`nan` AS numeric)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`+inf` AS float)",
  statement:"CAST(`+inf` AS float)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:+inf
  }
}
{
  name:"CAST(`+inf` AS real)",
  statement:"CAST(`+inf` AS real)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:+inf
  }
}
{
  name:"CAST(`+inf` AS double precision)",
  statement:"CAST(`+inf` AS double precision)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:+inf
  }
}
{
  name:"CAST(`-inf` AS float)",
  statement:"CAST(`-inf` AS float)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-inf
  }
}
{
  name:"CAST(`-inf` AS real)",
  statement:"CAST(`-inf` AS real)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-inf
  }
}
{
  name:"CAST(`-inf` AS double precision)",
  statement:"CAST(`-inf` AS double precision)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-inf
  }
}
{
  name:"CAST(`nan` AS float)",
  statement:"CAST(`nan` AS float)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:nan
  }
}
{
  name:"CAST(`nan` AS real)",
  statement:"CAST(`nan` AS real)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:nan
  }
}
{
  name:"CAST(`nan` AS double precision)",
  statement:"CAST(`nan` AS double precision)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:nan
  }
}
{
  name:"CAST(`+inf` AS STRING)",
  statement:"CAST(`+inf` AS STRING)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"Infinity"
  }
}
{
  name:"CAST(`+inf` AS VARCHAR(20))",
  statement:"CAST(`+inf` AS VARCHAR(20))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"Infinity"
  }
}
{
  name:"CAST(`+inf` AS CHARACTER VARYING(20))",
  statement:"CAST(`+inf` AS CHARACTER VARYING(20))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"Infinity"
  }
}
{
  name:"CAST(`-inf` AS STRING)",
  statement:"CAST(`-inf` AS STRING)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"-Infinity"
  }
}
{
  name:"CAST(`-inf` AS VARCHAR(20))",
  statement:"CAST(`-inf` AS VARCHAR(20))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"-Infinity"
  }
}
{
  name:"CAST(`-inf` AS CHARACTER VARYING(20))",
  statement:"CAST(`-inf` AS CHARACTER VARYING(20))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"-Infinity"
  }
}
{
  name:"CAST(`nan` AS STRING)",
  statement:"CAST(`nan` AS STRING)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"NaN"
  }
}
{
  name:"CAST(`nan` AS VARCHAR(20))",
  statement:"CAST(`nan` AS VARCHAR(20))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"NaN"
  }
}
{
  name:"CAST(`nan` AS CHARACTER VARYING(20))",
  statement:"CAST(`nan` AS CHARACTER VARYING(20))",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"NaN"
  }
}
{
  name:"CAST(`+inf` AS symbol)",
  statement:"CAST(`+inf` AS symbol)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:Infinity
  }
}
{
  name:"CAST(`-inf` AS symbol)",
  statement:"CAST(`-inf` AS symbol)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:'-Infinity'
  }
}
{
  name:"CAST(`nan` AS symbol)",
  statement:"CAST(`nan` AS symbol)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:NaN
  }
}
{
  name:"CAST(`+inf` AS bool)",
  statement:"CAST(`+inf` AS bool)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:true
  }
}
{
  name:"CAST(`+inf` AS boolean)",
  statement:"CAST(`+inf` AS boolean)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:true
  }
}
{
  name:"CAST(`-inf` AS bool)",
  statement:"CAST(`-inf` AS bool)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:true
  }
}
{
  name:"CAST(`-inf` AS boolean)",
  statement:"CAST(`-inf` AS boolean)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:true
  }
}
{
  name:"CAST(`nan` AS bool)",
  statement:"CAST(`nan` AS bool)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:true
  }
}
{
  name:"CAST(`nan` AS boolean)",
  statement:"CAST(`nan` AS boolean)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:true
  }
}
{
  name:"CAST(`+inf` AS date)",
  statement:"CAST(`+inf` AS date)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`+inf` AS timestamp)",
  statement:"CAST(`+inf` AS timestamp)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`+inf` AS time)",
  statement:"CAST(`+inf` AS time)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`+inf` AS clob)",
  statement:"CAST(`+inf` AS clob)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`+inf` AS blob)",
  statement:"CAST(`+inf` AS blob)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`+inf` AS list)",
  statement:"CAST(`+inf` AS list)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`+inf` AS sexp)",
  statement:"CAST(`+inf` AS sexp)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`+inf` AS struct)",
  statement:"CAST(`+inf` AS struct)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`+inf` AS tuple)",
  statement:"CAST(`+inf` AS tuple)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`+inf` AS bag)",
  statement:"CAST(`+inf` AS bag)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`-inf` AS date)",
  statement:"CAST(`-inf` AS date)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`-inf` AS timestamp)",
  statement:"CAST(`-inf` AS timestamp)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`-inf` AS time)",
  statement:"CAST(`-inf` AS time)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`-inf` AS clob)",
  statement:"CAST(`-inf` AS clob)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`-inf` AS blob)",
  statement:"CAST(`-inf` AS blob)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`-inf` AS list)",
  statement:"CAST(`-inf` AS list)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`-inf` AS sexp)",
  statement:"CAST(`-inf` AS sexp)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`-inf` AS struct)",
  statement:"CAST(`-inf` AS struct)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`-inf` AS tuple)",
  statement:"CAST(`-inf` AS tuple)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`-inf` AS bag)",
  statement:"CAST(`-inf` AS bag)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`nan` AS date)",
  statement:"CAST(`nan` AS date)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`nan` AS timestamp)",
  statement:"CAST(`nan` AS timestamp)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`nan` AS time)",
  statement:"CAST(`nan` AS time)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`nan` AS clob)",
  statement:"CAST(`nan` AS clob)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`nan` AS blob)",
  statement:"CAST(`nan` AS blob)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`nan` AS list)",
  statement:"CAST(`nan` AS list)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`nan` AS sexp)",
  statement:"CAST(`nan` AS sexp)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`nan` AS struct)",
  statement:"CAST(`nan` AS struct)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`nan` AS tuple)",
  statement:"CAST(`nan` AS tuple)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(`nan` AS bag)",
  statement:"CAST(`nan` AS bag)",
  assert:[
    {
      result:EvaluationSuccess,
      evalMode:EvalModeCoerce,
      output:$missing::null
    },
    {
      result:EvaluationFail,
      evalMode:EvalModeError
    }
  ]
}
{
  name:"CAST(NULL AS ANY)",
  statement:"CAST(NULL AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:null
  }
}
{
  name:"CAST(MISSING AS ANY)",
  statement:"CAST(MISSING AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$missing::null
  }
}
{
  name:"CAST(TRUE AND FALSE AS ANY)",
  statement:"CAST(TRUE AND FALSE AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:false
  }
}
{
  name:"CAST(`true` AS ANY)",
  statement:"CAST(`true` AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:true
  }
}
{
  name:"CAST(5 AS ANY)",
  statement:"CAST(5 AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:5
  }
}
{
  name:"CAST(`0e0` AS ANY)",
  statement:"CAST(`0e0` AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0e0
  }
}
{
  name:"CAST(1.1 AS ANY)",
  statement:"CAST(1.1 AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:1.1
  }
}
{
  name:"CAST(`2007-10-10T` AS ANY)",
  statement:"CAST(`2007-10-10T` AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2007-10-10
  }
}
{
  name:"CAST('hello' AS ANY)",
  statement:"CAST('hello' AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"hello"
  }
}
{
  name:"CAST('TrUe' AS ANY)",
  statement:"CAST('TrUe' AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"TrUe"
  }
}
{
  name:"CAST(`\"FALSE\"` AS ANY)",
  statement:"CAST(`\"FALSE\"` AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"FALSE"
  }
}
{
  name:"CAST(`'true'` AS ANY)",
  statement:"CAST(`'true'` AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:'true'
  }
}
{
  name:"CAST(`{{\"\"}}` AS ANY)",
  statement:"CAST(`{{\"\"}}` AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:{{ "" }}
  }
}
{
  name:"CAST(`{{\"goodbye\"}}` AS ANY)",
  statement:"CAST(`{{\"goodbye\"}}` AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:{{ "goodbye" }}
  }
}
{
  name:"CAST(`{{\"false\"}}` AS ANY)",
  statement:"CAST(`{{\"false\"}}` AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:{{ "false" }}
  }
}
{
  name:"CAST(`{{\"true\"}}` AS ANY)",
  statement:"CAST(`{{\"true\"}}` AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:{{ "true" }}
  }
}
{
  name:"CAST(`{{}}` AS ANY)",
  statement:"CAST(`{{}}` AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:{{  }}
  }
}
{
  name:"CAST(`{{Z29vZGJ5ZQ==}}` AS ANY)",
  statement:"CAST(`{{Z29vZGJ5ZQ==}}` AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:{{ Z29vZGJ5ZQ== }}
  }
}
{
  name:"CAST(`{{ZmFsc2U=}}` AS ANY)",
  statement:"CAST(`{{ZmFsc2U=}}` AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:{{ ZmFsc2U= }}
  }
}
{
  name:"CAST(`{{dHJ1ZQ==}}` AS ANY)",
  statement:"CAST(`{{dHJ1ZQ==}}` AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:{{ dHJ1ZQ== }}
  }
}
{
  name:"CAST(`[]` AS ANY)",
  statement:"CAST(`[]` AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
    ]
  }
}
{
  name:"CAST(`[true]` AS ANY)",
  statement:"CAST(`[true]` AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
      true
    ]
  }
}
{
  name:"CAST(`[false]` AS ANY)",
  statement:"CAST(`[false]` AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
      false
    ]
  }
}
{
  name:"CAST(`[true, false]` AS ANY)",
  statement:"CAST(`[true, false]` AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
      true,
      false
    ]
  }
}
{
  name:"CAST(`()` AS ANY)",
  statement:"CAST(`()` AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:(
    )
  }
}
{
  name:"CAST(`(true)` AS ANY)",
  statement:"CAST(`(true)` AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:(
      true
    )
  }
}
{
  name:"CAST(`(false)` AS ANY)",
  statement:"CAST(`(false)` AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:(
      false
    )
  }
}
{
  name:"CAST(`{}` AS ANY)",
  statement:"CAST(`{}` AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:{
    }
  }
}
{
  name:"CAST({} AS ANY)",
  statement:"CAST({} AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:{
    }
  }
}
{
  name:"CAST(`{a:true}` AS ANY)",
  statement:"CAST(`{a:true}` AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:{
      a:true
    }
  }
}
{
  name:"CAST({'b':true} AS ANY)",
  statement:"CAST({'b':true} AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:{
      b:true
    }
  }
}
{
  name:"CAST(<<>> AS ANY)",
  statement:"CAST(<<>> AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$bag::[
    ]
  }
}
{
  name:"CAST(<<true>> AS ANY)",
  statement:"CAST(<<true>> AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$bag::[
      true
    ]
  }
}
{
  name:"CAST(<<false>> AS ANY)",
  statement:"CAST(<<false>> AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$bag::[
      false
    ]
  }
}
{
  name:"CAST( 5  AS ANY)",
  statement:"CAST( 5  AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:5
  }
}
{
  name:"CAST(-20.1 AS ANY)",
  statement:"CAST(-20.1 AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-20.1
  }
}
{
  name:"CAST('1234A' AS ANY)",
  statement:"CAST('1234A' AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"1234A"
  }
}
{
  name:"CAST('20' AS ANY)",
  statement:"CAST('20' AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"20"
  }
}
{
  name:"CAST('020' AS ANY)",
  statement:"CAST('020' AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"020"
  }
}
{
  name:"CAST('+20' AS ANY)",
  statement:"CAST('+20' AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"+20"
  }
}
{
  name:"CAST('+020' AS ANY)",
  statement:"CAST('+020' AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"+020"
  }
}
{
  name:"CAST('-20' AS ANY)",
  statement:"CAST('-20' AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"-20"
  }
}
{
  name:"CAST('-020' AS ANY)",
  statement:"CAST('-020' AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"-020"
  }
}
{
  name:"CAST('0' AS ANY)",
  statement:"CAST('0' AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"0"
  }
}
{
  name:"CAST('00' AS ANY)",
  statement:"CAST('00' AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"00"
  }
}
{
  name:"CAST('+0' AS ANY)",
  statement:"CAST('+0' AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"+0"
  }
}
{
  name:"CAST('+00' AS ANY)",
  statement:"CAST('+00' AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"+00"
  }
}
{
  name:"CAST('-0' AS ANY)",
  statement:"CAST('-0' AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"-0"
  }
}
{
  name:"CAST('-00' AS ANY)",
  statement:"CAST('-00' AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"-00"
  }
}
{
  name:"CAST('0xA' AS ANY)",
  statement:"CAST('0xA' AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"0xA"
  }
}
{
  name:"CAST('0XA' AS ANY)",
  statement:"CAST('0XA' AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"0XA"
  }
}
{
  name:"CAST('0x0A' AS ANY)",
  statement:"CAST('0x0A' AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"0x0A"
  }
}
{
  name:"CAST('+0xA' AS ANY)",
  statement:"CAST('+0xA' AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"+0xA"
  }
}
{
  name:"CAST('+0x0A' AS ANY)",
  statement:"CAST('+0x0A' AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"+0x0A"
  }
}
{
  name:"CAST('-0xA' AS ANY)",
  statement:"CAST('-0xA' AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"-0xA"
  }
}
{
  name:"CAST('-0x0A' AS ANY)",
  statement:"CAST('-0x0A' AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"-0x0A"
  }
}
{
  name:"CAST('0b10' AS ANY)",
  statement:"CAST('0b10' AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"0b10"
  }
}
{
  name:"CAST('0B10' AS ANY)",
  statement:"CAST('0B10' AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"0B10"
  }
}
{
  name:"CAST('0b010' AS ANY)",
  statement:"CAST('0b010' AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"0b010"
  }
}
{
  name:"CAST('+0b10' AS ANY)",
  statement:"CAST('+0b10' AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"+0b10"
  }
}
{
  name:"CAST('+0b010' AS ANY)",
  statement:"CAST('+0b010' AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"+0b010"
  }
}
{
  name:"CAST('-0b10' AS ANY)",
  statement:"CAST('-0b10' AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"-0b10"
  }
}
{
  name:"CAST('-0b010' AS ANY)",
  statement:"CAST('-0b010' AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"-0b010"
  }
}
{
  name:"CAST(`\"1000\"` AS ANY)",
  statement:"CAST(`\"1000\"` AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"1000"
  }
}
{
  name:"CAST(`'2e100'` AS ANY)",
  statement:"CAST(`'2e100'` AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:'2e100'
  }
}
{
  name:"CAST(`'2d100'` AS ANY)",
  statement:"CAST(`'2d100'` AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:'2d100'
  }
}
{
  name:"CAST('00xA' AS ANY)",
  statement:"CAST('00xA' AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"00xA"
  }
}
{
  name:"CAST('00b10' AS ANY)",
  statement:"CAST('00b10' AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"00b10"
  }
}
{
  name:"CAST(`{{\"0\"}}` AS ANY)",
  statement:"CAST(`{{\"0\"}}` AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:{{ "0" }}
  }
}
{
  name:"CAST(`{{\"1.0\"}}` AS ANY)",
  statement:"CAST(`{{\"1.0\"}}` AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:{{ "1.0" }}
  }
}
{
  name:"CAST(`{{\"2e10\"}}` AS ANY)",
  statement:"CAST(`{{\"2e10\"}}` AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:{{ "2e10" }}
  }
}
{
  name:"CAST(`{{MA==}}` AS ANY)",
  statement:"CAST(`{{MA==}}` AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:{{ MA== }}
  }
}
{
  name:"CAST(`{{MS4w}}` AS ANY)",
  statement:"CAST(`{{MS4w}}` AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:{{ MS4w }}
  }
}
{
  name:"CAST(`{{MmUxMA==}}` AS ANY)",
  statement:"CAST(`{{MmUxMA==}}` AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:{{ MmUxMA== }}
  }
}
{
  name:"CAST(`[1]` AS ANY)",
  statement:"CAST(`[1]` AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
      1
    ]
  }
}
{
  name:"CAST(`[-2, 0]` AS ANY)",
  statement:"CAST(`[-2, 0]` AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
      -2,
      0
    ]
  }
}
{
  name:"CAST(`(1)` AS ANY)",
  statement:"CAST(`(1)` AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:(
      1
    )
  }
}
{
  name:"CAST(`(0)` AS ANY)",
  statement:"CAST(`(0)` AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:(
      0
    )
  }
}
{
  name:"CAST(`{a:12}` AS ANY)",
  statement:"CAST(`{a:12}` AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:{
      a:12
    }
  }
}
{
  name:"CAST({'b':-4} AS ANY)",
  statement:"CAST({'b':-4} AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:{
      b:-4
    }
  }
}
{
  name:"CAST(<<14>> AS ANY)",
  statement:"CAST(<<14>> AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$bag::[
      14
    ]
  }
}
{
  name:"CAST(<<20>> AS ANY)",
  statement:"CAST(<<20>> AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$bag::[
      20
    ]
  }
}
{
  name:"CAST(`[1e0]` AS ANY)",
  statement:"CAST(`[1e0]` AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
      1e0
    ]
  }
}
{
  name:"CAST(`[-2e0, 0e0]` AS ANY)",
  statement:"CAST(`[-2e0, 0e0]` AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
      -2e0,
      0e0
    ]
  }
}
{
  name:"CAST(`(1e0)` AS ANY)",
  statement:"CAST(`(1e0)` AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:(
      1e0
    )
  }
}
{
  name:"CAST(`(0e0)` AS ANY)",
  statement:"CAST(`(0e0)` AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:(
      0e0
    )
  }
}
{
  name:"CAST(`{a:12e0}` AS ANY)",
  statement:"CAST(`{a:12e0}` AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:{
      a:12e0
    }
  }
}
{
  name:"CAST({'b':`-4e0`} AS ANY)",
  statement:"CAST({'b':`-4e0`} AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:{
      b:-4e0
    }
  }
}
{
  name:"CAST(<<`14e0`>> AS ANY)",
  statement:"CAST(<<`14e0`>> AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$bag::[
      14e0
    ]
  }
}
{
  name:"CAST(<<`20e0`>> AS ANY)",
  statement:"CAST(<<`20e0`>> AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$bag::[
      20e0
    ]
  }
}
{
  name:"CAST(5  AS ANY)",
  statement:"CAST(5  AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:5
  }
}
{
  name:"CAST(`1e0` AS ANY)",
  statement:"CAST(`1e0` AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:1e0
  }
}
{
  name:"CAST(`[1d0]` AS ANY)",
  statement:"CAST(`[1d0]` AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
      1.
    ]
  }
}
{
  name:"CAST(`[-2d0, 0d0]` AS ANY)",
  statement:"CAST(`[-2d0, 0d0]` AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
      -2.,
      0.
    ]
  }
}
{
  name:"CAST(`(1d0)` AS ANY)",
  statement:"CAST(`(1d0)` AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:(
      1.
    )
  }
}
{
  name:"CAST(`(0d0)` AS ANY)",
  statement:"CAST(`(0d0)` AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:(
      0.
    )
  }
}
{
  name:"CAST(`{a:12d0}` AS ANY)",
  statement:"CAST(`{a:12d0}` AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:{
      a:12.
    }
  }
}
{
  name:"CAST({'b':`-4d0`} AS ANY)",
  statement:"CAST({'b':`-4d0`} AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:{
      b:-4.
    }
  }
}
{
  name:"CAST(<<`14d0`>> AS ANY)",
  statement:"CAST(<<`14d0`>> AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$bag::[
      14.
    ]
  }
}
{
  name:"CAST(<<`20d0`>> AS ANY)",
  statement:"CAST(<<`20d0`>> AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$bag::[
      20.
    ]
  }
}
{
  name:"CAST(`2007-02-23T12:14Z` AS ANY)",
  statement:"CAST(`2007-02-23T12:14Z` AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2007-02-23T12:14Z
  }
}
{
  name:"CAST(`2007-02-23T12:14:33.079Z` AS ANY)",
  statement:"CAST(`2007-02-23T12:14:33.079Z` AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2007-02-23T12:14:33.079Z
  }
}
{
  name:"CAST(`2007-02-23T12:14:33.079-08:00` AS ANY)",
  statement:"CAST(`2007-02-23T12:14:33.079-08:00` AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2007-02-23T12:14:33.079-08:00
  }
}
{
  name:"CAST(`2007-02T` AS ANY)",
  statement:"CAST(`2007-02T` AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2007-02T
  }
}
{
  name:"CAST(`2007T` AS ANY)",
  statement:"CAST(`2007T` AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2007T
  }
}
{
  name:"CAST('2016-03-01T01:12:12Z' AS ANY)",
  statement:"CAST('2016-03-01T01:12:12Z' AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"2016-03-01T01:12:12Z"
  }
}
{
  name:"CAST(`\"2001-01-01\"` AS ANY)",
  statement:"CAST(`\"2001-01-01\"` AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"2001-01-01"
  }
}
{
  name:"CAST(`\"+20212-02-01\"` AS ANY)",
  statement:"CAST(`\"+20212-02-01\"` AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"+20212-02-01"
  }
}
{
  name:"CAST(`\"20212-02-01\"` AS ANY)",
  statement:"CAST(`\"20212-02-01\"` AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"20212-02-01"
  }
}
{
  name:"CAST(`'2000T'` AS ANY)",
  statement:"CAST(`'2000T'` AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:'2000T'
  }
}
{
  name:"CAST(`'1999-04T'` AS ANY)",
  statement:"CAST(`'1999-04T'` AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:'1999-04T'
  }
}
{
  name:"CAST(`\"23:2:12.12345\"` AS ANY)",
  statement:"CAST(`\"23:2:12.12345\"` AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"23:2:12.12345"
  }
}
{
  name:"CAST(['hello'] AS ANY)",
  statement:"CAST(['hello'] AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
      "hello"
    ]
  }
}
{
  name:"CAST(<<'a', <<'hello'>>>> AS ANY)",
  statement:"CAST(<<'a', <<'hello'>>>> AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$bag::[
      "a",
      $bag::[
        "hello"
      ]
    ]
  }
}
{
  name:"CAST(`+inf` AS ANY)",
  statement:"CAST(`+inf` AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:+inf
  }
}
{
  name:"CAST(`-inf` AS ANY)",
  statement:"CAST(`-inf` AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-inf
  }
}
{
  name:"CAST(`nan` AS ANY)",
  statement:"CAST(`nan` AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:nan
  }
}
{
  name:"CAST(1.9 AS ANY)",
  statement:"CAST(1.9 AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:1.9
  }
}
{
  name:"CAST(-20.9 AS ANY)",
  statement:"CAST(-20.9 AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-20.9
  }
}
{
  name:"CAST(1.5 AS ANY)",
  statement:"CAST(1.5 AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:1.5
  }
}
{
  name:"CAST(2.5 AS ANY)",
  statement:"CAST(2.5 AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2.5
  }
}
{
  name:"CAST(32768 AS ANY)",
  statement:"CAST(32768 AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:32768
  }
}
{
  name:"CAST(-32769 AS ANY)",
  statement:"CAST(-32769 AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-32769
  }
}
{
  name:"CAST(32767.3 AS ANY)",
  statement:"CAST(32767.3 AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:32767.3
  }
}
{
  name:"CAST(32767.5 AS ANY)",
  statement:"CAST(32767.5 AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:32767.5
  }
}
{
  name:"CAST(32767.8 AS ANY)",
  statement:"CAST(32767.8 AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:32767.8
  }
}
{
  name:"CAST(-32768.3 AS ANY)",
  statement:"CAST(-32768.3 AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-32768.3
  }
}
{
  name:"CAST(-32768.5 AS ANY)",
  statement:"CAST(-32768.5 AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-32768.5
  }
}
{
  name:"CAST(-32768.9 AS ANY)",
  statement:"CAST(-32768.9 AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-32768.9
  }
}
{
  name:"CAST(2147483648 AS ANY)",
  statement:"CAST(2147483648 AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2147483648
  }
}
{
  name:"CAST(-2147483649 AS ANY)",
  statement:"CAST(-2147483649 AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-2147483649
  }
}
{
  name:"CAST(2147483647.3 AS ANY)",
  statement:"CAST(2147483647.3 AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2147483647.3
  }
}
{
  name:"CAST(2147483647.5 AS ANY)",
  statement:"CAST(2147483647.5 AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2147483647.5
  }
}
{
  name:"CAST(2147483647.8 AS ANY)",
  statement:"CAST(2147483647.8 AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:2147483647.8
  }
}
{
  name:"CAST(-2147483648.3 AS ANY)",
  statement:"CAST(-2147483648.3 AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-2147483648.3
  }
}
{
  name:"CAST(-2147483648.5 AS ANY)",
  statement:"CAST(-2147483648.5 AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-2147483648.5
  }
}
{
  name:"CAST(-2147483648.9 AS ANY)",
  statement:"CAST(-2147483648.9 AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:-2147483648.9
  }
}
{
  name:"CAST(9223372036854775807 AS ANY)",
  statement:"CAST(9223372036854775807 AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:9223372036854775807
  }
}
{
  name:"CAST(9223372036854775807.3 AS ANY)",
  statement:"CAST(9223372036854775807.3 AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:9223372036854775807.3
  }
}
{
  name:"CAST(9223372036854775807.5 AS ANY)",
  statement:"CAST(9223372036854775807.5 AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:9223372036854775807.5
  }
}
{
  name:"CAST(9223372036854775807.8 AS ANY)",
  statement:"CAST(9223372036854775807.8 AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:9223372036854775807.8
  }
}
{
  name:"CAST(1e2147483609 AS ANY)",
  statement:"CAST(1e2147483609 AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:1d2147483609
  }
}
{
  name:"CAST(12 AS ANY)",
  statement:"CAST(12 AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:12
  }
}
{
  name:"CAST(123 AS ANY)",
  statement:"CAST(123 AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:123
  }
}
{
  name:"CAST(1234 AS ANY)",
  statement:"CAST(1234 AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:1234
  }
}
{
  name:"CAST(123.45 AS ANY)",
  statement:"CAST(123.45 AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:123.45
  }
}
{
  name:"CAST('12' AS ANY)",
  statement:"CAST('12' AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"12"
  }
}
{
  name:"CAST('123' AS ANY)",
  statement:"CAST('123' AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"123"
  }
}
{
  name:"CAST('1234' AS ANY)",
  statement:"CAST('1234' AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"1234"
  }
}
{
  name:"CAST('123.45' AS ANY)",
  statement:"CAST('123.45' AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"123.45"
  }
}
{
  name:"CAST(123.459 AS ANY)",
  statement:"CAST(123.459 AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:123.459
  }
}
{
  name:"CAST('123.459' AS ANY)",
  statement:"CAST('123.459' AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"123.459"
  }
}
{
  name:"CAST(0.1 AS ANY)",
  statement:"CAST(0.1 AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0.1
  }
}
{
  name:"CAST(0.1234 AS ANY)",
  statement:"CAST(0.1234 AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0.1234
  }
}
{
  name:"CAST(0.12345 AS ANY)",
  statement:"CAST(0.12345 AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:0.12345
  }
}
{
  name:"CAST('a' AS ANY)",
  statement:"CAST('a' AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"a"
  }
}
{
  name:"CAST('a    ' AS ANY)",
  statement:"CAST('a    ' AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"a    "
  }
}
{
  name:"CAST('abcde' AS ANY)",
  statement:"CAST('abcde' AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"abcde"
  }
}
{
  name:"CAST('💩💩💩💩💩' AS ANY)",
  statement:"CAST('💩💩💩💩💩' AS ANY)",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:"💩💩💩💩💩"
  }
}