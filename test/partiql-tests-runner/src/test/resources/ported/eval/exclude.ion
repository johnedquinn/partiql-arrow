
{
  name:"SELECT t.* EXCLUDE t.a FROM <<{'a': {'b': 2}, 'foo': 'bar', 'foo2': 'bar2'}>> AS t",
  statement:"SELECT t.* EXCLUDE t.a FROM <<{'a': {'b': 2}, 'foo': 'bar', 'foo2': 'bar2'}>> AS t",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$bag::[
      {
        foo:"bar",
        foo2:"bar2"
      }
    ]
  }
}
{
  name:"SELECT tbl2.* EXCLUDE tbl2.derivedColumn FROM (SELECT tbl1.*, tbl1.a.b + 2 AS derivedColumn FROM <<{'a': {'b': 2}, 'foo': 'bar', 'foo2': 'bar2'}>> AS tbl1) AS tbl2",
  statement:"SELECT tbl2.* EXCLUDE tbl2.derivedColumn FROM (SELECT tbl1.*, tbl1.a.b + 2 AS derivedColumn FROM <<{'a': {'b': 2}, 'foo': 'bar', 'foo2': 'bar2'}>> AS tbl1) AS tbl2",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$bag::[
      {
        a:{
          b:2
        },
        foo:"bar",
        foo2:"bar2"
      }
    ]
  }
}
{
  name:"SELECT t.* EXCLUDE t['a'] FROM <<{'a': {'b': 2}, 'foo': 'bar', 'foo2': 'bar2'}>> AS t",
  statement:"SELECT t.* EXCLUDE t['a'] FROM <<{'a': {'b': 2}, 'foo': 'bar', 'foo2': 'bar2'}>> AS t",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$bag::[
      {
        foo:"bar",
        foo2:"bar2"
      }
    ]
  }
}
{
  name:"SELECT * EXCLUDE t.a FROM << {'a': {'b': 1}, 'foo': 'bar', 'foo2': 'bar1'}, {'a': {'b': 2}, 'foo': 'bar', 'foo2': 'bar2'}, {'a': {'b': 3}, 'foo': 'bar', 'foo2': 'bar3'} >> AS t",
  statement:"SELECT * EXCLUDE t.a FROM << {'a': {'b': 1}, 'foo': 'bar', 'foo2': 'bar1'}, {'a': {'b': 2}, 'foo': 'bar', 'foo2': 'bar2'}, {'a': {'b': 3}, 'foo': 'bar', 'foo2': 'bar3'} >> AS t",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$bag::[
      {
        foo:"bar",
        foo2:"bar1"
      },
      {
        foo:"bar",
        foo2:"bar2"
      },
      {
        foo:"bar",
        foo2:"bar3"
      }
    ]
  }
}
{
  name:"SELECT t.* EXCLUDE t.a FROM << {'a': {'b': 1}, 'foo': 'bar', 'foo2': 'bar1'}, {'a': {'b': 2}, 'foo': 'bar', 'foo2': 'bar2'}, {'a': {'b': 3}, 'foo': 'bar', 'foo2': 'bar3'} >> AS t",
  statement:"SELECT t.* EXCLUDE t.a FROM << {'a': {'b': 1}, 'foo': 'bar', 'foo2': 'bar1'}, {'a': {'b': 2}, 'foo': 'bar', 'foo2': 'bar2'}, {'a': {'b': 3}, 'foo': 'bar', 'foo2': 'bar3'} >> AS t",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$bag::[
      {
        foo:"bar",
        foo2:"bar1"
      },
      {
        foo:"bar",
        foo2:"bar2"
      },
      {
        foo:"bar",
        foo2:"bar3"
      }
    ]
  }
}
{
  name:"SELECT VALUE t EXCLUDE t.a FROM << {'a': {'b': 1}, 'foo': 'bar', 'foo2': 'bar1'}, {'a': {'b': 2}, 'foo': 'bar', 'foo2': 'bar2'}, {'a': {'b': 3}, 'foo': 'bar', 'foo2': 'bar3'} >> AS t",
  statement:"SELECT VALUE t EXCLUDE t.a FROM << {'a': {'b': 1}, 'foo': 'bar', 'foo2': 'bar1'}, {'a': {'b': 2}, 'foo': 'bar', 'foo2': 'bar2'}, {'a': {'b': 3}, 'foo': 'bar', 'foo2': 'bar3'} >> AS t",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$bag::[
      {
        foo:"bar",
        foo2:"bar1"
      },
      {
        foo:"bar",
        foo2:"bar2"
      },
      {
        foo:"bar",
        foo2:"bar3"
      }
    ]
  }
}
{
  name:"SELECT t.* EXCLUDE t.a.b FROM <<{'a': {'b': 2}, 'foo': 'bar', 'foo2': 'bar2'}>> AS t",
  statement:"SELECT t.* EXCLUDE t.a.b FROM <<{'a': {'b': 2}, 'foo': 'bar', 'foo2': 'bar2'}>> AS t",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$bag::[
      {
        a:{
        },
        foo:"bar",
        foo2:"bar2"
      }
    ]
  }
}
{
  name:"SELECT t.* EXCLUDE t.a.b FROM <<{'a': {'b': 2, 'c': 3}, 'foo': 'bar', 'foo2': 'bar2'}>> AS t",
  statement:"SELECT t.* EXCLUDE t.a.b FROM <<{'a': {'b': 2, 'c': 3}, 'foo': 'bar', 'foo2': 'bar2'}>> AS t",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$bag::[
      {
        a:{
          c:3
        },
        foo:"bar",
        foo2:"bar2"
      }
    ]
  }
}
{
  name:"SELECT t.* EXCLUDE t.a.c, t.a.d, t.foo FROM <<{'a': {'b': 2, 'c': 3, 'd': 4}, 'foo': 'bar', 'foo2': 'bar2'}>> AS t",
  statement:"SELECT t.* EXCLUDE t.a.c, t.a.d, t.foo FROM <<{'a': {'b': 2, 'c': 3, 'd': 4}, 'foo': 'bar', 'foo2': 'bar2'}>> AS t",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$bag::[
      {
        a:{
          b:2
        },
        foo2:"bar2"
      }
    ]
  }
}
{
  name:"SELECT t.* EXCLUDE t.a.c, t.a FROM <<{'a': {'b': 2, 'c': 3, 'd': 4}, 'foo': 'bar', 'foo2': 'bar2'}>> AS t",
  statement:"SELECT t.* EXCLUDE t.a.c, t.a FROM <<{'a': {'b': 2, 'c': 3, 'd': 4}, 'foo': 'bar', 'foo2': 'bar2'}>> AS t",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$bag::[
      {
        foo:"bar",
        foo2:"bar2"
      }
    ]
  }
}
{
  name:"SELECT * EXCLUDE c.ssn FROM [ { 'name': 'Alan', 'custId': 1, 'address': { 'city': 'Seattle', 'zipcode': 98109, 'street': '123 Seaplane Dr.' }, 'ssn': 123456789 } ] AS c",
  statement:"SELECT * EXCLUDE c.ssn FROM [ { 'name': 'Alan', 'custId': 1, 'address': { 'city': 'Seattle', 'zipcode': 98109, 'street': '123 Seaplane Dr.' }, 'ssn': 123456789 } ] AS c",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$bag::[
      {
        name:"Alan",
        custId:1,
        address:{
          city:"Seattle",
          zipcode:98109,
          street:"123 Seaplane Dr."
        }
      }
    ]
  }
}
{
  name:"SELECT * EXCLUDE c.ssn FROM [ { 'name': 'Alan', 'custId': 1, 'address': { 'city': 'Seattle', 'zipcode': 98109, 'street': '123 Seaplane Dr.' }, 'ssn': 123456789 } ] AS c",
  statement:"SELECT * EXCLUDE c.ssn FROM [ { 'name': 'Alan', 'custId': 1, 'address': { 'city': 'Seattle', 'zipcode': 98109, 'street': '123 Seaplane Dr.' }, 'ssn': 123456789 } ] AS c",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$bag::[
      {
        name:"Alan",
        custId:1,
        address:{
          city:"Seattle",
          zipcode:98109,
          street:"123 Seaplane Dr."
        }
      }
    ]
  }
}
{
  name:"SELECT * EXCLUDE c.ssn, c.address.street FROM [ { 'name': 'Alan', 'custId': 1, 'address': { 'city': 'Seattle', 'zipcode': 98109, 'street': '123 Seaplane Dr.' }, 'ssn': 123456789 } ] AS c",
  statement:"SELECT * EXCLUDE c.ssn, c.address.street FROM [ { 'name': 'Alan', 'custId': 1, 'address': { 'city': 'Seattle', 'zipcode': 98109, 'street': '123 Seaplane Dr.' }, 'ssn': 123456789 } ] AS c",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$bag::[
      {
        name:"Alan",
        custId:1,
        address:{
          city:"Seattle",
          zipcode:98109
        }
      }
    ]
  }
}
{
  name:"SELECT * EXCLUDE t.a.b.c[0], t.a.b.c[1].field FROM [{ 'a': { 'b': { 'c': [ { 'field': 0, 'index': 0 }, { 'field': 1, 'index': 1 }, { 'field': 2, 'index': 2 } ] } }, 'foo': 'bar' }] AS t",
  statement:"SELECT * EXCLUDE t.a.b.c[0], t.a.b.c[1].field FROM [{ 'a': { 'b': { 'c': [ { 'field': 0, 'index': 0 }, { 'field': 1, 'index': 1 }, { 'field': 2, 'index': 2 } ] } }, 'foo': 'bar' }] AS t",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$bag::[
      {
        a:{
          b:{
            c:[
              {
                index:1
              },
              {
                field:2,
                index:2
              }
            ]
          }
        },
        foo:"bar"
      }
    ]
  }
}
{
  name:"SELECT * EXCLUDE t.a.b.c[0] FROM [{ 'a': { 'b': { 'c': [0, 1, 2] } }, 'foo': 'bar' }] AS t",
  statement:"SELECT * EXCLUDE t.a.b.c[0] FROM [{ 'a': { 'b': { 'c': [0, 1, 2] } }, 'foo': 'bar' }] AS t",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$bag::[
      {
        a:{
          b:{
            c:[
              1,
              2
            ]
          }
        },
        foo:"bar"
      }
    ]
  }
}
{
  name:"SELECT * EXCLUDE t.a[*] FROM [{ 'a': [0, 1, 2] }] AS t",
  statement:"SELECT * EXCLUDE t.a[*] FROM [{ 'a': [0, 1, 2] }] AS t",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$bag::[
      {
        a:[
        ]
      }
    ]
  }
}
{
  name:"SELECT * EXCLUDE t.a.b.c[*].field_x FROM [{ 'a': { 'b': { 'c': [ { 'field_x': 0, 'field_y': 0 }, { 'field_x': 1, 'field_y': 1 }, { 'field_x': 2, 'field_y': 2 } ] } }, 'foo': 'bar' }] AS t",
  statement:"SELECT * EXCLUDE t.a.b.c[*].field_x FROM [{ 'a': { 'b': { 'c': [ { 'field_x': 0, 'field_y': 0 }, { 'field_x': 1, 'field_y': 1 }, { 'field_x': 2, 'field_y': 2 } ] } }, 'foo': 'bar' }] AS t",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$bag::[
      {
        a:{
          b:{
            c:[
              {
                field_y:0
              },
              {
                field_y:1
              },
              {
                field_y:2
              }
            ]
          }
        },
        foo:"bar"
      }
    ]
  }
}
{
  name:"SELECT * EXCLUDE t.a.b.c[*].* FROM [{ 'a': { 'b': { 'c': [ { 'field_x': 0, 'field_y': 0 }, { 'field_x': 1, 'field_y': 1 }, { 'field_x': 2, 'field_y': 2 } ] } }, 'foo': 'bar' }] AS t",
  statement:"SELECT * EXCLUDE t.a.b.c[*].* FROM [{ 'a': { 'b': { 'c': [ { 'field_x': 0, 'field_y': 0 }, { 'field_x': 1, 'field_y': 1 }, { 'field_x': 2, 'field_y': 2 } ] } }, 'foo': 'bar' }] AS t",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$bag::[
      {
        a:{
          b:{
            c:[
              {
              },
              {
              },
              {
              }
            ]
          }
        },
        foo:"bar"
      }
    ]
  }
}
{
  name:"SELECT * EXCLUDE t.a FROM [ { 'a': 2, 'foo': 'bar2' }, { 'a': 1, 'foo': 'bar1' }, { 'a': 3, 'foo': 'bar3' } ] AS t ORDER BY t.a",
  statement:"SELECT * EXCLUDE t.a FROM [ { 'a': 2, 'foo': 'bar2' }, { 'a': 1, 'foo': 'bar1' }, { 'a': 3, 'foo': 'bar3' } ] AS t ORDER BY t.a",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
      {
        foo:"bar1"
      },
      {
        foo:"bar2"
      },
      {
        foo:"bar3"
      }
    ]
  }
}
{
  name:"SELECT * EXCLUDE bar.d FROM << {'a': 1, 'b': 11}, {'a': 2, 'b': 22} >> AS foo, << {'c': 3, 'd': 33}, {'c': 4, 'd': 44} >> AS bar",
  statement:"SELECT * EXCLUDE bar.d FROM << {'a': 1, 'b': 11}, {'a': 2, 'b': 22} >> AS foo, << {'c': 3, 'd': 33}, {'c': 4, 'd': 44} >> AS bar",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$bag::[
      {
        a:1,
        b:11,
        c:3
      },
      {
        a:1,
        b:11,
        c:4
      },
      {
        a:2,
        b:22,
        c:3
      },
      {
        a:2,
        b:22,
        c:4
      }
    ]
  }
}
{
  name:"SELECT t.b EXCLUDE t.b[*].b_1 FROM << { 'a': {'a_1':1,'a_2':2}, 'b': [ {'b_1':3,'b_2':4}, {'b_1':5,'b_2':6} ], 'c': 7, 'd': 8 } >> AS t",
  statement:"SELECT t.b EXCLUDE t.b[*].b_1 FROM << { 'a': {'a_1':1,'a_2':2}, 'b': [ {'b_1':3,'b_2':4}, {'b_1':5,'b_2':6} ], 'c': 7, 'd': 8 } >> AS t",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$bag::[
      {
        b:[
          {
            b_2:4
          },
          {
            b_2:6
          }
        ]
      }
    ]
  }
}
{
  name:"SELECT * EXCLUDE t.b[*].b_1 FROM << { 'a': {'a_1':1,'a_2':2}, 'b': [ {'b_1':3,'b_2':4}, {'b_1':5,'b_2':6} ], 'c': 7, 'd': 8 } >> AS t",
  statement:"SELECT * EXCLUDE t.b[*].b_1 FROM << { 'a': {'a_1':1,'a_2':2}, 'b': [ {'b_1':3,'b_2':4}, {'b_1':5,'b_2':6} ], 'c': 7, 'd': 8 } >> AS t",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$bag::[
      {
        a:{
          a_1:1,
          a_2:2
        },
        b:[
          {
            b_2:4
          },
          {
            b_2:6
          }
        ],
        c:7,
        d:8
      }
    ]
  }
}
{
  name:"SELECT VALUE t.b EXCLUDE t.b[*].b_1 FROM << { 'a': {'a_1':1,'a_2':2}, 'b': [ {'b_1':3,'b_2':4}, {'b_1':5,'b_2':6} ], 'c': 7, 'd': 8 } >> AS t",
  statement:"SELECT VALUE t.b EXCLUDE t.b[*].b_1 FROM << { 'a': {'a_1':1,'a_2':2}, 'b': [ {'b_1':3,'b_2':4}, {'b_1':5,'b_2':6} ], 'c': 7, 'd': 8 } >> AS t",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$bag::[
      [
        {
          b_2:4
        },
        {
          b_2:6
        }
      ]
    ]
  }
}
{
  name:"SELECT * EXCLUDE t.a[*].b.c FROM << { 'a': [ { 'b': { 'c': 0, 'd': 'zero' } }, { 'b': { 'c': 1, 'd': 'one' } }, { 'b': { 'c': 2, 'd': 'two' } } ] } >> AS t",
  statement:"SELECT * EXCLUDE t.a[*].b.c FROM << { 'a': [ { 'b': { 'c': 0, 'd': 'zero' } }, { 'b': { 'c': 1, 'd': 'one' } }, { 'b': { 'c': 2, 'd': 'two' } } ] } >> AS t",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$bag::[
      {
        a:[
          {
            b:{
              d:"zero"
            }
          },
          {
            b:{
              d:"one"
            }
          },
          {
            b:{
              d:"two"
            }
          }
        ]
      }
    ]
  }
}
{
  name:"SELECT * EXCLUDE t.a[1].b.c FROM << { 'a': [ { 'b': { 'c': 0, 'd': 'zero' } }, { 'b': { 'c': 1, 'd': 'one' } }, { 'b': { 'c': 2, 'd': 'two' } } ] } >> AS t",
  statement:"SELECT * EXCLUDE t.a[1].b.c FROM << { 'a': [ { 'b': { 'c': 0, 'd': 'zero' } }, { 'b': { 'c': 1, 'd': 'one' } }, { 'b': { 'c': 2, 'd': 'two' } } ] } >> AS t",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$bag::[
      {
        a:[
          {
            b:{
              c:0,
              d:"zero"
            }
          },
          {
            b:{
              d:"one"
            }
          },
          {
            b:{
              c:2,
              d:"two"
            }
          }
        ]
      }
    ]
  }
}
{
  name:"SELECT * EXCLUDE t.a[*].b.* FROM << { 'a': [ { 'b': { 'c': 0, 'd': 'zero' } }, { 'b': { 'c': 1, 'd': 'one' } }, { 'b': { 'c': 2, 'd': 'two' } } ] } >> AS t",
  statement:"SELECT * EXCLUDE t.a[*].b.* FROM << { 'a': [ { 'b': { 'c': 0, 'd': 'zero' } }, { 'b': { 'c': 1, 'd': 'one' } }, { 'b': { 'c': 2, 'd': 'two' } } ] } >> AS t",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$bag::[
      {
        a:[
          {
            b:{
            }
          },
          {
            b:{
            }
          },
          {
            b:{
            }
          }
        ]
      }
    ]
  }
}
{
  name:"SELECT * EXCLUDE t.a[1].b.* FROM << { 'a': [ { 'b': { 'c': 0, 'd': 'zero' } }, { 'b': { 'c': 1, 'd': 'one' } }, { 'b': { 'c': 2, 'd': 'two' } } ] } >> AS t",
  statement:"SELECT * EXCLUDE t.a[1].b.* FROM << { 'a': [ { 'b': { 'c': 0, 'd': 'zero' } }, { 'b': { 'c': 1, 'd': 'one' } }, { 'b': { 'c': 2, 'd': 'two' } } ] } >> AS t",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$bag::[
      {
        a:[
          {
            b:{
              c:0,
              d:"zero"
            }
          },
          {
            b:{
            }
          },
          {
            b:{
              c:2,
              d:"two"
            }
          }
        ]
      }
    ]
  }
}
{
  name:"SELECT * EXCLUDE t.a[*].b.d[*].e FROM << { 'a': [ { 'b': { 'c': 0, 'd': [{'e': 'zero0', 'f': true}, {'e': 'zero1', 'f': false}] } }, { 'b': { 'c': 1, 'd': [{'e': 'one0', 'f': true}, {'e': 'one1', 'f': false}] } }, { 'b': { 'c': 2, 'd': [{'e': 'two0', 'f': true}, {'e': 'two1', 'f': false}] } } ] } >> AS t",
  statement:"SELECT * EXCLUDE t.a[*].b.d[*].e FROM << { 'a': [ { 'b': { 'c': 0, 'd': [{'e': 'zero0', 'f': true}, {'e': 'zero1', 'f': false}] } }, { 'b': { 'c': 1, 'd': [{'e': 'one0', 'f': true}, {'e': 'one1', 'f': false}] } }, { 'b': { 'c': 2, 'd': [{'e': 'two0', 'f': true}, {'e': 'two1', 'f': false}] } } ] } >> AS t",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$bag::[
      {
        a:[
          {
            b:{
              c:0,
              d:[
                {
                  f:true
                },
                {
                  f:false
                }
              ]
            }
          },
          {
            b:{
              c:1,
              d:[
                {
                  f:true
                },
                {
                  f:false
                }
              ]
            }
          },
          {
            b:{
              c:2,
              d:[
                {
                  f:true
                },
                {
                  f:false
                }
              ]
            }
          }
        ]
      }
    ]
  }
}
{
  name:"SELECT * EXCLUDE t.a[1].b.d[*].e FROM << { 'a': [ { 'b': { 'c': 0, 'd': [{'e': 'zero0', 'f': true}, {'e': 'zero1', 'f': false}] } }, { 'b': { 'c': 1, 'd': [{'e': 'one0', 'f': true}, {'e': 'one1', 'f': false}] } }, { 'b': { 'c': 2, 'd': [{'e': 'two0', 'f': true}, {'e': 'two1', 'f': false}] } } ] } >> AS t",
  statement:"SELECT * EXCLUDE t.a[1].b.d[*].e FROM << { 'a': [ { 'b': { 'c': 0, 'd': [{'e': 'zero0', 'f': true}, {'e': 'zero1', 'f': false}] } }, { 'b': { 'c': 1, 'd': [{'e': 'one0', 'f': true}, {'e': 'one1', 'f': false}] } }, { 'b': { 'c': 2, 'd': [{'e': 'two0', 'f': true}, {'e': 'two1', 'f': false}] } } ] } >> AS t",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$bag::[
      {
        a:[
          {
            b:{
              c:0,
              d:[
                {
                  e:"zero0",
                  f:true
                },
                {
                  e:"zero1",
                  f:false
                }
              ]
            }
          },
          {
            b:{
              c:1,
              d:[
                {
                  f:true
                },
                {
                  f:false
                }
              ]
            }
          },
          {
            b:{
              c:2,
              d:[
                {
                  e:"two0",
                  f:true
                },
                {
                  e:"two1",
                  f:false
                }
              ]
            }
          }
        ]
      }
    ]
  }
}
{
  name:"SELECT * EXCLUDE t.a[1].b.d[0].e FROM << { 'a': [ { 'b': { 'c': 0, 'd': [{'e': 'zero0', 'f': true}, {'e': 'zero1', 'f': false}] } }, { 'b': { 'c': 1, 'd': [{'e': 'one0', 'f': true}, {'e': 'one1', 'f': false}] } }, { 'b': { 'c': 2, 'd': [{'e': 'two0', 'f': true}, {'e': 'two1', 'f': false}] } } ] } >> AS t",
  statement:"SELECT * EXCLUDE t.a[1].b.d[0].e FROM << { 'a': [ { 'b': { 'c': 0, 'd': [{'e': 'zero0', 'f': true}, {'e': 'zero1', 'f': false}] } }, { 'b': { 'c': 1, 'd': [{'e': 'one0', 'f': true}, {'e': 'one1', 'f': false}] } }, { 'b': { 'c': 2, 'd': [{'e': 'two0', 'f': true}, {'e': 'two1', 'f': false}] } } ] } >> AS t",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$bag::[
      {
        a:[
          {
            b:{
              c:0,
              d:[
                {
                  e:"zero0",
                  f:true
                },
                {
                  e:"zero1",
                  f:false
                }
              ]
            }
          },
          {
            b:{
              c:1,
              d:[
                {
                  f:true
                },
                {
                  e:"one1",
                  f:false
                }
              ]
            }
          },
          {
            b:{
              c:2,
              d:[
                {
                  e:"two0",
                  f:true
                },
                {
                  e:"two1",
                  f:false
                }
              ]
            }
          }
        ]
      }
    ]
  }
}
{
  name:"SELECT * EXCLUDE t.a.*.bar FROM [ { 'a': { 'b': { 'foo': 1, 'bar': 2 }, 'c': { 'foo': 11, 'bar': 22 }, 'd': { 'foo': 111, 'bar': 222 } }, 'foo': 'bar' } ] AS t",
  statement:"SELECT * EXCLUDE t.a.*.bar FROM [ { 'a': { 'b': { 'foo': 1, 'bar': 2 }, 'c': { 'foo': 11, 'bar': 22 }, 'd': { 'foo': 111, 'bar': 222 } }, 'foo': 'bar' } ] AS t",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$bag::[
      {
        a:{
          b:{
            foo:1
          },
          c:{
            foo:11
          },
          d:{
            foo:111
          }
        },
        foo:"bar"
      }
    ]
  }
}
{
  name:"SELECT * EXCLUDE t.a FROM [ { 'a': 2, 'foo': 'bar2' }, { 'a': 1, 'foo': 'bar1' }, { 'a': 3, 'foo': 'bar3' } ] AS t ORDER BY t.a",
  statement:"SELECT * EXCLUDE t.a FROM [ { 'a': 2, 'foo': 'bar2' }, { 'a': 1, 'foo': 'bar1' }, { 'a': 3, 'foo': 'bar3' } ] AS t ORDER BY t.a",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
      {
        foo:"bar1"
      },
      {
        foo:"bar2"
      },
      {
        foo:"bar3"
      }
    ]
  }
}
{
  name:"SELECT * EXCLUDE g[*].t.c FROM << { 'a': 1, 'b': 11, 'c': 111 }, { 'a': 1, 'b': 22, 'c': 222 }, { 'a': 2, 'b': 33, 'c': 333 } >> AS t GROUP BY t.a AS a GROUP AS g",
  statement:"SELECT * EXCLUDE g[*].t.c FROM << { 'a': 1, 'b': 11, 'c': 111 }, { 'a': 1, 'b': 22, 'c': 222 }, { 'a': 2, 'b': 33, 'c': 333 } >> AS t GROUP BY t.a AS a GROUP AS g",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$bag::[
      {
        a:1,
        g:$bag::[
          {
            t:{
              a:1,
              b:11
            }
          },
          {
            t:{
              a:1,
              b:22
            }
          }
        ]
      },
      {
        a:2,
        g:$bag::[
          {
            t:{
              a:2,
              b:33
            }
          }
        ]
      }
    ]
  }
}
{
  name:"SELECT DISTINCT * EXCLUDE t.a FROM << { 'a': 1, 'b': 11, 'c': 111 }, { 'a': 2, 'b': 11, 'c': 111 }, { 'a': 1, 'b': 22, 'c': 222 } >> AS t",
  statement:"SELECT DISTINCT * EXCLUDE t.a FROM << { 'a': 1, 'b': 11, 'c': 111 }, { 'a': 2, 'b': 11, 'c': 111 }, { 'a': 1, 'b': 22, 'c': 222 } >> AS t",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$bag::[
      {
        b:11,
        c:111
      },
      {
        b:22,
        c:222
      }
    ]
  }
}
{
  name:"SELECT DISTINCT * EXCLUDE t.a FROM << { 'a': 1, 'b': 11, 'c': 111 }, { 'a': 2, 'b': 22, 'c': 222 }, { 'a': 3, 'b': 33, 'c': 333 }, { 'a': 4, 'b': 44, 'c': 444 }, { 'a': 5, 'b': 55, 'c': 555 } >> AS t ORDER BY a LIMIT 2 OFFSET 2",
  statement:"SELECT DISTINCT * EXCLUDE t.a FROM << { 'a': 1, 'b': 11, 'c': 111 }, { 'a': 2, 'b': 22, 'c': 222 }, { 'a': 3, 'b': 33, 'c': 333 }, { 'a': 4, 'b': 44, 'c': 444 }, { 'a': 5, 'b': 55, 'c': 555 } >> AS t ORDER BY a LIMIT 2 OFFSET 2",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
      {
        b:33,
        c:333
      },
      {
        b:44,
        c:444
      }
    ]
  }
}
{
  name:"PIVOT t.v AT t.attr EXCLUDE t.v[*].excludeValue FROM << { 'attr': 'a', 'v': [{'keepValue': 1, 'excludeValue': 11}, {'keepValue': 4, 'excludeValue': 44}] }, { 'attr': 'b', 'v': [{'keepValue': 2, 'excludeValue': 22}, {'keepValue': 5, 'excludeValue': 55}] }, { 'attr': 'c', 'v': [{'keepValue': 3, 'excludeValue': 33}, {'keepValue': 6, 'excludeValue': 66}] } >> AS t",
  statement:"PIVOT t.v AT t.attr EXCLUDE t.v[*].excludeValue FROM << { 'attr': 'a', 'v': [{'keepValue': 1, 'excludeValue': 11}, {'keepValue': 4, 'excludeValue': 44}] }, { 'attr': 'b', 'v': [{'keepValue': 2, 'excludeValue': 22}, {'keepValue': 5, 'excludeValue': 55}] }, { 'attr': 'c', 'v': [{'keepValue': 3, 'excludeValue': 33}, {'keepValue': 6, 'excludeValue': 66}] } >> AS t",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:{
      a:[
        {
          keepValue:1
        },
        {
          keepValue:4
        }
      ],
      b:[
        {
          keepValue:2
        },
        {
          keepValue:5
        }
      ],
      c:[
        {
          keepValue:3
        },
        {
          keepValue:6
        }
      ]
    }
  }
}
{
  name:"SELECT v, attr EXCLUDE v.foo FROM UNPIVOT { 'a': {'foo': 1, 'bar': 11}, 'a': {'foo': 2, 'bar': 22}, 'b': {'foo': 3, 'bar': 33} } AS v AT attr",
  statement:"SELECT v, attr EXCLUDE v.foo FROM UNPIVOT { 'a': {'foo': 1, 'bar': 11}, 'a': {'foo': 2, 'bar': 22}, 'b': {'foo': 3, 'bar': 33} } AS v AT attr",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$bag::[
      {
        v:{
          bar:11
        },
        attr:"a"
      },
      {
        v:{
          bar:22
        },
        attr:"a"
      },
      {
        v:{
          bar:33
        },
        attr:"b"
      }
    ]
  }
}
{
  name:"SELECT * EXCLUDE t.a[1] FROM << {'a': [0, 1, 2]} >> AS t",
  statement:"SELECT * EXCLUDE t.a[1] FROM << {'a': [0, 1, 2]} >> AS t",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$bag::[
      {
        a:[
          0,
          2
        ]
      }
    ]
  }
}
{
  name:"SELECT * EXCLUDE t.a[1] FROM << {'a': <<0, 1, 2>>} >> AS t",
  statement:"SELECT * EXCLUDE t.a[1] FROM << {'a': <<0, 1, 2>>} >> AS t",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$bag::[
      {
        a:$bag::[
          0,
          1,
          2
        ]
      }
    ]
  }
}
{
  name:"SELECT * EXCLUDE t.a[1] FROM << {'a': `(0 1 2)`} >> AS t",
  statement:"SELECT * EXCLUDE t.a[1] FROM << {'a': `(0 1 2)`} >> AS t",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$bag::[
      {
        a:(
          0
          2
        )
      }
    ]
  }
}
{
  name:"SELECT * EXCLUDE t.a[*] FROM << {'a': [0, 1, 2]} >> AS t",
  statement:"SELECT * EXCLUDE t.a[*] FROM << {'a': [0, 1, 2]} >> AS t",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$bag::[
      {
        a:[
        ]
      }
    ]
  }
}
{
  name:"SELECT * EXCLUDE t.a[*] FROM << {'a': <<0, 1, 2>>} >> AS t",
  statement:"SELECT * EXCLUDE t.a[*] FROM << {'a': <<0, 1, 2>>} >> AS t",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$bag::[
      {
        a:$bag::[
        ]
      }
    ]
  }
}
{
  name:"SELECT * EXCLUDE t.a[*] FROM << {'a': `(0 1 2)`} >> AS t",
  statement:"SELECT * EXCLUDE t.a[*] FROM << {'a': `(0 1 2)`} >> AS t",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$bag::[
      {
        a:(
        )
      }
    ]
  }
}
{
  name:"SELECT * EXCLUDE t.a FROM << { 'a': 1, 'a': 2, 'a': 3, 'b': 4, 'c': 5 } >> AS t",
  statement:"SELECT * EXCLUDE t.a FROM << { 'a': 1, 'a': 2, 'a': 3, 'b': 4, 'c': 5 } >> AS t",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$bag::[
      {
        b:4,
        c:5
      }
    ]
  }
}
{
  name:"SELECT * EXCLUDE t.path_does_not_exist, t.path_does_not_exist.*.foo, t.a['does not exist'], t.a FROM <<{'a': 1, 'b': 2}>> AS t",
  statement:"SELECT * EXCLUDE t.path_does_not_exist, t.path_does_not_exist.*.foo, t.a['does not exist'], t.a FROM <<{'a': 1, 'b': 2}>> AS t",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$bag::[
      {
        b:2
      }
    ]
  }
}
{
  name:"SELECT * EXCLUDE t.a[*].bar, t.a.bar, t.a.*.bar FROM << {'a': [{'foo': 0, 'bar': 1, 'baz': 2}, {'foo': 3, 'bar': 4, 'baz': 5}]}, {'a': {'foo': 6, 'bar': 7, 'baz': 8}}, {'a': {'a1': {'foo': 9, 'bar': 10, 'baz': 11}, 'a2': {'foo': 12, 'bar': 13, 'baz': 14}}} >> AS t",
  statement:"SELECT * EXCLUDE t.a[*].bar, t.a.bar, t.a.*.bar FROM << {'a': [{'foo': 0, 'bar': 1, 'baz': 2}, {'foo': 3, 'bar': 4, 'baz': 5}]}, {'a': {'foo': 6, 'bar': 7, 'baz': 8}}, {'a': {'a1': {'foo': 9, 'bar': 10, 'baz': 11}, 'a2': {'foo': 12, 'bar': 13, 'baz': 14}}} >> AS t",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$bag::[
      {
        a:[
          {
            foo:0,
            baz:2
          },
          {
            foo:3,
            baz:5
          }
        ]
      },
      {
        a:{
          foo:6,
          baz:8
        }
      },
      {
        a:{
          a1:{
            foo:9,
            baz:11
          },
          a2:{
            foo:12,
            baz:14
          }
        }
      }
    ]
  }
}
{
  name:"SELECT SUM(t.b) AS total, g EXCLUDE g[*].t.c FROM [ {'a': 1, 'b': 2, 'c': 3}, {'a': 1, 'b': 22, 'c': 33}, {'a': 2, 'b': 222, 'c': 333} ] AS t GROUP BY t.a GROUP AS g HAVING COUNT(t.a) > 1",
  statement:"SELECT SUM(t.b) AS total, g EXCLUDE g[*].t.c FROM [ {'a': 1, 'b': 2, 'c': 3}, {'a': 1, 'b': 22, 'c': 33}, {'a': 2, 'b': 222, 'c': 333} ] AS t GROUP BY t.a GROUP AS g HAVING COUNT(t.a) > 1",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$bag::[
      {
        total:24,
        g:$bag::[
          {
            t:{
              a:1,
              b:2
            }
          },
          {
            t:{
              a:1,
              b:22
            }
          }
        ]
      }
    ]
  }
}