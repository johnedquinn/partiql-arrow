
envs::{
  simple_1:[
    {
      col1:1,
      col2:10
    },
    {
      col1:1,
      col2:5
    },
    {
      col1:1,
      col2:7
    },
    {
      col1:5,
      col2:7
    },
    {
      col1:3,
      col2:12
    }
  ],
  suppliers:[
    {
      supplierId:10,
      supplierName:"Umbrella"
    },
    {
      supplierId:11,
      supplierName:"Initech"
    }
  ],
  products:[
    {
      productId:1,
      supplierId:10,
      categoryId:20,
      price:5.0,
      numInStock:1
    },
    {
      productId:2,
      supplierId:10,
      categoryId:20,
      price:10.0,
      numInStock:10
    },
    {
      productId:3,
      supplierId:10,
      categoryId:21,
      price:15.0,
      numInStock:100
    },
    {
      productId:4,
      supplierId:11,
      categoryId:21,
      price:5.0,
      numInStock:1000
    },
    {
      productId:5,
      supplierId:11,
      categoryId:21,
      price:15.0,
      numInStock:10000
    }
  ],
  products_sparse:[
    {
      productId:1,
      categoryId:20,
      regionId:100,
      supplierId_nulls:10,
      supplierId_missings:10,
      supplierId_mixed:10,
      price_nulls:1.0,
      price_missings:1.0,
      price_mixed:1.0
    },
    {
      productId:2,
      categoryId:20,
      regionId:100,
      supplierId_nulls:10,
      supplierId_missings:10,
      supplierId_mixed:10,
      price_nulls:2.0,
      price_missings:2.0,
      price_mixed:2.0
    },
    {
      productId:3,
      categoryId:20,
      regionId:200,
      supplierId_nulls:10,
      supplierId_missings:10,
      supplierId_mixed:10,
      price_nulls:3.0,
      price_missings:3.0,
      price_mixed:3.0
    },
    {
      productId:5,
      categoryId:21,
      regionId:100,
      supplierId_nulls:null,
      price_nulls:null
    },
    {
      productId:4,
      categoryId:20,
      regionId:100,
      supplierId_nulls:null,
      supplierId_mixed:null,
      price_nulls:null,
      price_mixed:null
    },
    {
      productId:6,
      categoryId:21,
      regionId:100,
      supplierId_nulls:11,
      supplierId_missings:11,
      supplierId_mixed:11,
      price_nulls:4.0,
      price_missings:4.0,
      price_mixed:4.0
    },
    {
      productId:7,
      categoryId:21,
      regionId:200,
      supplierId_nulls:11,
      supplierId_missings:11,
      supplierId_mixed:11,
      price_nulls:5.0,
      price_missings:5.0,
      price_mixed:5.0
    },
    {
      productId:8,
      categoryId:21,
      regionId:200,
      supplierId_nulls:null,
      supplierId_mixed:null,
      price_nulls:null,
      price_mixed:null
    },
    {
      productId:9,
      categoryId:21,
      regionId:200,
      supplierId_nulls:null,
      price_nulls:null
    },
    {
      productId:10,
      categoryId:21,
      regionId:200,
      supplierId_nulls:null,
      supplierId_mixed:null,
      price_nulls:null
    }
  ],
  orders:[
    {
      customerId:123,
      sellerId:1,
      productId:11111,
      cost:1
    },
    {
      customerId:123,
      sellerId:2,
      productId:22222,
      cost:2
    },
    {
      customerId:123,
      sellerId:1,
      productId:33333,
      cost:3
    },
    {
      customerId:456,
      sellerId:2,
      productId:44444,
      cost:4
    },
    {
      customerId:456,
      sellerId:1,
      productId:55555,
      cost:5
    },
    {
      customerId:456,
      sellerId:2,
      productId:66666,
      cost:6
    },
    {
      customerId:789,
      sellerId:1,
      productId:77777,
      cost:7
    },
    {
      customerId:789,
      sellerId:2,
      productId:88888,
      cost:8
    },
    {
      customerId:789,
      sellerId:1,
      productId:99999,
      cost:9
    },
    {
      customerId:100,
      sellerId:2,
      productId:10000,
      cost:10
    }
  ]
}
{
  name:"SELECT col1 FROM simple_1 ORDER BY col1",
  statement:"SELECT col1 FROM simple_1 ORDER BY col1",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
      {
        col1:1
      },
      {
        col1:1
      },
      {
        col1:1
      },
      {
        col1:3
      },
      {
        col1:5
      }
    ]
  }
}
{
  name:"SELECT col1 FROM simple_1 ORDER BY col1 DESC",
  statement:"SELECT col1 FROM simple_1 ORDER BY col1 DESC",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
      {
        col1:5
      },
      {
        col1:3
      },
      {
        col1:1
      },
      {
        col1:1
      },
      {
        col1:1
      }
    ]
  }
}
{
  name:"SELECT * FROM simple_1 ORDER BY col1, col2",
  statement:"SELECT * FROM simple_1 ORDER BY col1, col2",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
      {
        col1:1,
        col2:5
      },
      {
        col1:1,
        col2:7
      },
      {
        col1:1,
        col2:10
      },
      {
        col1:3,
        col2:12
      },
      {
        col1:5,
        col2:7
      }
    ]
  }
}
{
  name:"SELECT productId, price FROM products ORDER BY price DESC, productId ASC",
  statement:"SELECT productId, price FROM products ORDER BY price DESC, productId ASC",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
      {
        productId:3,
        price:15.0
      },
      {
        productId:5,
        price:15.0
      },
      {
        productId:2,
        price:10.0
      },
      {
        productId:1,
        price:5.0
      },
      {
        productId:4,
        price:5.0
      }
    ]
  }
}
{
  name:"SELECT productId, supplierId_nulls FROM products_sparse ORDER BY supplierId_nulls NULLS LAST, productId",
  statement:"SELECT productId, supplierId_nulls FROM products_sparse ORDER BY supplierId_nulls NULLS LAST, productId",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
      {
        productId:1,
        supplierId_nulls:10
      },
      {
        productId:2,
        supplierId_nulls:10
      },
      {
        productId:3,
        supplierId_nulls:10
      },
      {
        productId:6,
        supplierId_nulls:11
      },
      {
        productId:7,
        supplierId_nulls:11
      },
      {
        productId:4,
        supplierId_nulls:null
      },
      {
        productId:5,
        supplierId_nulls:null
      },
      {
        productId:8,
        supplierId_nulls:null
      },
      {
        productId:9,
        supplierId_nulls:null
      },
      {
        productId:10,
        supplierId_nulls:null
      }
    ]
  }
}
{
  name:"SELECT productId, supplierId_nulls FROM products_sparse ORDER BY supplierId_nulls NULLS FIRST, productId",
  statement:"SELECT productId, supplierId_nulls FROM products_sparse ORDER BY supplierId_nulls NULLS FIRST, productId",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
      {
        productId:4,
        supplierId_nulls:null
      },
      {
        productId:5,
        supplierId_nulls:null
      },
      {
        productId:8,
        supplierId_nulls:null
      },
      {
        productId:9,
        supplierId_nulls:null
      },
      {
        productId:10,
        supplierId_nulls:null
      },
      {
        productId:1,
        supplierId_nulls:10
      },
      {
        productId:2,
        supplierId_nulls:10
      },
      {
        productId:3,
        supplierId_nulls:10
      },
      {
        productId:6,
        supplierId_nulls:11
      },
      {
        productId:7,
        supplierId_nulls:11
      }
    ]
  }
}
{
  name:"SELECT productId, supplierId_nulls FROM products_sparse ORDER BY supplierId_nulls ASC, productId",
  statement:"SELECT productId, supplierId_nulls FROM products_sparse ORDER BY supplierId_nulls ASC, productId",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
      {
        productId:1,
        supplierId_nulls:10
      },
      {
        productId:2,
        supplierId_nulls:10
      },
      {
        productId:3,
        supplierId_nulls:10
      },
      {
        productId:6,
        supplierId_nulls:11
      },
      {
        productId:7,
        supplierId_nulls:11
      },
      {
        productId:4,
        supplierId_nulls:null
      },
      {
        productId:5,
        supplierId_nulls:null
      },
      {
        productId:8,
        supplierId_nulls:null
      },
      {
        productId:9,
        supplierId_nulls:null
      },
      {
        productId:10,
        supplierId_nulls:null
      }
    ]
  }
}
{
  name:"SELECT productId, supplierId_nulls FROM products_sparse ORDER BY supplierId_nulls DESC, productId",
  statement:"SELECT productId, supplierId_nulls FROM products_sparse ORDER BY supplierId_nulls DESC, productId",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
      {
        productId:4,
        supplierId_nulls:null
      },
      {
        productId:5,
        supplierId_nulls:null
      },
      {
        productId:8,
        supplierId_nulls:null
      },
      {
        productId:9,
        supplierId_nulls:null
      },
      {
        productId:10,
        supplierId_nulls:null
      },
      {
        productId:6,
        supplierId_nulls:11
      },
      {
        productId:7,
        supplierId_nulls:11
      },
      {
        productId:1,
        supplierId_nulls:10
      },
      {
        productId:2,
        supplierId_nulls:10
      },
      {
        productId:3,
        supplierId_nulls:10
      }
    ]
  }
}
{
  name:"SELECT sellerId FROM orders GROUP BY sellerId ORDER BY sellerId ASC",
  statement:"SELECT sellerId FROM orders GROUP BY sellerId ORDER BY sellerId ASC",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
      {
        sellerId:1
      },
      {
        sellerId:2
      }
    ]
  }
}
{
  name:"SELECT sellerId FROM orders GROUP BY sellerId ORDER BY sellerId DESC",
  statement:"SELECT sellerId FROM orders GROUP BY sellerId ORDER BY sellerId DESC",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
      {
        sellerId:2
      },
      {
        sellerId:1
      }
    ]
  }
}
{
  name:"SELECT supplierId_nulls FROM products_sparse GROUP BY supplierId_nulls ORDER BY supplierId_nulls DESC",
  statement:"SELECT supplierId_nulls FROM products_sparse GROUP BY supplierId_nulls ORDER BY supplierId_nulls DESC",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
      {
        supplierId_nulls:null
      },
      {
        supplierId_nulls:11
      },
      {
        supplierId_nulls:10
      }
    ]
  }
}
{
  name:"SELECT supplierId_nulls FROM products_sparse GROUP BY supplierId_nulls ORDER BY supplierId_nulls ASC",
  statement:"SELECT supplierId_nulls FROM products_sparse GROUP BY supplierId_nulls ORDER BY supplierId_nulls ASC",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
      {
        supplierId_nulls:10
      },
      {
        supplierId_nulls:11
      },
      {
        supplierId_nulls:null
      }
    ]
  }
}
{
  name:"SELECT supplierId_nulls FROM products_sparse GROUP BY supplierId_nulls ORDER BY supplierId_nulls NULLS FIRST",
  statement:"SELECT supplierId_nulls FROM products_sparse GROUP BY supplierId_nulls ORDER BY supplierId_nulls NULLS FIRST",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
      {
        supplierId_nulls:null
      },
      {
        supplierId_nulls:10
      },
      {
        supplierId_nulls:11
      }
    ]
  }
}
{
  name:"SELECT supplierId_nulls FROM products_sparse GROUP BY supplierId_nulls ORDER BY supplierId_nulls NULLS LAST",
  statement:"SELECT supplierId_nulls FROM products_sparse GROUP BY supplierId_nulls ORDER BY supplierId_nulls NULLS LAST",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
      {
        supplierId_nulls:10
      },
      {
        supplierId_nulls:11
      },
      {
        supplierId_nulls:null
      }
    ]
  }
}
{
  name:"SELECT supplierId_nulls FROM products_sparse GROUP BY supplierId_nulls ORDER BY supplierId_nulls ASC NULLS FIRST",
  statement:"SELECT supplierId_nulls FROM products_sparse GROUP BY supplierId_nulls ORDER BY supplierId_nulls ASC NULLS FIRST",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
      {
        supplierId_nulls:null
      },
      {
        supplierId_nulls:10
      },
      {
        supplierId_nulls:11
      }
    ]
  }
}
{
  name:"SELECT * FROM [ { 'data_value': {} }, { 'data_value': 5 }, { 'data_value': `2017-01-01T00:00-00:00` }, { 'data_value': [] }, { 'data_value': TIME '12:12:12.1' }, { 'data_value': 'a' }, { 'data_value': null }, { 'data_value': false }, { 'data_value': `{{YWFhYWFhYWFhYWFhYf8=}}` }, { 'data_value': DATE '2021-08-22' }, { 'data_value': <<>> }, { 'data_value': `{{\"aaaaaaaaaaaaa\\xFF\"}}` } ] ORDER BY data_value",
  statement:"SELECT * FROM [ { 'data_value': {} }, { 'data_value': 5 }, { 'data_value': `2017-01-01T00:00-00:00` }, { 'data_value': [] }, { 'data_value': TIME '12:12:12.1' }, { 'data_value': 'a' }, { 'data_value': null }, { 'data_value': false }, { 'data_value': `{{YWFhYWFhYWFhYWFhYf8=}}` }, { 'data_value': DATE '2021-08-22' }, { 'data_value': <<>> }, { 'data_value': `{{\"aaaaaaaaaaaaa\\xFF\"}}` } ] ORDER BY data_value",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
      {
        data_value:false
      },
      {
        data_value:5
      },
      {
        data_value:$date::2021-08-22
      },
      {
        data_value:$time::{
          hour:12,
          minute:12,
          second:12.1,
          timezone_hour:null.int,
          timezone_minute:null.int
        }
      },
      {
        data_value:2017-01-01T00:00-00:00
      },
      {
        data_value:"a"
      },
      {
        data_value:{{ YWFhYWFhYWFhYWFhYf8= }}
      },
      {
        data_value:{{ "aaaaaaaaaaaaa\xff" }}
      },
      {
        data_value:[
        ]
      },
      {
        data_value:{
        }
      },
      {
        data_value:$bag::[
        ]
      },
      {
        data_value:null
      }
    ]
  }
}
{
  name:"SELECT * FROM [ { 'data_value': {} }, { 'data_value': 5 }, { 'data_value': `2017-01-01T00:00-00:00` }, { 'data_value': [] }, { 'data_value': TIME '12:12:12.1' }, { 'data_value': 'a' }, { 'data_value': null }, { 'data_value': false }, { 'data_value': `{{YWFhYWFhYWFhYWFhYf8=}}` }, { 'data_value': DATE '2021-08-22' }, { 'data_value': <<>> }, { 'data_value': `{{\"aaaaaaaaaaaaa\\xFF\"}}` } ] ORDER BY data_value DESC",
  statement:"SELECT * FROM [ { 'data_value': {} }, { 'data_value': 5 }, { 'data_value': `2017-01-01T00:00-00:00` }, { 'data_value': [] }, { 'data_value': TIME '12:12:12.1' }, { 'data_value': 'a' }, { 'data_value': null }, { 'data_value': false }, { 'data_value': `{{YWFhYWFhYWFhYWFhYf8=}}` }, { 'data_value': DATE '2021-08-22' }, { 'data_value': <<>> }, { 'data_value': `{{\"aaaaaaaaaaaaa\\xFF\"}}` } ] ORDER BY data_value DESC",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
      {
        data_value:null
      },
      {
        data_value:$bag::[
        ]
      },
      {
        data_value:{
        }
      },
      {
        data_value:[
        ]
      },
      {
        data_value:{{ YWFhYWFhYWFhYWFhYf8= }}
      },
      {
        data_value:{{ "aaaaaaaaaaaaa\xff" }}
      },
      {
        data_value:"a"
      },
      {
        data_value:2017-01-01T00:00-00:00
      },
      {
        data_value:$time::{
          hour:12,
          minute:12,
          second:12.1,
          timezone_hour:null.int,
          timezone_minute:null.int
        }
      },
      {
        data_value:$date::2021-08-22
      },
      {
        data_value:5
      },
      {
        data_value:false
      }
    ]
  }
}
{
  name:"SELECT * FROM [ { 'data_value': {} }, { 'data_value': 5 }, { 'data_value': `2017-01-01T00:00-00:00` }, { 'data_value': [] }, { 'data_value': TIME '12:12:12.1' }, { 'data_value': 'a' }, { 'data_value': null }, { 'data_value': false }, { 'data_value': `{{YWFhYWFhYWFhYWFhYf8=}}` }, { 'data_value': DATE '2021-08-22' }, { 'data_value': <<>> }, { 'data_value': `{{\"aaaaaaaaaaaaa\\xFF\"}}` } ] ORDER BY data_value NULLS FIRST",
  statement:"SELECT * FROM [ { 'data_value': {} }, { 'data_value': 5 }, { 'data_value': `2017-01-01T00:00-00:00` }, { 'data_value': [] }, { 'data_value': TIME '12:12:12.1' }, { 'data_value': 'a' }, { 'data_value': null }, { 'data_value': false }, { 'data_value': `{{YWFhYWFhYWFhYWFhYf8=}}` }, { 'data_value': DATE '2021-08-22' }, { 'data_value': <<>> }, { 'data_value': `{{\"aaaaaaaaaaaaa\\xFF\"}}` } ] ORDER BY data_value NULLS FIRST",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
      {
        data_value:null
      },
      {
        data_value:false
      },
      {
        data_value:5
      },
      {
        data_value:$date::2021-08-22
      },
      {
        data_value:$time::{
          hour:12,
          minute:12,
          second:12.1,
          timezone_hour:null.int,
          timezone_minute:null.int
        }
      },
      {
        data_value:2017-01-01T00:00-00:00
      },
      {
        data_value:"a"
      },
      {
        data_value:{{ YWFhYWFhYWFhYWFhYf8= }}
      },
      {
        data_value:{{ "aaaaaaaaaaaaa\xff" }}
      },
      {
        data_value:[
        ]
      },
      {
        data_value:{
        }
      },
      {
        data_value:$bag::[
        ]
      }
    ]
  }
}
{
  name:"SELECT * FROM [ { 'data_value': {} }, { 'data_value': 5 }, { 'data_value': `2017-01-01T00:00-00:00` }, { 'data_value': [] }, { 'data_value': TIME '12:12:12.1' }, { 'data_value': 'a' }, { 'data_value': null }, { 'data_value': false }, { 'data_value': `{{YWFhYWFhYWFhYWFhYf8=}}` }, { 'data_value': DATE '2021-08-22' }, { 'data_value': <<>> }, { 'data_value': `{{\"aaaaaaaaaaaaa\\xFF\"}}` } ] ORDER BY data_value NULLS LAST",
  statement:"SELECT * FROM [ { 'data_value': {} }, { 'data_value': 5 }, { 'data_value': `2017-01-01T00:00-00:00` }, { 'data_value': [] }, { 'data_value': TIME '12:12:12.1' }, { 'data_value': 'a' }, { 'data_value': null }, { 'data_value': false }, { 'data_value': `{{YWFhYWFhYWFhYWFhYf8=}}` }, { 'data_value': DATE '2021-08-22' }, { 'data_value': <<>> }, { 'data_value': `{{\"aaaaaaaaaaaaa\\xFF\"}}` } ] ORDER BY data_value NULLS LAST",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
      {
        data_value:false
      },
      {
        data_value:5
      },
      {
        data_value:$date::2021-08-22
      },
      {
        data_value:$time::{
          hour:12,
          minute:12,
          second:12.1,
          timezone_hour:null.int,
          timezone_minute:null.int
        }
      },
      {
        data_value:2017-01-01T00:00-00:00
      },
      {
        data_value:"a"
      },
      {
        data_value:{{ YWFhYWFhYWFhYWFhYf8= }}
      },
      {
        data_value:{{ "aaaaaaaaaaaaa\xff" }}
      },
      {
        data_value:[
        ]
      },
      {
        data_value:{
        }
      },
      {
        data_value:$bag::[
        ]
      },
      {
        data_value:null
      }
    ]
  }
}
{
  name:"SELECT * FROM [{ 'a': false }, { 'a': true }, { 'a': true }, { 'a': false }] ORDER BY a",
  statement:"SELECT * FROM [{ 'a': false }, { 'a': true }, { 'a': true }, { 'a': false }] ORDER BY a",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
      {
        a:false
      },
      {
        a:false
      },
      {
        a:true
      },
      {
        a:true
      }
    ]
  }
}
{
  name:"SELECT * FROM [{ 'a': false }, { 'a': true }, { 'a': true }, { 'a': false }] ORDER BY a DESC",
  statement:"SELECT * FROM [{ 'a': false }, { 'a': true }, { 'a': true }, { 'a': false }] ORDER BY a DESC",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
      {
        a:true
      },
      {
        a:true
      },
      {
        a:false
      },
      {
        a:false
      }
    ]
  }
}
{
  name:"SELECT * FROM [{ 'a': 5 }, { 'a': -5e-1 }, { 'a': `-inf` }, { 'a': `nan` }, { 'a': 7 }, { 'a': `+inf` }, { 'a': 9 }] ORDER BY a",
  statement:"SELECT * FROM [{ 'a': 5 }, { 'a': -5e-1 }, { 'a': `-inf` }, { 'a': `nan` }, { 'a': 7 }, { 'a': `+inf` }, { 'a': 9 }] ORDER BY a",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
      {
        a:nan
      },
      {
        a:-inf
      },
      {
        a:-0.5
      },
      {
        a:5
      },
      {
        a:7
      },
      {
        a:9
      },
      {
        a:+inf
      }
    ]
  }
}
{
  name:"SELECT * FROM [{ 'a': 5 }, { 'a': -5e-1 }, { 'a': `-inf` }, { 'a': `nan` }, { 'a': 7 }, { 'a': `+inf` }, { 'a': 9 }] ORDER BY a DESC",
  statement:"SELECT * FROM [{ 'a': 5 }, { 'a': -5e-1 }, { 'a': `-inf` }, { 'a': `nan` }, { 'a': 7 }, { 'a': `+inf` }, { 'a': 9 }] ORDER BY a DESC",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
      {
        a:+inf
      },
      {
        a:9
      },
      {
        a:7
      },
      {
        a:5
      },
      {
        a:-0.5
      },
      {
        a:-inf
      },
      {
        a:nan
      }
    ]
  }
}
{
  name:"SELECT * FROM [{ 'a': `'\\uD83D\\uDCA9'`}, { 'a': 'Z'}, { 'a': '9' }, { 'a': 'A'}, { 'a': `\"\\U0001F4A9\"`}, { 'a': 'a'}, { 'a': 'z'}, { 'a': '0' }] ORDER BY a",
  statement:"SELECT * FROM [{ 'a': `'\\uD83D\\uDCA9'`}, { 'a': 'Z'}, { 'a': '9' }, { 'a': 'A'}, { 'a': `\"\\U0001F4A9\"`}, { 'a': 'a'}, { 'a': 'z'}, { 'a': '0' }] ORDER BY a",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
      {
        a:"0"
      },
      {
        a:"9"
      },
      {
        a:"A"
      },
      {
        a:"Z"
      },
      {
        a:"a"
      },
      {
        a:"z"
      },
      {
        a:'💩'
      },
      {
        a:"💩"
      }
    ]
  }
}
{
  name:"SELECT * FROM [{ 'a': `'\\uD83D\\uDCA9'`}, { 'a': 'Z'}, { 'a': '9' }, { 'a': 'A'}, { 'a': `\"\\U0001F4A9\"`}, { 'a': 'a'}, { 'a': 'z'}, { 'a': '0' }] ORDER BY a DESC",
  statement:"SELECT * FROM [{ 'a': `'\\uD83D\\uDCA9'`}, { 'a': 'Z'}, { 'a': '9' }, { 'a': 'A'}, { 'a': `\"\\U0001F4A9\"`}, { 'a': 'a'}, { 'a': 'z'}, { 'a': '0' }] ORDER BY a DESC",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
      {
        a:'💩'
      },
      {
        a:"💩"
      },
      {
        a:"z"
      },
      {
        a:"a"
      },
      {
        a:"Z"
      },
      {
        a:"A"
      },
      {
        a:"9"
      },
      {
        a:"0"
      }
    ]
  }
}
{
  name:"SELECT * FROM [{'a': `{{\"Z\"}}`}, {'a': `{{\"a\"}}`}, {'a': `{{\"A\"}}`}, {'a': `{{\"z\"}}`}] ORDER BY a",
  statement:"SELECT * FROM [{'a': `{{\"Z\"}}`}, {'a': `{{\"a\"}}`}, {'a': `{{\"A\"}}`}, {'a': `{{\"z\"}}`}] ORDER BY a",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
      {
        a:{{ "A" }}
      },
      {
        a:{{ "Z" }}
      },
      {
        a:{{ "a" }}
      },
      {
        a:{{ "z" }}
      }
    ]
  }
}
{
  name:"SELECT * FROM [{'a': `{{\"Z\"}}`}, {'a': `{{\"a\"}}`}, {'a': `{{\"A\"}}`}, {'a': `{{\"z\"}}`}] ORDER BY a DESC",
  statement:"SELECT * FROM [{'a': `{{\"Z\"}}`}, {'a': `{{\"a\"}}`}, {'a': `{{\"A\"}}`}, {'a': `{{\"z\"}}`}] ORDER BY a DESC",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
      {
        a:{{ "z" }}
      },
      {
        a:{{ "a" }}
      },
      {
        a:{{ "Z" }}
      },
      {
        a:{{ "A" }}
      }
    ]
  }
}
{
  name:"SELECT * FROM [ {'a': [1, 2, 3, 4]}, {'a': [1, 2]}, {'a': [1, 2, 3]}, {'a': []}] ORDER BY a",
  statement:"SELECT * FROM [ {'a': [1, 2, 3, 4]}, {'a': [1, 2]}, {'a': [1, 2, 3]}, {'a': []}] ORDER BY a",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
      {
        a:[
        ]
      },
      {
        a:[
          1,
          2
        ]
      },
      {
        a:[
          1,
          2,
          3
        ]
      },
      {
        a:[
          1,
          2,
          3,
          4
        ]
      }
    ]
  }
}
{
  name:"SELECT * FROM [ {'a': [1, 2, 3, 4]}, {'a': [1, 2]}, {'a': [1, 2, 3]}, {'a': []}] ORDER BY a DESC",
  statement:"SELECT * FROM [ {'a': [1, 2, 3, 4]}, {'a': [1, 2]}, {'a': [1, 2, 3]}, {'a': []}] ORDER BY a DESC",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
      {
        a:[
          1,
          2,
          3,
          4
        ]
      },
      {
        a:[
          1,
          2,
          3
        ]
      },
      {
        a:[
          1,
          2
        ]
      },
      {
        a:[
        ]
      }
    ]
  }
}
{
  name:"SELECT * FROM [ {'a': ['b', 'a']}, {'a': ['a', 'b']}, {'a': ['b', 'c']}, {'a': ['a', 'c']}] ORDER BY a",
  statement:"SELECT * FROM [ {'a': ['b', 'a']}, {'a': ['a', 'b']}, {'a': ['b', 'c']}, {'a': ['a', 'c']}] ORDER BY a",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
      {
        a:[
          "a",
          "b"
        ]
      },
      {
        a:[
          "a",
          "c"
        ]
      },
      {
        a:[
          "b",
          "a"
        ]
      },
      {
        a:[
          "b",
          "c"
        ]
      }
    ]
  }
}
{
  name:"SELECT * FROM [ {'a': ['b', 'a']}, {'a': ['a', 'b']}, {'a': ['b', 'c']}, {'a': ['a', 'c']}] ORDER BY a DESC",
  statement:"SELECT * FROM [ {'a': ['b', 'a']}, {'a': ['a', 'b']}, {'a': ['b', 'c']}, {'a': ['a', 'c']}] ORDER BY a DESC",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
      {
        a:[
          "b",
          "c"
        ]
      },
      {
        a:[
          "b",
          "a"
        ]
      },
      {
        a:[
          "a",
          "c"
        ]
      },
      {
        a:[
          "a",
          "b"
        ]
      }
    ]
  }
}
{
  name:"SELECT * FROM [{'a': ['a']}, {'a': [1]}, {'a': [true]}, {'a': [null]}, {'a': [{}]}, {'a': [<<>>]}, {'a': [`{{}}`]}, {'a': [[]]} ] ORDER BY a",
  statement:"SELECT * FROM [{'a': ['a']}, {'a': [1]}, {'a': [true]}, {'a': [null]}, {'a': [{}]}, {'a': [<<>>]}, {'a': [`{{}}`]}, {'a': [[]]} ] ORDER BY a",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
      {
        a:[
          true
        ]
      },
      {
        a:[
          1
        ]
      },
      {
        a:[
          "a"
        ]
      },
      {
        a:[
          {{  }}
        ]
      },
      {
        a:[
          [
          ]
        ]
      },
      {
        a:[
          {
          }
        ]
      },
      {
        a:[
          $bag::[
          ]
        ]
      },
      {
        a:[
          null
        ]
      }
    ]
  }
}
{
  name:"SELECT * FROM [{'a': ['a']}, {'a': [1]}, {'a': [true]}, {'a': [null]}, {'a': [{}]}, {'a': [<<>>]}, {'a': [`{{}}`]}, {'a': [[]]} ] ORDER BY a DESC",
  statement:"SELECT * FROM [{'a': ['a']}, {'a': [1]}, {'a': [true]}, {'a': [null]}, {'a': [{}]}, {'a': [<<>>]}, {'a': [`{{}}`]}, {'a': [[]]} ] ORDER BY a DESC",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
      {
        a:[
          null
        ]
      },
      {
        a:[
          $bag::[
          ]
        ]
      },
      {
        a:[
          {
          }
        ]
      },
      {
        a:[
          [
          ]
        ]
      },
      {
        a:[
          {{  }}
        ]
      },
      {
        a:[
          "a"
        ]
      },
      {
        a:[
          1
        ]
      },
      {
        a:[
          true
        ]
      }
    ]
  }
}
{
  name:"SELECT * FROM [{'a': {'b': 'a'}}, {'a': {'a': 'b'}}, {'a': {'b': 'c'}}, {'a': {'a': 'c'}}] ORDER BY a",
  statement:"SELECT * FROM [{'a': {'b': 'a'}}, {'a': {'a': 'b'}}, {'a': {'b': 'c'}}, {'a': {'a': 'c'}}] ORDER BY a",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
      {
        a:{
          a:"b"
        }
      },
      {
        a:{
          a:"c"
        }
      },
      {
        a:{
          b:"a"
        }
      },
      {
        a:{
          b:"c"
        }
      }
    ]
  }
}
{
  name:"SELECT * FROM [{'a': {'b': 'a'}}, {'a': {'a': 'b'}}, {'a': {'b': 'c'}}, {'a': {'a': 'c'}}] ORDER BY a DESC",
  statement:"SELECT * FROM [{'a': {'b': 'a'}}, {'a': {'a': 'b'}}, {'a': {'b': 'c'}}, {'a': {'a': 'c'}}] ORDER BY a DESC",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
      {
        a:{
          b:"c"
        }
      },
      {
        a:{
          b:"a"
        }
      },
      {
        a:{
          a:"c"
        }
      },
      {
        a:{
          a:"b"
        }
      }
    ]
  }
}
{
  name:"SELECT * FROM [{'a': {'a': 5}}, {'a': {'a': 'b'}}, {'a': {'a': true}}, {'a': {'a': []}}, {'a': {'a': {}}}, {'a': {'a': <<>>}}, {'a': {'a': `{{}}`}}, {'a': {'a': null}}] ORDER BY a",
  statement:"SELECT * FROM [{'a': {'a': 5}}, {'a': {'a': 'b'}}, {'a': {'a': true}}, {'a': {'a': []}}, {'a': {'a': {}}}, {'a': {'a': <<>>}}, {'a': {'a': `{{}}`}}, {'a': {'a': null}}] ORDER BY a",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
      {
        a:{
          a:true
        }
      },
      {
        a:{
          a:5
        }
      },
      {
        a:{
          a:"b"
        }
      },
      {
        a:{
          a:{{  }}
        }
      },
      {
        a:{
          a:[
          ]
        }
      },
      {
        a:{
          a:{
          }
        }
      },
      {
        a:{
          a:$bag::[
          ]
        }
      },
      {
        a:{
          a:null
        }
      }
    ]
  }
}
{
  name:"SELECT * FROM [{'a': {'a': 5}}, {'a': {'a': 'b'}}, {'a': {'a': true}}, {'a': {'a': []}}, {'a': {'a': {}}}, {'a': {'a': <<>>}}, {'a': {'a': `{{}}`}}, {'a': {'a': null}}] ORDER BY a DESC",
  statement:"SELECT * FROM [{'a': {'a': 5}}, {'a': {'a': 'b'}}, {'a': {'a': true}}, {'a': {'a': []}}, {'a': {'a': {}}}, {'a': {'a': <<>>}}, {'a': {'a': `{{}}`}}, {'a': {'a': null}}] ORDER BY a DESC",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
      {
        a:{
          a:null
        }
      },
      {
        a:{
          a:$bag::[
          ]
        }
      },
      {
        a:{
          a:{
          }
        }
      },
      {
        a:{
          a:[
          ]
        }
      },
      {
        a:{
          a:{{  }}
        }
      },
      {
        a:{
          a:"b"
        }
      },
      {
        a:{
          a:5
        }
      },
      {
        a:{
          a:true
        }
      }
    ]
  }
}
{
  name:"SELECT * FROM [{'a': <<5>>}, {'a': <<1>>}, {'a': <<10>>}] ORDER BY a",
  statement:"SELECT * FROM [{'a': <<5>>}, {'a': <<1>>}, {'a': <<10>>}] ORDER BY a",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
      {
        a:$bag::[
          1
        ]
      },
      {
        a:$bag::[
          5
        ]
      },
      {
        a:$bag::[
          10
        ]
      }
    ]
  }
}
{
  name:"SELECT * FROM [{'a': <<5>>}, {'a': <<1>>}, {'a': <<10>>}] ORDER BY a DESC",
  statement:"SELECT * FROM [{'a': <<5>>}, {'a': <<1>>}, {'a': <<10>>}] ORDER BY a DESC",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
      {
        a:$bag::[
          10
        ]
      },
      {
        a:$bag::[
          5
        ]
      },
      {
        a:$bag::[
          1
        ]
      }
    ]
  }
}
{
  name:"SELECT a AS b FROM [{'a': <<5>>}, {'a': <<1>>}, {'a': <<10>>}] ORDER BY b DESC",
  statement:"SELECT a AS b FROM [{'a': <<5>>}, {'a': <<1>>}, {'a': <<10>>}] ORDER BY b DESC",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
      {
        b:$bag::[
          10
        ]
      },
      {
        b:$bag::[
          5
        ]
      },
      {
        b:$bag::[
          1
        ]
      }
    ]
  }
}
{
  name:"SELECT b AS \"C\" FROM (SELECT a AS b FROM [{'a': <<5>>}, {'a': <<1>>}, {'a': <<10>>}] ORDER BY b DESC) ORDER BY \"C\"",
  statement:"SELECT b AS \"C\" FROM (SELECT a AS b FROM [{'a': <<5>>}, {'a': <<1>>}, {'a': <<10>>}] ORDER BY b DESC) ORDER BY \"C\"",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
      {
        C:$bag::[
          1
        ]
      },
      {
        C:$bag::[
          5
        ]
      },
      {
        C:$bag::[
          10
        ]
      }
    ]
  }
}
{
  name:"SELECT * FROM <<>> ORDER BY true",
  statement:"SELECT * FROM <<>> ORDER BY true",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
    ]
  }
}
{
  name:"SELECT ([]) AS ordered FROM <<0>>",
  statement:"SELECT ([]) AS ordered FROM <<0>>",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$bag::[
      {
        ordered:[
        ]
      }
    ]
  }
}
{
  name:"SELECT (<<>>) AS ordered FROM <<0>> ORDER BY true",
  statement:"SELECT (<<>>) AS ordered FROM <<0>> ORDER BY true",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
      {
        ordered:$bag::[
        ]
      }
    ]
  }
}
{
  name:"SELECT ([]) AS ordered FROM <<0>> ORDER BY true",
  statement:"SELECT ([]) AS ordered FROM <<0>> ORDER BY true",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
      {
        ordered:[
        ]
      }
    ]
  }
}
{
  name:"SELECT (<<>>) AS ordered FROM <<0>>",
  statement:"SELECT (<<>>) AS ordered FROM <<0>>",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$bag::[
      {
        ordered:$bag::[
        ]
      }
    ]
  }
}
{
  name:"SELECT (SELECT * FROM <<1>> ORDER BY true) AS ordered FROM <<0>>",
  statement:"SELECT (SELECT * FROM <<1>> ORDER BY true) AS ordered FROM <<0>>",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$bag::[
      {
        ordered:1
      }
    ]
  }
}
{
  name:"SELECT (SELECT * FROM <<1>>) AS ordered FROM <<0>> ORDER BY true",
  statement:"SELECT (SELECT * FROM <<1>>) AS ordered FROM <<0>> ORDER BY true",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
      {
        ordered:1
      }
    ]
  }
}
{
  name:"SELECT (SELECT * FROM <<1>> ORDER BY true) AS ordered FROM <<0>> ORDER BY true",
  statement:"SELECT (SELECT * FROM <<1>> ORDER BY true) AS ordered FROM <<0>> ORDER BY true",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
      {
        ordered:1
      }
    ]
  }
}
{
  name:"SELECT (SELECT * FROM <<1>>) AS ordered FROM <<0>>",
  statement:"SELECT (SELECT * FROM <<1>>) AS ordered FROM <<0>>",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:$bag::[
      {
        ordered:1
      }
    ]
  }
}
{
  name:" SELECT supplierId_nulls FROM products_sparse GROUP BY supplierId_nulls ORDER BY (SELECT supplierId_nulls FROM << 1 >>) DESC NULLS FIRST ",
  statement:" SELECT supplierId_nulls FROM products_sparse GROUP BY supplierId_nulls ORDER BY (SELECT supplierId_nulls FROM << 1 >>) DESC NULLS FIRST ",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
      {
        supplierId_nulls:null
      },
      {
        supplierId_nulls:11
      },
      {
        supplierId_nulls:10
      }
    ]
  }
}
{
  name:" SELECT supplierId_nulls FROM products_sparse GROUP BY supplierId_nulls ORDER BY (SELECT supplierId_nulls FROM << 1 >>) ASC NULLS FIRST ",
  statement:" SELECT supplierId_nulls FROM products_sparse GROUP BY supplierId_nulls ORDER BY (SELECT supplierId_nulls FROM << 1 >>) ASC NULLS FIRST ",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
      {
        supplierId_nulls:null
      },
      {
        supplierId_nulls:10
      },
      {
        supplierId_nulls:11
      }
    ]
  }
}
{
  name:" SELECT supplierId_nulls FROM products_sparse GROUP BY supplierId_nulls ORDER BY (SELECT VALUE { '_1': 1 } FROM products_sparse GROUP BY supplierId_nulls ORDER BY supplierId_nulls ASC NULLS FIRST) DESC NULLS FIRST ",
  statement:" SELECT supplierId_nulls FROM products_sparse GROUP BY supplierId_nulls ORDER BY (SELECT VALUE { '_1': 1 } FROM products_sparse GROUP BY supplierId_nulls ORDER BY supplierId_nulls ASC NULLS FIRST) DESC NULLS FIRST ",
  assert:{
    result:EvaluationSuccess,
    evalMode:[
      EvalModeCoerce,
      EvalModeError
    ],
    output:[
      {
        supplierId_nulls:null
      },
      {
        supplierId_nulls:10
      },
      {
        supplierId_nulls:11
      }
    ]
  }
}